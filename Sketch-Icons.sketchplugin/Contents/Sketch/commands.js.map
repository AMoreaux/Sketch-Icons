{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/commands.js","webpack://exports/./src/modals/modals.js","webpack://exports/./src/modals/settings.js","webpack://exports/./src/providers/artboard.js","webpack://exports/./src/providers/files.js","webpack://exports/./src/providers/libraries.js","webpack://exports/./src/providers/mask.js","webpack://exports/./src/providers/settings.js","webpack://exports/./src/providers/sharedStyles.js","webpack://exports/./src/providers/svg.js","webpack://exports/./src/utils/MochaJSDelegate.js","webpack://exports/./src/utils/analytics.js","webpack://exports/./src/utils/logger.js","webpack://exports/./src/utils/modals.js","webpack://exports/./src/utils/switchV3ToV4.js","webpack://exports/./src/utils/utils.js","webpack://exports/external \"sketch/dom\""],"names":["importIcons","context","utils","runFramework","params","importModal","call","button","listIcon","files","selectIconsFiles","length","importedIcons","artboardProvider","initImport","initImportIcons","label","withColor","analytics","action","updateIconsOnSelectedArtboards","selectedArtboardsAndSymbols","getSelectedArtboardsAndSymbols","modals","newErrorModal","replacedIcons","svg","initUpdateIconsSelectedArtboards","organizeIcons","selectedLayers","selection","initOrganizeIcons","forEach","icon","removeFromParent","addMaskOnSelectedArtboards","maskModal","maskProvider","initAddMaskOnSelectedArtboards","removeMaskOnSelectedArtboards","rootElement","removeColor","object","setSettings","settingsModal","settingsProvider","registerSettings","disabledColor","NSColor","colorWithCalibratedRed_green_blue_alpha","modalParams","messageText","informativeText","height","width","lineHeight","coeffCurrentHeight","isLibrarySource","adjustHeight","colorSource","constructBase","makeMaskRadioButtonParams","makeMaskLibraryParams","makeMaskColorPickerParams","result","modal","runModal","colorMenu","colorsMenuParams","selectedItem","color","representedObject","colorLib","colorLibsMenuParams","colorPicker","colorPickerColor","settingsValues","getSettings","usePresets","hasValue","presets","data","split","makePresetsParams","makeArtboardParams","view","addSubview","createDivider","NSMakeRect","makeSymbolParams","makeMaskCheckboxParams","setEnabledColorLibraryMenu","setEnabledColorMenu","setEnabledRadioButton","addListenerOnMaskCheckbox","convertSymbol","symbolParams","state","checkboxMaskParams","preset","presetCheckBox","push","artboardSize","parseInt","sizeBox","stringValue","iconPadding","paddingBox","artboardPadding","MSColor","blackColor","artboardModal","button1","COSAlertWindow","new","NSView","alloc","initWithFrame","addAccessoryView","setMessageText","addButtonWithTitle","setInformativeText","map","properties","padding","presetLabel","createLabel","sizeLabel","paddingLabel","makePreset","textBoxLabel","textBox","NSTextField","setStringValue","textBoxUnit","paddingBoxLabel","paddingBoxUnit","setNextKeyView","yAxis","NSButton","setState","setButtonType","NSSwitchButton","setFont","NSFont","systemFontOfSize_","setTitle","newPreset","addListenerPreset","maskCheckboxLabel","symbolCheckBox","maskCheckBox","radioButtonLabel","buttonFormat","NSButtonCell","init","NSRadioButton","matrixFormat","NSMatrix","initWithFrame_mode_prototype_numberOfRows_numberOfColumns","NSRadioModeMatrix","setCellSize","CGSizeMake","cells","setListenerRadioButon","radioParams","colorLibsLabel","colorLibsMenu","NSPopUpButton","colorMenuLabel","colorLibsMenuParamsLabel","colorsMenuParamsLabel","menu","libraries","initLibsSelectList","AppController","sharedInstance","librariesController","availableLibraries","colorPickerLabel","pickerView","setWantsLayer","layer","setBackgroundColor","CGColorCreateGenericRGB","setBorderColor","borderWidth","hexLabel","pickerButton","NSMomentaryChangeButton","setImage","getImageByColor","colorWithRed_green_blue_alpha","setBordered","main","AMOMain","setCOSJSTargetFunction","openPopover_onView_withWebview","createWebview","setStringValue_","immutableModelObject","hexValue","mask","numberOfItems","addLibraryColorsFields","removePickerButton","item","title","String","selectedCells","updateColorMenu","removeLibraryColorsFields","addPickerButton","bind","enabled","controlTextColor","setTextColor","setEnabled","getStateColor","removeFromSuperview","Object","keys","marginLeftColRight","adjust","lineOne","lineTwo","makePresetParams","prefixRootObjectParams","quantityIconsByLine","marginBetweenRootObject","convertStrokeToFillParams","replace","iconsByLine","convertStroke","prefixRootObject","presetsBox","value","setPlaceholderString","placeholder","addDescription","convertStrokeCheckboxLabel","convertStrokeCheckBox","iconByLineParamsLabel","sizeBoxUnit","marginBetweenRootObjectParamsLabel","prefixRootObjectParamsLabel","text","ajust","descriptionLabel","getPaddingAndSize","artboardParams","sizeBetweenPreset","titleFontSize","workingRootObject","createArtboard","index","name","space","getSizeBetweenIcon","y","yOrigin","x","xOrigin","rootObject","MSArtboardGroup","setName","prefix","setPositionRootObject","document","currentPage","addLayers","MSSymbolMaster","convertArtboardToSymbol","mensuration","rootObjectFrame","frame","setWidth","setHeight","setX","setY","setOrigin","setOfRootObject","Y","X","size","layerSize","origin","Math","max","clearSelection","getIconNameByNSUrl","newRootObject","ext","toString","pop","toLowerCase","importerProvider","addPDF","addBITMAP","svgData","NSString","initWithContentsOfURL","processSVG","e","logger","error","class","ancestry","MSImmutableLayerAncestry","ancestryWithMSLayer_","exportRequest","MSExportRequest","exportRequestsFromLayerAncestry_","firstObject","format","exporter","MSExporter","exporterForRequest_colorSpace_","NSColorSpace","sRGBColorSpace","initWithData_encoding","NSUTF8StringEncoding","addSVGNew","addColor","cb","rootObjects","getRootObject","withPresetTitle","setArtboardsSize","buildPrefix","newText","Array","isArray","showMessage","MSTextLayer","fontManager","NSFontManager","sharedFontManager","boldItalic","fontWithFamily_traits_weight_size","NSBoldFontMask","textFrame","addSVG","command","setValue_forKey_onLayer","artboard","valueForKey_onLayer","layers","rect","min","resizeRootObject","AVAILABLE_EXT","panel","NSOpenPanel","openPanel","setAllowsMultipleSelection","setCanChooseDirectories","setAllowedFileTypes","setCanChooseFiles","setPrompt","NSFileHandlingPanelOKButton","getFilesByUrls","URLs","urls","i","hasDirectoryPath","NSFileManager","defaultManager","contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error","pathExtension","indexOf","getLibById","getColorFromSymbol","getSymbolFromDocument","loadLibrary","libraryId","library","libraryID","loadColorFromSelectedLib","removeAllItems","getColorSymbolsFromDocument","getSharedFromSelectedLib","getSharedStylesFromDocument","loadSynchronously","addListener","libraryItem","NSMenu","currentDocument","NSMenuItem","addItem","colors","MSDocument","documentData","initColorSelectList","popColorMenu","cancelTracking","symbol","colorRGBA","style","hasEnabledFill","fills","borders","red","green","blue","alpha","image","console","log","localSymbols","sharedStyles","layerStyles","elm","symbolId","symbolID","backgroundColor","children","getMaskPropertiesFromArtboard","registerColor","settingsParams","svgHasStroke","svgProvider","convertStrokeToFill","firstLayer","cleanSvg","applySharedStyle","applyColor","applyMask","hasMask","removeMask","hasSharedStyle","removeSharedStyle","librariesProvider","usedStyle","hasEnabledBorder","enabledBorders","border","fillColor","count","removeAllStyleFills","addStylePartOfType","sharedStyle","MSImmutableColor","iconLayer","hasClippingMask","clippingMaskMode","lastLayer","colorId","objectID","convertMSColorToString","getColorParams","maskLayer","colorLibraryId","colorSymbolId","colorString","switchVersion","switchToV4","colorSymbol","colorLibrary","convertStringToMSColor","createMaskFromNean","currentRootObjectSize","MSShapeGroup","shapeWithRect","fill","getMaskSymbolFromLib","colorSymbolMaster","librairiesController","importedSymbol","MSApplicationMetadata","metadata","appVersion","shareableObjectReference","MSShareableObjectReference","referenceForShareableObject_inLibrary","importShareableObjectReference_intoDocument","importForeignSymbol_fromLibrary_intoDocument_","symbolMaster","newSymbolInstance","currentArtboardSize","setHeightRespectingProportions","setWidthRespectingProportions","disableAllFills","resetSettings","LIST_SETTINGS_FIELDS","default","field","NSUserDefaults","standardUserDefaults","setObject_forKey","setValue_forKey_onDocument","fallbackValue","objectForKey","setting","foreignStyle","getSharedStyleFromLib","localSharedStyle","originLibrary","iconParams","replaceBy","removeAllLayers","withResize","viewBox","stringWithString","getViewBox","addRectToResize","svgImporter","MSSVGImporter","prepareToImportFromData","dataUsingEncoding","svgLayer","importAsLayer","removeTxt","addLayer","resizeIcon","removeDeleteMeRect","center","svgLayerFrame","constrainProportions","pdfImporter","MSPDFImporter","prepareToImportFromURL","pdfLayer","group","MSLayerGroup","resizeToFitChildrenWithOption","pdfLayerFrame","moveLayers_intoGroup","img","Image","sketchObject","svgString","addrect","unGroup","mergeLayer","shapeGroupWidth","shapeGroupHeight","currentArtboardRect","scope","predicateTextLayers","NSPredicate","predicateWithFormat","filteredArrayUsingPredicate","loop","objectEnumerator","nextObject","ungroup","slice","filter","changeSelectionBySelectingLayers","actionsController","actionForID","doPerformAction","match","parseFloat","canConvertToOutlines","layersByConvertingToOutlines","disableAllBorders","MochaJSDelegate","selectorHandlerDict","superclass","uniqueClassName","NSUUID","UUID","UUIDString","delegateClassDesc","MOClassDescription","allocateDescriptionForClassWithName_superclass_","NSObject","registerClass","handlers","setHandlerForSelector","selectorString","func","handlerHasBeenSet","selector","NSSelectorFromString","args","regex","exec","dynamicFunction","eval","join","addInstanceMethodWithSelector_function_","removeHandlerForSelector","getHandlerForSelector","getAllHandlers","getClass","NSClassFromString","getClassInstance","kUUIDKey","uuid","jsonToQueryString","json","key","encodeURIComponent","category","payload","v","t","cid","tid","ec","ea","el","ev","send","url","NSURL","URLWithString","stringWithFormat","task","NSTask","setLaunchPath","setArguments","outputPipe","NSPipe","pipe","setStandardOutput","launch","_log","message","debug","info","warn","newModal","getMainButtonParam","createArtboardFields","createCheckBoxes","createMaskFields","appendsFields","getParams","setNextKey","viewSize","layout","textBoxPadding","getter","checkboxFields","currentItem","allFields","withLabelBottom","reverse","fields","subviews","viewCell","foreign","foreignSymbol","originalMaster","layerToSvg","getBorderColor","api","selectedDocument","clear","lastPathComponent","w","h","isDescription","initWithFrame_","setEditable_","setSelectable_","setBezeled_","setDrawsBackground_","systemFontOfSize","className","parentRoot","self","findIndex","compareElement","id","setColor","webView","WebView","windowObject","windowScriptObject","delegate","webFrame","query","evaluateWebScript","JSON","parse","decodeURIComponent","r","g","b","a","colorNS","colorMS","colorWithNSColor","setDrawsBackground","setMainFrameURL_","plugin","urlForResourceNamed","path","setFrameLoadDelegate_","divider","mocha","Mocha","sharedRuntime","frameworkName","directory","scriptPath","stringByDeletingLastPathComponent","valueForKey","loadFrameworkWithName_inDirectory","setValue_forKey_","colorSize","NSImage","lockFocus","setFill","NSBezierPath","fillRect","unlockFocus","svgExporter","SketchSVGExporter","exportLayers","hasBorder","firstEnabledBorder","stringify","string","selectedPage","rootObjectSize","unit","settings"],"mappings":"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","file":"commands.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/commands.js\");\n","import utils from './utils/utils';\nimport artboardProvider from './providers/artboard';\nimport maskProvider from './providers/mask';\nimport modals from './utils/modals';\nimport files from './providers/files';\nimport svg from './providers/svg';\nimport { importModal, maskModal } from './modals/modals';\nimport settingsModal from './modals/settings';\nimport settingsProvider from './providers/settings'\nimport analytics from './utils/analytics'\n\n/**\n * @name importIcons\n * @description trigger to start feature to import icons\n * @param context\n */\nexport function importIcons(context) {\n  utils.runFramework(context)\n  const params = importModal.call({}, context)\n  if (params.button !== 1000) return\n  params.listIcon = files.selectIconsFiles()\n  if (!params.listIcon.length) return\n  const importedIcons = artboardProvider.initImport(context, params, artboardProvider.initImportIcons)\n  const label = (params.withColor) ? 'import-mask' : 'import';\n  analytics.action(context, 'icons', 'import', label, importedIcons)\n}\n\n/**\n * @name updateIconsOnSelectedArtboards\n * @description trigger to start feature to update icon\n * @param context\n */\nexport function updateIconsOnSelectedArtboards(context) {\n  const selectedArtboardsAndSymbols = utils.getSelectedArtboardsAndSymbols(context);\n  if (selectedArtboardsAndSymbols.length === 0) return modals.newErrorModal('No artboards selected', 'Please select one or more artboards to replace icons.')\n  let params = {}\n  params.listIcon = files.selectIconsFiles()\n  if (!params.listIcon.length) return\n  if (selectedArtboardsAndSymbols.length > params.listIcon.length && params.listIcon.length !== 1) return modals.newErrorModal('Too much artboards selected', 'Please select as many artboards as icons.')\n  if (selectedArtboardsAndSymbols.length < params.listIcon.length && params.listIcon.length !== 1) return modals.newErrorModal('Too much icons selected', 'Please select as many icons as artboards.')\n  const replacedIcons = svg.initUpdateIconsSelectedArtboards(context, selectedArtboardsAndSymbols, params)\n  analytics.action(context, 'icons', 'replace', 'replace', replacedIcons)\n}\n\n/**\n * @name organizeIcons\n * @param context\n */\nexport function organizeIcons(context) {\n  const selectedLayers = context.selection;\n  if (selectedLayers.length === 0) return modals.newErrorModal('No layers selected', 'Please select one or more layers.')\n  utils.runFramework(context)\n  const params = importModal.call({}, context)\n  if (params.button !== 1000) return\n  params.listIcon = selectedLayers\n  artboardProvider.initImport(context, params, artboardProvider.initOrganizeIcons)\n  params.listIcon.forEach(icon => icon.removeFromParent())\n  const label = (params.withColor) ? 'organize-mask' : 'organize';\n  analytics.action(context, 'icons', 'organize', label, params.listIcon.length)\n}\n\n/**\n * @name addMaskOnSelectedArtboards\n * @description trigger to start feature to add mask\n * @param context\n */\nexport function addMaskOnSelectedArtboards(context) {\n  utils.runFramework(context)\n  const selectedArtboardsAndSymbols = utils.getSelectedArtboardsAndSymbols(context);\n  if (selectedArtboardsAndSymbols.length === 0) return modals.newErrorModal('No artboards selected', 'Please select one or more artboards to add a mask.')\n  const params = maskModal.call({}, context)\n  if (params.button !== 1000) return\n  maskProvider.initAddMaskOnSelectedArtboards(context, params, selectedArtboardsAndSymbols)\n  analytics.action(context, 'icons', 'mask', 'mask', selectedArtboardsAndSymbols.length)\n}\n\n/**\n * @name removeMaskOnSelectedArtboards\n * @description remove masks layer\n * @param context\n */\nexport function removeMaskOnSelectedArtboards(context) {\n  const selectedArtboardsAndSymbols = utils.getSelectedArtboardsAndSymbols(context);\n  if (selectedArtboardsAndSymbols.length === 0) return modals.newErrorModal('No artboards selected', 'Please select one or more artboards to add a mask.')\n  selectedArtboardsAndSymbols.forEach((rootElement) => {\n    maskProvider.removeColor(context, rootElement.object)\n  })\n  analytics.action(context, 'icons', 'remove mask', 'remove mask', selectedArtboardsAndSymbols.length)\n}\n\n/**\n * @name setSettings\n * @description set settings\n * @param context\n */\nexport function setSettings(context) {\n  const params = settingsModal.call({}, context)\n  if (params.button === 1001) return\n  settingsProvider.registerSettings(context, params)\n  analytics.action(context, 'settings', 'settings', 'settings')\n}\n","import utils from '../utils/utils'\nimport logger from '../utils/logger'\nimport libraries from '../providers/libraries'\nimport settingsProvider from '../providers/settings'\n\nconst disabledColor = NSColor.colorWithCalibratedRed_green_blue_alpha(170 / 255, 170 / 255, 170 / 255, 1)\nexport {\n  setEnabledColorMenu,\n  importModal,\n  maskModal,\n  constructBase\n}\n\nfunction maskModal(context) {\n  this.modalParams = {\n    messageText: 'Configure your color mask',\n    informativeText: 'Select your library and choose a color to apply as mask. Your layers will all be combined.',\n    height: 190,\n    width: 300,\n    lineHeight: 35\n  };\n\n  this.coeffCurrentHeight = 0;\n  this.isLibrarySource = true;\n  this.adjustHeight = 0;\n  this.colorSource = 'sharedStyle';\n\n  constructBase.call(this, 'Continue');\n  makeMaskRadioButtonParams.call(this, context);\n  makeMaskLibraryParams.call(this, context);\n  makeMaskColorPickerParams.call(this, context);\n\n  const result = {\n    button: this.modal.runModal()\n  };\n\n  if (this.isLibrarySource) {\n    let colorMenu = this.colorsMenuParams.selectedItem();\n    result.color = (colorMenu) ? this.colorsMenuParams.representedObject() : null;\n\n    let colorLib = this.colorLibsMenuParams.selectedItem();\n    result.colorLib = (colorLib) ? this.colorLibsMenuParams.representedObject() : null;\n\n    result.colorSource = this.colorSource;\n  } else {\n    result.colorPicker = this.colorPickerColor\n  }\n\n  return result\n}\n\nfunction importModal(context) {\n  this.settingsValues = settingsProvider.getSettings(context, 'default');\n\n  this.modalParams = {\n    messageText: 'Configure your import',\n    informativeText: 'Your icons will be arranged in artboards. Set size and padding of your artboards.',\n    width: 300,\n    lineHeight: 35\n  };\n\n  const usePresets = settingsProvider.hasValue(this.settingsValues.presets)\n  this.modalParams.height = settingsProvider.hasValue(this.settingsValues.presets) ? 330 + this.settingsValues.presets.data.split(',').length * 30 : 330\n\n  this.coeffCurrentHeight = 0;\n  this.isLibrarySource = true;\n  this.adjustHeight = 0;\n  this.colorSource = 'sharedStyle';\n\n  constructBase.call(this, 'Continue');\n  if (usePresets) {\n    makePresetsParams.call(this)\n  } else {\n    makeArtboardParams.call(this)\n  }\n\n  this.view.addSubview(utils.createDivider(NSMakeRect(0, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight - 10, this.modalParams.width, 1)));\n  this.adjustHeight = 5\n  makeSymbolParams.call(this)\n  this.view.addSubview(utils.createDivider(NSMakeRect(0, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight - 15, this.modalParams.width, 1)));\n  this.adjustHeight = 8\n  makeMaskCheckboxParams.call(this)\n  makeMaskRadioButtonParams.call(this)\n  makeMaskLibraryParams.call(this, context)\n  setEnabledColorLibraryMenu.call(this, false)\n  setEnabledColorMenu.call(this, false)\n  setEnabledRadioButton.call(this, false)\n  makeMaskColorPickerParams.call(this, context)\n  addListenerOnMaskCheckbox.call(this)\n\n  const result = {\n    button: this.modal.runModal(),\n    convertSymbol: this.symbolParams.state(),\n    withColor: !!this.checkboxMaskParams.state()\n  }\n\n  if (usePresets) {\n    result.presets = []\n    this.presets.forEach(preset => {\n      if (preset.presetCheckBox.state()) {\n        result.presets.push({\n          artboardSize: parseInt(preset.sizeBox.stringValue()),\n          iconPadding: parseInt(preset.paddingBox.stringValue())\n        })\n      }\n    })\n  } else {\n    result.artboardSize = parseInt(this.artboardSize.stringValue())\n    result.iconPadding = parseInt(this.artboardPadding.stringValue())\n  }\n\n  if (result.withColor && this.isLibrarySource) {\n    let colorMenu = this.colorsMenuParams.selectedItem()\n    result.color = (colorMenu) ? this.colorsMenuParams.representedObject() : null\n\n    let colorLib = this.colorLibsMenuParams.selectedItem()\n    result.colorLib = (colorLib) ? this.colorLibsMenuParams.representedObject() : null\n\n    if (!result.color) result.withColor = false\n    result.colorSource = this.colorSource;\n  } else if (result.withColor) {\n    result.colorPicker = this.colorPickerColor || MSColor.blackColor()\n  }\n  return result\n}\n\nfunction artboardModal(context) {\n  this.settingsValues = settingsProvider.getSettings(context, 'placeholder')\n\n  this.modalParams = {\n    messageText: 'Configure your icons',\n    informativeText: 'Your icons will be moved in artboards. Set size and padding of your artboards.',\n    height: 100,\n    width: 300,\n    lineHeight: 35\n  }\n\n  this.coeffCurrentHeight = 0\n  this.adjustHeight = 0\n\n  constructBase()\n  makeArtboardParams()\n\n  return {\n    button: this.modal.runModal(),\n    artboardSize: parseInt(this.artboardSize.stringValue()),\n    iconPadding: parseInt(this.artboardPadding.stringValue()),\n  }\n}\n\nfunction constructBase(button1 = 'Continue') {\n\n  this.modal = COSAlertWindow.new();\n\n  this.view = NSView.alloc().initWithFrame(NSMakeRect(0, 0, this.modalParams.width, this.modalParams.height));\n\n  this.modal.addAccessoryView(this.view);\n  this.modal.setMessageText(this.modalParams.messageText);\n  this.modal.addButtonWithTitle(button1);\n  this.modal.setInformativeText(this.modalParams.informativeText);\n  this.modal.addButtonWithTitle('Cancel');\n}\n\nfunction makePresetsParams() {\n  const presets = this.settingsValues.presets.data.split(',').map(preset => {\n    const properties = preset.split('-')\n    return {\n      artboardSize: properties[0],\n      padding: (properties[1]) ? properties[1] : 0\n    }\n  })\n\n  this.presets = []\n\n  const presetLabel = utils.createLabel(`Presets`, 0, this.modalParams.height - this.modalParams.lineHeight, 150, 20)\n  this.view.addSubview(presetLabel)\n\n  const sizeLabel = utils.createLabel(`Size`, 180, this.modalParams.height - this.modalParams.lineHeight, 100, 20)\n  this.view.addSubview(sizeLabel)\n\n  const paddingLabel = utils.createLabel(`Padding`, 240, this.modalParams.height - this.modalParams.lineHeight, 100, 20)\n  this.view.addSubview(paddingLabel)\n\n  this.coeffCurrentHeight++\n\n  presets.forEach((preset) => {\n    this.coeffCurrentHeight++\n    makePreset.call(this, preset, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight, this)\n  })\n}\n\nfunction makeArtboardParams() {\n\n  this.coeffCurrentHeight++\n\n  const textBoxLabel = utils.createLabel('Artboard Size', 0, this.modalParams.height - this.modalParams.lineHeight, 150, 20)\n  this.view.addSubview(textBoxLabel)\n  const textBox = NSTextField.alloc().initWithFrame(NSMakeRect(150, this.modalParams.height - this.modalParams.lineHeight, 50, 20));\n  textBox.setStringValue(24);\n  this.view.addSubview(textBox)\n  const textBoxUnit = utils.createLabel('px', 205, this.modalParams.height - this.modalParams.lineHeight, 50, 20)\n  this.view.addSubview(textBoxUnit)\n\n  this.coeffCurrentHeight++\n\n  const paddingBoxLabel = utils.createLabel('Artboard Padding', 0, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight, 150, 20)\n  this.view.addSubview(paddingBoxLabel)\n  const paddingBox = NSTextField.alloc().initWithFrame(NSMakeRect(150, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight, 50, 20));\n  paddingBox.setStringValue(0);\n  this.view.addSubview(paddingBox)\n  const paddingBoxUnit = utils.createLabel('px', 205, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight, 50, 20)\n  this.view.addSubview(paddingBoxUnit)\n\n  this.artboardPadding = paddingBox\n  this.artboardSize = textBox\n\n  this.artboardSize.setNextKeyView(this.artboardPadding)\n}\n\nfunction makePreset(preset, yAxis) {\n\n  const presetCheckBox = NSButton.alloc().initWithFrame(NSMakeRect(150, yAxis, 30, 20));\n  presetCheckBox.setState(true);\n  presetCheckBox.setButtonType(NSSwitchButton);\n  presetCheckBox.setFont(NSFont.systemFontOfSize_(13));\n  presetCheckBox.setTitle('')\n\n  this.view.addSubview(presetCheckBox)\n\n  const sizeBox = NSTextField.alloc().initWithFrame(NSMakeRect(180, yAxis, 50, 20));\n  sizeBox.setStringValue(preset.artboardSize);\n  this.view.addSubview(sizeBox)\n\n  const paddingBox = NSTextField.alloc().initWithFrame(NSMakeRect(240, yAxis, 50, 20));\n  paddingBox.setStringValue(preset.padding);\n  this.view.addSubview(paddingBox)\n\n  const newPreset = { sizeBox, paddingBox, presetCheckBox }\n\n  addListenerPreset(newPreset)\n\n  this.presets.push(newPreset)\n}\n\nfunction makeSymbolParams() {\n\n  this.coeffCurrentHeight++\n\n  const maskCheckboxLabel = utils.createLabel('Symbols', 0, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight - this.adjustHeight, 150, 20)\n  this.view.addSubview(maskCheckboxLabel)\n\n  const symbolCheckBox = NSButton.alloc().initWithFrame(NSMakeRect(150, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight - this.adjustHeight, 200, 20));\n  symbolCheckBox.setButtonType(NSSwitchButton);\n  symbolCheckBox.setState(true);\n  symbolCheckBox.setFont(NSFont.systemFontOfSize_(13));\n  symbolCheckBox.setTitle('Convert to symbol')\n  this.view.addSubview(symbolCheckBox);\n\n  this.symbolParams = symbolCheckBox\n}\n\nfunction makeMaskCheckboxParams() {\n\n  this.coeffCurrentHeight++\n\n  const maskCheckboxLabel = utils.createLabel('Color', 0, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight - this.adjustHeight, 150, 20)\n  this.view.addSubview(maskCheckboxLabel)\n\n  const maskCheckBox = NSButton.alloc().initWithFrame(NSMakeRect(150, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight - this.adjustHeight, 200, 20));\n  maskCheckBox.setButtonType(NSSwitchButton);\n  maskCheckBox.setState(false);\n  maskCheckBox.setFont(NSFont.systemFontOfSize_(13));\n  maskCheckBox.setTitle('Apply color')\n  this.view.addSubview(maskCheckBox);\n\n  this.checkboxMaskParams = maskCheckBox\n}\n\nfunction makeMaskRadioButtonParams(context) {\n\n  this.coeffCurrentHeight++;\n  this.coeffCurrentHeight++;\n  this.coeffCurrentHeight++;\n\n  const radioButtonLabel = utils.createLabel('Color Source', 0, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight - this.adjustHeight + 40, 150, 20)\n  this.view.addSubview(radioButtonLabel)\n\n  const buttonFormat = NSButtonCell.alloc().init();\n  buttonFormat.setButtonType(NSRadioButton);\n  const matrixFormat = NSMatrix.alloc().initWithFrame_mode_prototype_numberOfRows_numberOfColumns(\n    NSMakeRect(150, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight - this.adjustHeight, 300, 90),\n    NSRadioModeMatrix,\n    buttonFormat,\n    3,\n    1\n  );\n  matrixFormat.setCellSize(CGSizeMake(300, 25));\n  const cells = matrixFormat.cells();\n  cells[0].setTitle(\"From Shared Style\");\n  cells[0].setFont(NSFont.systemFontOfSize_(13));\n  cells[1].setTitle(\"From Symbol\");\n  cells[1].setFont(NSFont.systemFontOfSize_(13));\n  cells[2].setTitle(\"From Color picker\");\n  cells[2].setFont(NSFont.systemFontOfSize_(13));\n\n  this.view.addSubview(matrixFormat);\n\n  setListenerRadioButon.call(this, cells, context)\n\n  this.radioParams = matrixFormat\n  this.radioButtonLabel = radioButtonLabel\n}\n\nfunction makeMaskLibraryParams(context) {\n\n  this.coeffCurrentHeight++\n\n  const colorLibsLabel = utils.createLabel('Document Source', 0, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight - this.adjustHeight, 150, 25)\n  this.view.addSubview(colorLibsLabel)\n  const colorLibsMenu = NSPopUpButton.alloc().initWithFrame(NSMakeRect(150, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight - this.adjustHeight, 130, 30));\n\n  this.coeffCurrentHeight++\n\n  const colorMenuLabel = utils.createLabel('Select Color', 0, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight - this.adjustHeight, 150, 25)\n  this.view.addSubview(colorMenuLabel)\n  const colorMenu = NSPopUpButton.alloc().initWithFrame(NSMakeRect(150, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight - this.adjustHeight, 130, 30));\n\n  this.view.addSubview(colorLibsMenu);\n  this.view.addSubview(colorMenu);\n\n  this.colorLibsMenuParams = colorLibsMenu\n  this.colorsMenuParams = colorMenu\n  this.colorLibsMenuParamsLabel = colorLibsLabel\n  this.colorsMenuParamsLabel = colorMenuLabel\n\n  colorLibsMenu.menu = libraries.initLibsSelectList.call(this, context, AppController.sharedInstance().librariesController().availableLibraries(), colorMenu);\n}\n\nfunction makeMaskColorPickerParams(context) {\n\n  const colorPickerLabel = utils.createLabel('Color picker', 0, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight - this.adjustHeight + 20, 150, 20)\n\n  const pickerView = NSView.alloc().initWithFrame(NSMakeRect(150, this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight - this.adjustHeight, 130, 60));\n  pickerView.setWantsLayer(true)\n  pickerView.layer().setBackgroundColor(CGColorCreateGenericRGB(1, 1, 1, 1.0))\n  pickerView.layer().setBorderColor(CGColorCreateGenericRGB(186 / 255, 186 / 255, 186 / 255, 1))\n  pickerView.layer().borderWidth = 1\n\n  const hexLabel = utils.createLabel('#000000', 60, 20, 100, 20)\n  pickerView.addSubview(hexLabel)\n\n  const pickerButton = NSButton.alloc().initWithFrame(NSMakeRect(5, 15, 50, 30));\n  pickerButton.setButtonType(NSMomentaryChangeButton)\n  pickerButton.setImage(utils.getImageByColor(NSColor.colorWithRed_green_blue_alpha(0, 0, 0, 1), {\n    width: 40,\n    height: 30\n  }))\n\n  pickerButton.setBordered(false);\n\n  const main = AMOMain.alloc().init();\n\n  pickerButton.setCOSJSTargetFunction(() => {\n    main.openPopover_onView_withWebview(pickerButton, this.view, utils.createWebview(context, pickerButton, (color) => {\n      this.colorPickerColor = color\n      hexLabel.setStringValue_(`#${color.immutableModelObject().hexValue()}`)\n    }))\n  })\n\n  pickerView.addSubview(pickerButton)\n\n  this.pickerView = pickerView\n  this.colorPickerLabel = colorPickerLabel\n}\n\nfunction addListenerOnMaskCheckbox() {\n\n\n  this.checkboxMaskParams.setCOSJSTargetFunction((mask) => {\n    if (mask.state()) {\n      setEnabledRadioButton.call(this, true)\n      setEnabledColorLibraryMenu.call(this, true)\n      if (this.colorsMenuParams.numberOfItems() > 0) setEnabledColorMenu.call(this, true)\n    } else {\n      setEnabledRadioButton.call(this, false)\n      setEnabledColorLibraryMenu.call(this, false)\n      setEnabledColorMenu.call(this, false)\n      addLibraryColorsFields.call(this)\n      removePickerButton.call(this)\n      this.radioParams.cells()[0].state = true\n      this.radioParams.cells()[1].state = false\n      this.radioParams.cells()[2].state = false\n    }\n  });\n}\n\nfunction setListenerRadioButon(cells, context) {\n  function setState(item) {\n    const title = String(item.selectedCells()[0].title());\n    if (title === 'From Symbol') {\n      addLibraryColorsFields.call(this)\n      removePickerButton.call(this)\n      this.isLibrarySource = true\n      this.colorSource = 'symbol';\n      libraries.updateColorMenu.call(this, this.colorLibsMenuParams.selectedItem(), this.colorsMenuParams)\n    } else if (title === 'From Color picker') {\n      removeLibraryColorsFields.call(this)\n      addPickerButton.call(this)\n      this.isLibrarySource = false\n    } else {\n      this.isLibrarySource = true\n      addLibraryColorsFields.call(this)\n      removePickerButton.call(this)\n      this.colorSource = 'sharedStyle';\n      libraries.updateColorMenu.call(this, this.colorLibsMenuParams.selectedItem(), this.colorsMenuParams)\n    }\n  }\n\n  this.context = context;\n  cells[0].setCOSJSTargetFunction(setState.bind(this));\n  cells[1].setCOSJSTargetFunction(setState.bind(this));\n  cells[2].setCOSJSTargetFunction(setState.bind(this));\n}\n\nfunction setEnabledColorLibraryMenu(enabled) {\n  const color = (enabled) ? NSColor.controlTextColor() : disabledColor\n  this.colorLibsMenuParamsLabel.setTextColor(color)\n  this.colorLibsMenuParams.setEnabled(enabled)\n\n}\n\nfunction setEnabledColorMenu(enabled) {\n  this.colorsMenuParamsLabel.setTextColor(getStateColor(enabled))\n  this.colorsMenuParams.setEnabled(enabled)\n}\n\nfunction setEnabledRadioButton(enabled) {\n  this.radioParams.setEnabled(enabled)\n  this.radioButtonLabel.setTextColor(getStateColor(enabled))\n}\n\nfunction removeLibraryColorsFields() {\n  this.colorLibsMenuParams.removeFromSuperview()\n  this.colorsMenuParams.removeFromSuperview()\n  this.colorLibsMenuParamsLabel.removeFromSuperview()\n  this.colorsMenuParamsLabel.removeFromSuperview()\n}\n\nfunction addLibraryColorsFields() {\n  this.view.addSubview(this.colorLibsMenuParams);\n  this.view.addSubview(this.colorsMenuParams);\n  this.view.addSubview(this.colorLibsMenuParamsLabel);\n  this.view.addSubview(this.colorsMenuParamsLabel);\n}\n\nfunction addPickerButton() {\n  this.view.addSubview(this.pickerView);\n  this.view.addSubview(this.colorPickerLabel);\n\n}\n\nfunction removePickerButton() {\n  this.pickerView.removeFromSuperview()\n  this.colorPickerLabel.removeFromSuperview()\n}\n\nfunction getStateColor(enabled) {\n  return (enabled) ? NSColor.controlTextColor() : disabledColor\n}\n\nfunction addListenerPreset(newPreset) {\n  newPreset.presetCheckBox.setCOSJSTargetFunction(() => {\n    newPreset.sizeBox.setEnabled(newPreset.presetCheckBox.state())\n    newPreset.paddingBox.setEnabled(newPreset.presetCheckBox.state())\n\n  })\n}\n","import { constructBase } from './modals';\nimport utils from '../utils/utils';\nimport settingsProvider from \"../providers/settings\";\n\nexport default settingsModal;\n\nfunction settingsModal(context) {\n\n\n  this.settingsValues = settingsProvider.getSettings(context, 'placeholder')\n\n  this.modalParams = {\n    messageText: 'Settings',\n    informativeText: 'Customize your imports using presets and other features.',\n    height: (Object.keys(this.settingsValues).length + 1) * 73,\n    width: 340,\n    lineHeight: 45\n  };\n\n  this.coeffCurrentHeight = 0;\n  this.adjustHeight = 0;\n  this.marginLeftColRight = 130;\n  this.adjust = -5;\n  this.lineOne = 15;\n  this.lineTwo = 0;\n\n  constructBase.call(this, 'Save');\n\n  makePresetParams.call(this);\n  prefixRootObjectParams.call(this)\n  quantityIconsByLine.call(this)\n  marginBetweenRootObject.call(this)\n  convertStrokeToFillParams.call(this)\n\n  return {\n    button: this.modal.runModal(),\n    presets: String(this.presets.stringValue()).replace(/ /g, ''),\n    iconsByLine: parseInt(this.iconsByLine.stringValue()) || null,\n    convertStroke: this.convertStroke.state(),\n    marginBetweenRootObject: this.marginBetweenRootObject.stringValue().replace(/ /g, ''),\n    prefixRootObject: this.prefixRootObject.stringValue()\n  };\n}\n\nfunction makePresetParams() {\n  this.coeffCurrentHeight++;\n  let yAxis = this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight + this.adjust\n\n  const textBoxLabel = utils.createLabel('Size Presets', 0, yAxis, this.marginLeftColRight, 20);\n  this.view.addSubview(textBoxLabel);\n\n  const presetsBox = NSTextField.alloc().initWithFrame(\n    NSMakeRect(this.marginLeftColRight, yAxis, 145, 21)\n  );\n\n  if (settingsProvider.hasValue(this.settingsValues.presets)) {\n    presetsBox.setStringValue(String(this.settingsValues.presets.value));\n  } else {\n    presetsBox.setPlaceholderString(String(this.settingsValues.presets.placeholder));\n  }\n\n  this.view.addSubview(presetsBox);\n\n  this.coeffCurrentHeight++;\n  addDescription.call(this, 'Set your artboard sizes and padding.', this.lineOne)\n  addDescription.call(this, 'Format: size-padding', this.lineTwo)\n\n  this.presets = presetsBox\n\n}\n\nfunction convertStrokeToFillParams() {\n\n  this.coeffCurrentHeight++;\n  const yAxis = this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight + 30\n\n  const convertStrokeCheckboxLabel = utils.createLabel('Stroke to Fill', 0, yAxis, this.marginLeftColRight, 20)\n  this.view.addSubview(convertStrokeCheckboxLabel);\n\n  const convertStrokeCheckBox = NSButton.alloc().initWithFrame(\n    NSMakeRect(this.marginLeftColRight, yAxis, 200, 21)\n  );\n  convertStrokeCheckBox.setButtonType(NSSwitchButton);\n  convertStrokeCheckBox.setState(parseInt(this.settingsValues.convertStroke.data));\n  convertStrokeCheckBox.setFont(NSFont.systemFontOfSize_(13));\n  convertStrokeCheckBox.setTitle('Auto-Convert');\n  this.view.addSubview(convertStrokeCheckBox);\n\n  this.coeffCurrentHeight++;\n  addDescription.call(this, 'This will allow you to add a dynamic color ', this.lineOne + 30)\n  addDescription.call(this, 'over your outlined icons.', this.lineTwo + 30)\n\n  this.convertStroke = convertStrokeCheckBox;\n}\n\nfunction quantityIconsByLine() {\n  this.coeffCurrentHeight++;\n  const yAxis = this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight + this.adjust\n\n  const iconByLineParamsLabel = utils.createLabel('Icons Grid', 0, yAxis, this.marginLeftColRight, 20);\n  this.view.addSubview(iconByLineParamsLabel);\n  const sizeBox = NSTextField.alloc().initWithFrame(\n    NSMakeRect(this.marginLeftColRight, yAxis, 50, 21)\n  );\n\n  if (String(this.settingsValues.iconsByLine.value) === 'null') {\n    sizeBox.setPlaceholderString('10')\n  } else {\n    sizeBox.setStringValue(String(this.settingsValues.iconsByLine.value));\n  }\n\n  this.view.addSubview(sizeBox);\n  const sizeBoxUnit = utils.createLabel('icons per row', this.marginLeftColRight + 55, yAxis, 100, 20)\n  this.view.addSubview(sizeBoxUnit);\n\n  this.coeffCurrentHeight++;\n  addDescription.call(this,'Set the number of imported icons per row.', this.lineOne)\n  // addDescription('Format: size-padding', this.lineTwo)\n\n  this.iconsByLine = sizeBox;\n}\n\nfunction marginBetweenRootObject() {\n  this.coeffCurrentHeight++;\n  const yAxis = this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight + 15\n\n  const marginBetweenRootObjectParamsLabel = utils.createLabel('Spacing', 0, yAxis, this.marginLeftColRight, 20);\n  this.view.addSubview(marginBetweenRootObjectParamsLabel);\n  const sizeBox = NSTextField.alloc().initWithFrame(\n    NSMakeRect(this.marginLeftColRight, yAxis, 50, 21)\n  );\n\n  if (settingsProvider.hasValue(this.settingsValues.marginBetweenRootObject)) {\n    sizeBox.setStringValue(String(this.settingsValues.marginBetweenRootObject.value));\n  } else {\n    sizeBox.setPlaceholderString(String(this.settingsValues.marginBetweenRootObject.placeholder));\n  }\n\n  this.view.addSubview(sizeBox);\n  const sizeBoxUnit = utils.createLabel('px or %', this.marginLeftColRight + 55, yAxis, 100, 20)\n  this.view.addSubview(sizeBoxUnit);\n\n  this.coeffCurrentHeight++;\n  addDescription.call(this,'Set the spacing between the imported icons.', this.lineOne + 15)\n  // addDescription('Format: size-padding', this.lineTwo)\n\n  this.marginBetweenRootObject = sizeBox;\n}\n\nfunction prefixRootObjectParams() {\n  this.coeffCurrentHeight++;\n  const yAxis = this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight + this.adjust\n\n  const prefixRootObjectParamsLabel = utils.createLabel('Add Prefix ', 0, yAxis, this.marginLeftColRight, 20);\n  this.view.addSubview(prefixRootObjectParamsLabel);\n  const sizeBox = NSTextField.alloc().initWithFrame(\n    NSMakeRect(this.marginLeftColRight, yAxis, 145, 21)\n  );\n\n  if (settingsProvider.hasValue(this.settingsValues.prefixRootObject)) {\n    sizeBox.setStringValue(String(this.settingsValues.prefixRootObject.value));\n  } else {\n    sizeBox.setPlaceholderString(String(this.settingsValues.prefixRootObject.placeholder));\n  }\n\n  this.view.addSubview(sizeBox);\n\n  this.coeffCurrentHeight++;\n  addDescription.call(this, 'Add a path structure to the name of yours icons.', this.lineOne)\n  addDescription.call(this, '$size is equal to the size of the artboard.', this.lineTwo)\n\n  this.prefixRootObject = sizeBox;\n}\n\n\nfunction addDescription(text, ajust) {\n\n  const yAxis = this.modalParams.height - this.modalParams.lineHeight * this.coeffCurrentHeight + ajust\n\n  const descriptionLabel = utils.createLabel(text, 0, yAxis, 400, 20, true);\n\n  this.view.addSubview(descriptionLabel);\n}\n","import utils from '../utils/utils';\nimport logger from '../utils/logger';\nimport importerProvider from '../providers/svg';\nimport maskProvider from './mask';\nimport settingsProvider from './settings';\n// import dom from 'sketch'\n\n// import { Text } from 'sketch'\n\nexport default {\n  initImport,\n  initImportIcons,\n  getPaddingAndSize,\n  initOrganizeIcons\n};\n\nconst artboardParams = {\n  iconsByLine: 10,\n  sizeBetweenPreset: 200,\n  titleFontSize: 32\n};\n\nconst workingRootObject = [];\n\n/**\n * @name createArtboard\n * @description set position and size and create artboard\n * @param context {Object} :\n * @param index {Number}\n * @param name {String}\n * @param params {Object}\n * @returns {Object} : MSArtboardGroup\n */\nfunction createArtboard(context, index, name, params) {\n\n  const marginBetweenRootObject = settingsProvider.getSettings(context, 'default').marginBetweenRootObject;\n  const space = utils.getSizeBetweenIcon(artboardParams.width, marginBetweenRootObject.data)\n\n  if (index === 0) {\n    artboardParams.y = params.yOrigin;\n    artboardParams.x = params.xOrigin || 0;\n  }\n  else if (index % artboardParams.iconsByLine === 0) {\n    artboardParams.y += space;\n    artboardParams.x = params.xOrigin || 0;\n  } else {\n    artboardParams.x += space;\n  }\n\n  const rootObject = MSArtboardGroup.new();\n  rootObject.setName(`${params.prefix}${name}`);\n\n  setPositionRootObject(rootObject, artboardParams)\n\n  context.document.currentPage().addLayers([rootObject]);\n\n  return params.convertSymbol\n    ? MSSymbolMaster.convertArtboardToSymbol(rootObject)\n    : rootObject;\n}\n\n/**\n * @name setPositionRootObject\n * @param rootObject\n * @param mensuration\n */\nfunction setPositionRootObject(rootObject, mensuration) {\n\n  const rootObjectFrame = rootObject.frame();\n  rootObjectFrame.setWidth(mensuration.width);\n  rootObjectFrame.setHeight(mensuration.height);\n  rootObjectFrame.setX(mensuration.x);\n  rootObjectFrame.setY(mensuration.y);\n}\n\nfunction setOrigin(context, setOfRootObject) {\n  const Y = [];\n  const X = [];\n  let size = 0;\n\n  setOfRootObject.forEach(layer => {\n    const layerSize = layer.frame().height();\n    const origin = layer.origin()\n    Y.push(origin.y - size);\n    X.push(origin.x - size);\n    if (layerSize > size) size = layerSize;\n  });\n\n\n  const yOrigin = (Y.length !== 0) ? Math.max(...Y) : 0\n  const xOrigin = (X.length !== 0) ? Math.max(...X) + size : 0\n\n  return {\n    yOrigin: (setOfRootObject.length === 0) ? yOrigin : yOrigin + 100 + size,\n    xOrigin: (setOfRootObject.length === 0) ? xOrigin : xOrigin + 100 + size\n  }\n}\n\n\n/**\n * @name initImportIcons\n * @description main function to import multiple icons and mask on new artboard\n * @param context {Object}\n * @param params: {Object}\n */\nasync function initImportIcons(context, params) {\n  utils.clearSelection(context);\n  params.listIcon.forEach((icon, index) => {\n    try {\n      const name = utils.getIconNameByNSUrl(icon)\n      const newRootObject = createArtboard(context, index, name, params);\n      const ext = String(icon.toString().split('.').pop()).toLowerCase()\n      if (ext === 'pdf') return importerProvider.addPDF(context, newRootObject, params, icon);\n      if (ext === 'png' || ext === 'jpg' || ext === 'jpeg') return importerProvider.addBITMAP(context, newRootObject, params, icon)\n      const svgData = String(NSString.alloc().initWithContentsOfURL(icon));\n      processSVG(context, newRootObject, params, svgData)\n      workingRootObject.push(newRootObject)\n    } catch (e) {\n      logger.error(e);\n    }\n  });\n  utils.clearSelection(context);\n}\n\n/**\n * @name initOrganizeIcons\n * @param context\n * @param params\n */\nfunction initOrganizeIcons(context, params) {\n\n  params.listIcon.forEach(async (icon, index) => {\n    try {\n      const newRootObject = createArtboard(context, index, icon.name(), params);\n      if (String(icon.class()) === 'MSBitmapLayer') return importerProvider.addBITMAP(context, newRootObject, params, icon)\n      const ancestry = MSImmutableLayerAncestry.ancestryWithMSLayer_(icon);\n      const exportRequest = MSExportRequest.exportRequestsFromLayerAncestry_(ancestry).firstObject();\n      exportRequest.format = 'svg';\n      const exporter = MSExporter.exporterForRequest_colorSpace_(exportRequest, NSColorSpace.sRGBColorSpace());\n      const svgData = NSString.alloc().initWithData_encoding(exporter.data(), NSUTF8StringEncoding);\n      // await processSVG(context, newRootObject, params, String(svgData));\n      importerProvider.addSVGNew(context, newRootObject, params, svgData, true);\n      if (params.withColor) maskProvider.addColor(context, newRootObject, params);\n      workingRootObject.push(newRootObject)\n    } catch (e) {\n      logger.error(e);\n    }\n  })\n}\n\n/**\n * @name initImport\n * @param context\n * @param params\n * @param cb\n */\nfunction initImport(context, params, cb) {\n  const rootObjects = utils.getRootObject(context)\n  params.yOrigin = setOrigin(context, rootObjects).yOrigin;\n  if (params.presets) {\n    const withPresetTitle = (rootObjects);\n    params.presets.forEach((preset) => {\n      setArtboardsSize(params, preset);\n      params.xOrigin = setOrigin(context, workingRootObject).xOrigin;\n      params.artboardSize = preset.artboardSize;\n      params.prefix = utils.buildPrefix(context, params.artboardSize);\n      if (withPresetTitle && rootObjects.length === 0) context.document.currentPage().addLayers([newText(preset, params.xOrigin)]);\n      artboardParams.iconsByLine = parseInt(settingsProvider.getSettings(context, 'default').iconsByLine.data);\n      cb(context, params)\n    })\n  } else {\n    params.prefix = utils.buildPrefix(context, params.artboardSize);\n    artboardParams.height = artboardParams.width = params.artboardSize;\n    artboardParams.iconsByLine = parseInt(settingsProvider.getSettings(context, 'default').iconsByLine.data)\n    cb(context, params)\n  }\n  const importedIcons = params.listIcon.length * ((Array.isArray(params.presets)) ? params.presets.length : 1)\n  context.document.showMessage(\n    `🎉 Tadaaa! 🎉 ${importedIcons} icon${params.listIcon.length > 1 ? 's' : ''} imported`\n  );\n  return importedIcons\n}\n\nfunction newText(preset, xOrigin) {\n  const text = MSTextLayer.new();\n  text.setStringValue_(`${preset.artboardSize}px`)\n  const fontManager = NSFontManager.sharedFontManager();\n  const boldItalic = fontManager.fontWithFamily_traits_weight_size(\"Helvetica neue\", NSBoldFontMask, 0, artboardParams.titleFontSize)\n  text.setFont(boldItalic)\n  text.lineHeight = 48\n  text.setName(`${preset.artboardSize}px`)\n  const textFrame = text.frame();\n  textFrame.setX(xOrigin)\n  textFrame.setY(-(32 + text.lineHeight()))\n  return text\n}\n\n/**\n * @name setArtboardsPosition\n * @param params\n * @param preset\n */\nfunction setArtboardsSize(params, preset) {\n  params.iconPadding = preset.iconPadding\n  artboardParams.height = artboardParams.width = preset.artboardSize;\n}\n\n/**\n * @name processSVG\n * @param context\n * @param rootObject\n * @param params\n * @param svgData\n * @return {Promise<*>}\n */\nfunction processSVG(context, rootObject, params, svgData) {\n  importerProvider.addSVG(context, rootObject, params, svgData, true);\n  if (params.withColor) maskProvider.addColor(context, rootObject, params);\n  return context.command.setValue_forKey_onLayer(params.iconPadding, 'padding', rootObject);\n}\n\n/**\n * @name getPaddingAndSize\n * @description get padding and size by artboard\n * @param context\n * @param artboard {Object} : MSArtboardGroup\n * @returns {{iconPadding: Number, artboardSize: Number}}\n */\nfunction getPaddingAndSize(context, artboard) {\n  let iconPadding = context.command.valueForKey_onLayer('padding', artboard);\n\n  if (!iconPadding) {\n    const icon = artboard.layers()[0].rect();\n    iconPadding = Math.min(icon.origin.x, icon.origin.y);\n  }\n\n  return {\n    iconPadding: parseInt(iconPadding),\n    artboardSize: parseInt(artboard.rect().size.width)\n  };\n}\n\n/**\n * @name resizeRootObject\n * @param rootObject\n * @param size\n */\nfunction resizeRootObject(rootObject, size) {\n  const rootObjectFrame = rootObject.frame()\n  rootObjectFrame.setWidth(size);\n  rootObjectFrame.setHeight(size);\n}\n","import logger from '../utils/logger'\n\nexport default {\n  selectIconsFiles\n}\n\nconst AVAILABLE_EXT = [\"svg\", \"pdf\", \"png\", \"jpg\", \"jpeg\"]\n\n/**\n * @name selectIconsFiles\n * @description display modal selection file and return them\n * @returns {Array}\n */\nfunction selectIconsFiles() {\n\n  const panel = NSOpenPanel.openPanel();\n  panel.setAllowsMultipleSelection(true);\n  panel.setCanChooseDirectories(true);\n  panel.setAllowedFileTypes(AVAILABLE_EXT);\n  panel.setCanChooseFiles(true);\n  panel.setPrompt(\"Select\");\n\n  if (panel.runModal() !== NSFileHandlingPanelOKButton) return []\n\n  const result = []\n\n  getFilesByUrls(panel.URLs(), result)\n\n  return result\n}\n\n/**\n * @name getFilesByUrls\n * @description get file from list of folder and path\n * @param urls {Array}\n * @param result {Array}\n * @returns {Array}\n */\nfunction getFilesByUrls(urls, result) {\n\n  for(let i = 0; i < urls.length; i++){\n    if(!!(urls[i].hasDirectoryPath())){\n      getFilesByUrls(NSFileManager.defaultManager().contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error(urls[i], null, null, null), result)\n    }else{\n      const ext = String(urls[i].pathExtension()).toLowerCase()\n      if (AVAILABLE_EXT.indexOf(ext) !== -1){\n        result.push(urls[i])\n      }\n    }\n  }\n}","import logger from \"../utils/logger\";\nimport utils from \"../utils/utils\"\nimport { setEnabledColorMenu } from \"../modals/modals\"\n\nexport default {\n  getLibById,\n  initLibsSelectList,\n  getColorFromSymbol,\n  getSymbolFromDocument,\n  loadLibrary,\n  updateColorMenu\n}\n\n/**\n * @name getLibById\n * @description return library by id\n * @param libraryId\n * @returns {Object} : MSAssetLibrary\n */\nfunction getLibById(libraryId) {\n\n  let library, availableLibraries = AppController.sharedInstance().librariesController().availableLibraries()\n\n  for (let i = 0; i < availableLibraries.length; i++) {\n    if (String(libraryId) === String(availableLibraries[i].libraryID())) {\n      library = availableLibraries[i]\n      break;\n    }\n  }\n\n  return library\n}\n\n/**\n * @name loadColorFromSelectedLib\n * @description get colors form library selected\n * @param library\n * @param colorMenu\n * @returns {Array}\n */\nfunction loadColorFromSelectedLib(library, colorMenu) {\n\n  colorMenu.removeAllItems()\n  library = library.representedObject()\n\n  return getColorSymbolsFromDocument(library.document())\n}\n\n/**\n * @name getSharedFromSelectedLib\n * @description get shared style form library selected\n * @param library\n * @param colorMenu\n * @returns {Array}\n */\nfunction getSharedFromSelectedLib(library, colorMenu) {\n\n  colorMenu.removeAllItems()\n  library = library.representedObject()\n\n  return getSharedStylesFromDocument(library.document())\n}\n\nfunction loadLibrary(library) {\n  return library.loadSynchronously()\n}\n\n/**\n * @name initLibsSelectList\n * @description get list of library in NSMenu\n * @param context\n * @param libraries  {Array}\n * @param colorMenu {Object} : NSPopUpButton\n * @returns {Object} : NSMenu\n */\nfunction initLibsSelectList(context, libraries, colorMenu) {\n\n  function addListener(item) {\n    item.setCOSJSTargetFunction((libraryItem) => {\n      updateColorMenu.call(this, libraryItem, colorMenu)\n    })\n  }\n\n  const colorLibsMenu = NSMenu.alloc().init()\n  const currentDocument = NSMenuItem.alloc().init()\n  currentDocument.title = 'Current file'\n  addListener.call(this, currentDocument)\n  colorLibsMenu.addItem(currentDocument)\n  libraries.forEach((library) => {\n    let item = NSMenuItem.alloc().init()\n    item.title = library.name()\n    item.representedObject = library\n    colorLibsMenu.addItem(item)\n    addListener.call(this, item)\n  })\n\n  updateColorMenu.call(this, currentDocument, colorMenu)\n\n  return colorLibsMenu\n}\n\nfunction updateColorMenu(libraryItem, colorMenu) {\n  let colors = [];\n\n  if (!libraryItem.representedObject()) {\n    colors = this.colorSource === 'symbol' ?\n      getColorSymbolsFromDocument.call(this, MSDocument.currentDocument().documentData()) :\n      getSharedStylesFromDocument.call(this, MSDocument.currentDocument().documentData());\n  } else {\n    colors = this.colorSource === 'symbol' ?\n      loadColorFromSelectedLib.call(this, libraryItem, colorMenu) :\n      getSharedFromSelectedLib.call(this, libraryItem, colorMenu)\n  }\n\n  if (colors.length > 0) {\n    initColorSelectList.call(this, colorMenu, colors, this.colorSource);\n    setEnabledColorMenu.call(this, true)\n  } else {\n    setEnabledColorMenu.call(this, false)\n  }\n}\n\n/**\n * @name initColorSelectList\n * @description get list of colors in NSMenu\n * @param popColorMenu {Object} : NSPopUpMenu\n * @param colors\n * @param colorSource\n * @returns {Object} : NSMenu\n */\nfunction initColorSelectList(popColorMenu, colors, colorSource) {\n\n  const menu = NSMenu.alloc().init()\n\n  menu.cancelTracking()\n\n  colors.forEach(function (color) {\n    try{\n      let item = NSMenuItem.alloc().init()\n      item.title = (colorSource === 'sharedStyle') ? color.name() : (color.symbol) ? color.symbol.name() : \"\";\n      let colorRGBA;\n      if (colorSource === 'sharedStyle') {\n        const item = color.style().hasEnabledFill() ? color.style().fills()[0].color() : color.style().borders()[0].color()\n        colorRGBA = NSColor.colorWithRed_green_blue_alpha(item.red(), item.green(), item.blue(), item.alpha())\n      } else {\n        colorRGBA = (color.color) ? NSColor.colorWithRed_green_blue_alpha(color.color.red(), color.color.green(), color.color.blue(), color.color.alpha()) : NSColor.colorWithRed_green_blue_alpha(color.red(), color.green(), color.blue(), color.alpha())\n      }\n      item.representedObject = (colorSource === 'sharedStyle') ? color : color.symbol || colorRGBA;\n      item.image = utils.getImageByColor(colorRGBA)\n      menu.addItem(item)\n    }catch (e) {\n      console.log('cannot use this style >', color.name());\n    }\n  })\n  popColorMenu.menu = menu\n  return popColorMenu\n}\n\n/**\n * @name getColorSymbolsFromDocument\n * @param document\n * @return {Array}\n */\nfunction getColorSymbolsFromDocument(document) {\n  const result = []\n  document.localSymbols().forEach(function (symbol) {\n    const color = getColorFromSymbol(symbol)\n    if (color) result.push(color)\n  })\n\n  return result\n}\n\n/**\n * @name getSharedStylesFromDocument\n * @param document\n * @return {Array}\n */\nfunction getSharedStylesFromDocument(document) {\n  const result = [];\n  const sharedStyles = document.layerStyles().sharedStyles();\n  sharedStyles.forEach((elm) => {\n    // if (elm.style().hasEnabledFill() || elm.style().hasEnabledBorder()) {\n    result.push(elm);\n    // }\n  });\n  return result;\n}\n\n/**\n * @name getSymbolFromDocument\n * @param document\n * @param symbolId\n * @return {*}\n */\nfunction getSymbolFromDocument(document, symbolId) {\n\n  let symbol, localSymbols = document.localSymbols();\n\n  for (let i = 0; i < localSymbols.length; i++) {\n    if (String(localSymbols[i].symbolID()) === String(symbolId)) {\n      symbol = localSymbols[i]\n      break\n    }\n  }\n\n  return symbol\n}\n\n/**\n * @name getColorFromSymbol\n * @param symbol\n * @return {*}\n */\nfunction getColorFromSymbol(symbol) {\n  const layers = symbol.layers();\n  let result;\n\n  if (layers.length === 0 && symbol.backgroundColor()) {\n    result = {\n      color: symbol.backgroundColor(),\n      symbol: symbol\n    }\n  } else if (layers.length === 1 && layers[0].children().length === 1 && layers[0].style().hasEnabledFill()) {\n\n    result = {\n      color: layers[0].style().fills()[0].color(),\n      symbol: symbol\n    }\n  }\n\n  return result\n}\n","import utils from '../utils/utils'\nimport svgProvider from './svg'\nimport librariesProvider from './libraries'\nimport sharedStyles from './sharedStyles'\nimport switchVersion from '../utils/switchV3ToV4';\nimport settingsProvider from \"./settings\";\n\nexport default {\n  initAddMaskOnSelectedArtboards,\n  addColor,\n  removeColor,\n  getMaskPropertiesFromArtboard,\n  registerColor\n}\n\n/**\n * @name initAddMaskOnSelectedArtboards\n * @description main function to add mask on selected artboards\n * @param context {Object}\n * @param params {Object}\n * @param rootObjects {Array} : MSArtboardGroup\n */\nfunction initAddMaskOnSelectedArtboards(context, params, rootObjects) {\n  const settingsParams = settingsProvider.getSettings(context, 'default');\n  rootObjects.forEach(async (rootObject) => {\n    try {\n      if (utils.svgHasStroke(rootObject.object) && settingsParams.convertStroke.data === '1') svgProvider.convertStrokeToFill(rootObject.object)\n      // if (utils.hasMask(rootObject.object) && !utils.svgHasStroke(rootObject.object)) removeMask(context, rootObject.object);\n      await addColor(context, rootObject.object, params)\n    } catch (e) {\n      console.log('>>>>>>>>>>>', e);\n    }\n  })\n  utils.clearSelection(context)\n}\n\n/**\n * @name addColor\n * @description index function for all step to add mask and convert artboard to symbol at end\n * @param context {Object}\n * @param rootObject {Object} : MSArtboardGroup && MSSymbolMaster\n * @param params {Object}\n */\nfunction addColor(context, rootObject, params) {\n\n  if (String(rootObject.firstLayer().class()) === 'MSBitMapLayer') return\n\n  removeColor(context, rootObject);\n\n  if (params.colorSource === 'sharedStyle') {\n    svgProvider.cleanSvg(rootObject)\n    sharedStyles.applySharedStyle(context, rootObject, params);\n  } else if (utils.svgHasStroke(rootObject)) {\n    applyColor(rootObject, params);\n  } else {\n    svgProvider.cleanSvg(rootObject)\n    applyMask(context, rootObject, params)\n  }\n\n  return registerColor(context, rootObject, params)\n}\n\nfunction removeColor(context, rootObject) {\n  if (utils.hasMask(rootObject) && !utils.svgHasStroke(rootObject)) removeMask(context, rootObject);\n  if (utils.hasSharedStyle(rootObject)) removeSharedStyle(context, rootObject);\n}\n\n/**\n * @name applyColor\n * @description apply border color on svg with stroke\n * @param rootObject\n * @param params\n */\nfunction applyColor(rootObject, params) {\n  const color = (params.colorPicker) ? params.colorPicker : librariesProvider.getColorFromSymbol(params.color).color\n  rootObject.children().forEach((layer) => {\n    if (layer.usedStyle().hasEnabledBorder()) {\n      const style = layer.usedStyle()\n      style.enabledBorders().forEach((border) => border.color = color)\n    }\n  })\n}\n\nfunction removeSharedStyle(context, rootObject){\n  const style = rootObject.firstLayer().style();\n  const fills = style.fills();\n  const fillColor = (fills.count() > 0) ? style.fills()[0].color() : MSColor.blackColor();\n  style.removeAllStyleFills();\n  style.addStylePartOfType(0).color = fillColor;\n  rootObject.firstLayer().sharedStyle = null;\n}\n\n/**\n * @name removeMask\n * @description remove all mask from artboard\n * @param context\n * @param rootObject {Object} : MSArtboardGroup\n */\nfunction removeMask(context, rootObject) {\n\n  context.command.setValue_forKey_onLayer(null, \"colorLib\", rootObject)\n  context.command.setValue_forKey_onLayer(null, \"color\", rootObject)\n  context.command.setValue_forKey_onLayer(null, \"source\", rootObject)\n  context.command.setValue_forKey_onLayer(null, \"colorPicker\", rootObject)\n\n  if (utils.svgHasStroke(rootObject)) {\n    return applyColor(rootObject, { colorPicker: MSImmutableColor.blackColor() })\n  }\n\n  const iconLayer = rootObject.firstLayer();\n\n  if (rootObject.layers().count() > 1 && iconLayer.hasClippingMask()) {\n    iconLayer.hasClippingMask = false;\n    iconLayer.clippingMaskMode = 1;\n    const style = rootObject.firstLayer().style();\n    const fills = style.fills();\n    const fillColor = (fills.count() > 0) ? style.fills()[0].color() : MSColor.blackColor();\n    style.removeAllStyleFills();\n    style.addStylePartOfType(0).color = fillColor;\n    rootObject.lastLayer().removeFromParent()\n  }\n}\n\n/**\n * @name registerColor\n * @description register properties of mask in artboard metadata\n * @param context\n * @param rootObject\n * @param params\n */\nfunction registerColor(context, rootObject, params) {\n  if (params.color) {\n    const libraryId = (params.colorLib) ? params.colorLib.libraryID() : null\n    const colorId = (params.colorSource === 'sharedStyle') ? params.color.objectID() : params.color.symbolID()\n    context.command.setValue_forKey_onLayer(libraryId, \"colorLib\", rootObject)\n    context.command.setValue_forKey_onLayer(colorId, \"color\", rootObject)\n    context.command.setValue_forKey_onLayer(params.colorSource, \"source\", rootObject)\n    context.command.setValue_forKey_onLayer(null, \"colorPicker\", rootObject)\n  } else if (params.colorPicker) {\n    context.command.setValue_forKey_onLayer(utils.convertMSColorToString(params.colorPicker), \"colorPicker\", rootObject)\n    context.command.setValue_forKey_onLayer(null, \"colorLib\", rootObject)\n    context.command.setValue_forKey_onLayer(null, \"source\", rootObject)\n    context.command.setValue_forKey_onLayer(null, \"color\", rootObject)\n  }\n}\n\nfunction getMaskPropertiesFromArtboard(context, rootObject) {\n\n\n  let params = getColorParams(context, rootObject);\n\n  const maskLayer = rootObject.firstLayer()\n  if (!params.colorLibraryId && !params.colorSymbolId && !params.colorString && maskLayer && maskLayer.hasClippingMask()) {\n    switchVersion.switchToV4(context, rootObject)\n    params = getColorParams(context, rootObject)\n  }\n\n  if (!params.colorLibraryId && params.colorSymbolId) {\n    params.colorSymbol = librariesProvider.getSymbolFromDocument(context.document.documentData(), params.colorSymbolId)\n  } else if (params.colorLibraryId) {\n    params.colorLibrary = librariesProvider.getLibById(params.colorLibraryId)\n    librariesProvider.loadLibrary(params.colorLibrary)\n    params.colorSymbol = librariesProvider.getSymbolFromDocument(params.colorLibrary.document(), params.colorSymbolId)\n  }\n\n  params.colorPicker = (params.colorString) ? utils.convertStringToMSColor(params.colorString) : null\n\n  const result = {\n    colorLib: (params.colorLibraryId) ? params.colorLibrary : null,\n    color: (params.colorSymbolId) ? params.colorSymbol : null,\n    colorPicker: params.colorPicker\n  }\n\n  return (!result.colorLib && !result.color && !result.colorPicker) ? {} : result\n}\n\n/**\n * @name getColorParams\n * @param context\n * @param rootObject\n * @returns {{colorLibraryId: *, colorSymbolId: *, colorString: *}}\n */\nfunction getColorParams(context, rootObject) {\n  return {\n    colorLibraryId: context.command.valueForKey_onLayer(\"colorLib\", rootObject),\n    colorSymbolId: context.command.valueForKey_onLayer(\"color\", rootObject),\n    colorString: context.command.valueForKey_onLayer(\"colorPicker\", rootObject)\n  }\n}\n\n\n/**\n * @name createMaskFromNean\n * @param context\n * @param rootObject\n * @param color\n * @return {Object} : MSShapeGroup\n */\nfunction createMaskFromNean(context, rootObject, color) {\n  const currentRootObjectSize = rootObject.rect()\n\n  const mask = MSShapeGroup.shapeWithRect({\n    origin: { x: 0, y: 0 },\n    size: { width: currentRootObjectSize.size.width, height: currentRootObjectSize.size.height }\n  })\n\n  const fill = mask.style().addStylePartOfType(0);\n  fill.color = color;\n\n  return mask\n}\n\n/**\n * @name createMask\n * @description add mask from symbol master colors library to one artboard\n * @param context {Object}\n * @param colorSymbolMaster {Object}\n * @param colorLibrary {Object} : MSAssetLibrary\n * @return symbol {Object} : MSSymbolInstance\n */\nfunction getMaskSymbolFromLib(context, colorSymbolMaster, colorLibrary) {\n  utils.clearSelection(context)\n  const librairiesController = AppController.sharedInstance().librariesController()\n  // const symbolMaster = (colorLibrary) ? librairiesController.importForeignSymbol_fromLibrary_intoDocument(colorSymbolMaster, colorLibrary, context.document.documentData()).symbolMaster() : colorSymbolMaster\n\n  let importedSymbol;\n  if (MSApplicationMetadata.metadata().appVersion >= 50) {\n    const shareableObjectReference = MSShareableObjectReference.referenceForShareableObject_inLibrary(colorSymbolMaster, colorLibrary);\n    importedSymbol = librairiesController.importShareableObjectReference_intoDocument(shareableObjectReference, context.document.documentData());\n  } else {\n    importedSymbol = librairiesController.importForeignSymbol_fromLibrary_intoDocument_(colorSymbolMaster, colorLibrary, context.document.documentData());\n  }\n  const symbolMaster = (colorLibrary) ? importedSymbol.symbolMaster() : colorSymbolMaster;\n  return symbolMaster.newSymbolInstance();\n}\n\n/**\n * @name applyMask\n * @param context\n * @param rootObject {Object} : MSArtboardGroup && MSSymbolMaster\n * @param params\n */\nfunction applyMask(context, rootObject, params) {\n\n  let mask;\n\n  if (params.color) {\n    mask = getMaskSymbolFromLib(context, params.color, params.colorLib)\n  } else if (params.colorPicker) {\n    mask = createMaskFromNean(context, rootObject, params.colorPicker)\n  }\n\n  const currentArtboardSize = rootObject.rect()\n  mask.setHeightRespectingProportions(currentArtboardSize.size.height)\n  mask.setWidthRespectingProportions(currentArtboardSize.size.width)\n  mask.setName('🎨 color')\n  rootObject.firstLayer().style().disableAllFills()\n  rootObject.addLayers([mask])\n  const iconLayer = rootObject.firstLayer()\n  iconLayer.hasClippingMask = true\n  iconLayer.clippingMaskMode = 0\n}\n","export default {\n  registerSettings,\n  getSettings,\n  resetSettings,\n  hasValue\n}\n\nconst LIST_SETTINGS_FIELDS = [\n  // {name: 'artboardSize', defaultValue: 24},\n  // {name: 'iconPadding', defaultValue: 4},\n  { name: 'presets', default: '', placeholder: '24-4, 48-8...' },\n  // {name: 'modalReplaceIcon', defaultValue: false},\n  // {name: 'viewBoxParams', defaultValue: false},\n\n  { name: 'convertStroke', default: '0', placeholder:'0' },\n  // {name: 'otherSize', defaultValue: true},\n  // {name: 'otherSizeParams', defaultValue: 48},\n  { name: 'iconsByLine', default: '10', placeholder: '10' },\n  { name: 'marginBetweenRootObject', default: '100%', placeholder: '100%' },\n  { name: 'prefixRootObject', default: '', placeholder: 'icons/$size/...' },\n  // {name: 'preset', defaultValue: []}\n]\n\nfunction registerSettings(context, params) {\n\n\n  LIST_SETTINGS_FIELDS.forEach((field) => {\n    NSUserDefaults.standardUserDefaults().setObject_forKey(params[field.name], field.name)\n    context.command.setValue_forKey_onDocument(params[field.name], field.name, context.document.documentData());\n  })\n}\n\n\nfunction resetSettings(context) {\n  LIST_SETTINGS_FIELDS.forEach((field) => {\n    context.command.setValue_forKey_onDocument(null, field.name, context.document.documentData());\n  })\n}\n\nfunction getSettings(context, fallbackValue) {\n\n  const result = {}\n\n  LIST_SETTINGS_FIELDS.forEach(field => {\n\n\n    result[field.name] = {\n      // 'value': context.command.valueForKey_onDocument(field.name, context.document.documentData()) || NSUserDefaults.standardUserDefaults().objectForKey(field.name),\n      'value': NSUserDefaults.standardUserDefaults().objectForKey(field.name),\n      'default': field.default,\n      'placeholder': field.placeholder\n    };\n\n    if (hasValue(result[field.name])) {\n      result[field.name].data = String(result[field.name].value)\n    } else {\n      result[field.name].data = String(result[field.name][fallbackValue])\n    }\n  })\n\n\n  return result\n}\n\nfunction hasValue(setting){\n  return !(!setting.value || String(setting.value) === 'null' || String(setting.value).length === 0)\n}\n","export default {\n  applySharedStyle,\n}\n\nfunction applySharedStyle(context, rootObject, params) {\n  const foreignStyle = getSharedStyleFromLib(context, params.color, params.colorLib);\n  rootObject.children()[1].sharedStyle = foreignStyle ? foreignStyle.localSharedStyle() : params.color;\n}\n\n\n\nfunction getSharedStyleFromLib(context, sharedStyle, originLibrary) {\n  const librairiesController = AppController.sharedInstance().librariesController()\n  const shareableObjectReference = MSShareableObjectReference.referenceForShareableObject_inLibrary(sharedStyle, originLibrary);\n  return librairiesController.importShareableObjectReference_intoDocument(shareableObjectReference, context.document.documentData());\n}\n","import maskProvider from './mask';\nimport artboardProvider from './artboard';\nimport settingsProvider from './settings';\nimport utils from '../utils/utils';\nimport { Image } from 'sketch/dom';\n\nexport default {\n  initUpdateIconsSelectedArtboards,\n  addSVG,\n  addPDF,\n  addBITMAP,\n  cleanSvg,\n  convertStrokeToFill,\n  addSVGNew\n};\n\n/**\n * @name initUpdateIconsSelectedArtboards\n * @description main function to update multiple icons on selected artboard\n * @param context\n * @param params {Object}\n * @param rootObjects {Array} : MSArtboardGroup && MSSymbolMaster\n */\nfunction initUpdateIconsSelectedArtboards(context, rootObjects, params) {\n  rootObjects.forEach((rootObject, index) => {\n\n    const iconParams = {\n      ...maskProvider.getMaskPropertiesFromArtboard(context, rootObject.object),\n      ...artboardProvider.getPaddingAndSize(context, rootObject.object),\n      ...params\n    };\n    const replaceBy = (params.listIcon.length === 1) ? params.listIcon[0] : params.listIcon[index];\n    rootObject.object.removeAllLayers();\n    iconParams.withColor = !!(iconParams.colorLib || iconParams.colorPicker || iconParams.color);\n\n    const ext = String(replaceBy.toString().split('.').pop()).toLowerCase()\n    if (ext === 'pdf') {\n      addPDF(context, rootObject.object, iconParams, replaceBy)\n      if (iconParams.withColor) maskProvider.addColor(context, rootObject.object, iconParams);\n    }\n    else if (ext === 'png' || ext === 'jpg' || ext === 'jpeg') {\n      addBITMAP(context, rootObject.object, iconParams, replaceBy)\n    }\n    else {\n      const svgData = String(NSString.alloc().initWithContentsOfURL(replaceBy));\n      addSVG(context, rootObject.object, iconParams, String(svgData), true);\n      if (iconParams.withColor) maskProvider.addColor(context, rootObject.object, iconParams);\n    }\n    rootObject.object.setName(utils.getIconNameByNSUrl(replaceBy));\n\n  });\n\n  utils.clearSelection(context);\n\n  return rootObjects.length\n}\n\n/**\n * @name addSVG\n * @description  add svg on specific artboard\n * @param context {Object}\n * @param rootObject {Object} : MSArtboardGroup\n * @param params {Object}\n * @param svgData {String}\n * @param withResize {Boolean}\n */\nfunction addSVG(context, rootObject, params, svgData, withResize) {\n  let viewBox;\n\n  const settingsParams = settingsProvider.getSettings(context, 'default');\n\n  svgData = NSString.stringWithString(svgData);\n\n  viewBox = getViewBox(svgData);\n\n  if (withResize) svgData = addRectToResize(svgData, viewBox);\n  const svgImporter = MSSVGImporter.svgImporter();\n  svgImporter.prepareToImportFromData(svgData.dataUsingEncoding(NSUTF8StringEncoding));\n  const svgLayer = svgImporter.importAsLayer();\n\n  removeTxt(svgLayer);\n\n  rootObject.addLayer(svgLayer);\n\n  if (utils.svgHasStroke(rootObject) && settingsParams.convertStroke.data === '1') convertStrokeToFill(rootObject)\n\n  if (withResize) resizeIcon(rootObject, params.iconPadding);\n  if (withResize) removeDeleteMeRect(rootObject);\n\n  center(params.artboardSize, rootObject.firstLayer());\n}\n\nfunction addSVGNew(context, rootObject, params, svgData) {\n  svgData = NSString.stringWithString(svgData);\n  const svgImporter = MSSVGImporter.svgImporter();\n  svgImporter.prepareToImportFromData(svgData.dataUsingEncoding(NSUTF8StringEncoding));\n  const svgLayer = svgImporter.importAsLayer();\n  rootObject.addLayers([svgLayer]);\n  const svgLayerFrame = svgLayer.frame();\n  const width = svgLayerFrame.width();\n  const height = svgLayerFrame.height();\n\n  svgLayerFrame.constrainProportions = true;\n\n  if (width >= height) {\n    svgLayer.setWidthRespectingProportions((params.artboardSize - 2 * params.iconPadding) + 0.01)\n  } else {\n    svgLayer.setHeightRespectingProportions((params.artboardSize - 2 * params.iconPadding) + 0.01)\n  }\n  svgLayerFrame.setX((params.artboardSize - svgLayerFrame.width()) / 2);\n  svgLayerFrame.setY((params.artboardSize - svgLayerFrame.height()) / 2);\n}\n\nfunction addPDF(context, rootObject, params, icon) {\n  const pdfImporter = MSPDFImporter.pdfImporter();\n  pdfImporter.prepareToImportFromURL(icon);\n  let pdfLayer = pdfImporter.importAsLayer();\n  if (String(pdfLayer.class()) === 'MSArtboardGroup') {\n    const group = MSLayerGroup.new();\n    group.addLayers(pdfLayer.layers());\n    group.resizeToFitChildrenWithOption(1);\n    pdfLayer = group;\n  }\n  rootObject.addLayer(pdfLayer);\n  const pdfLayerFrame = pdfLayer.frame();\n  const width = pdfLayerFrame.width();\n  const height = pdfLayerFrame.height();\n  pdfLayerFrame.constrainProportions = true;\n  if (width >= height) {\n    pdfLayer.setWidthRespectingProportions((params.artboardSize - 2 * params.iconPadding) + 0.01)\n  } else {\n    pdfLayer.setHeightRespectingProportions((params.artboardSize - 2 * params.iconPadding) + 0.01)\n  }\n  pdfLayerFrame.setX((params.artboardSize - pdfLayerFrame.width()) / 2);\n  pdfLayerFrame.setY((params.artboardSize - pdfLayerFrame.height()) / 2);\n}\n\nfunction addBITMAP(context, rootObject, params, icon) {\n\n  if (String(icon.class()) === 'MSBitmapLayer') {\n    MSLayerGroup.moveLayers_intoGroup([icon], rootObject)\n  } else {\n\n    const img = new Image({ image: icon });\n    rootObject.addLayer(img.sketchObject);\n  }\n  resizeIcon(rootObject, params.iconPadding);\n  center(params.artboardSize, rootObject.firstLayer());\n  rootObject.firstLayer().setName(rootObject.name());\n}\n\n/**\n * @name addRectToResize\n * @description add rect to keep proportion on resize\n * @param svgString\n * @param viewBox\n * @returns {String}\n */\nfunction addRectToResize(svgString, viewBox) {\n  const addrect = `<rect width=\"${viewBox.width}\" height=\"${viewBox.height}\" id=\"delete-me\"/></svg>`;\n  return NSString.stringWithString(svgString.replace('</svg>', addrect));\n}\n\n/**\n * @name cleanSvg\n * @description main function which used sketch properties to convert icon in one path\n * @param rootObject\n */\nfunction cleanSvg(rootObject) {\n  unGroup(rootObject);\n  rootObject.firstLayer().setName(rootObject.name());\n  if(rootObject.layers().length > 1 && String(rootObject.firstLayer().class) !== 'MSLayerGroup') mergeLayer(context, rootObject);\n}\n\n/**\n * @name center\n * @description center svg in artboard\n * @param artboardSize\n * @param svgLayer\n */\nfunction center(artboardSize, svgLayer) {\n  const shapeGroupWidth = svgLayer.frame().width();\n  const shapeGroupHeight = svgLayer.frame().height();\n  svgLayer.frame().setX((artboardSize - shapeGroupWidth) / 2);\n  svgLayer.frame().setY((artboardSize - shapeGroupHeight) / 2);\n}\n\n/**\n * @name resizeIcon\n * @description resize layer by artboard\n * @param rootObject {Object}\n * @param iconPadding {Number}\n */\nfunction resizeIcon(rootObject, iconPadding) {\n\n  const svgLayer = rootObject.firstLayer()\n  const svgLayerFrame = svgLayer.frame();\n\n  const currentArtboardRect = rootObject.rect();\n  const currentArtboardSize = {\n    width: parseInt(currentArtboardRect.size.width),\n    height: parseInt(currentArtboardRect.size.height)\n  };\n\n  const width = svgLayerFrame.width();\n  const height = svgLayerFrame.height();\n\n  svgLayerFrame.constrainProportions = true;\n\n  if (width >= height) {\n    svgLayerFrame.setWidth((currentArtboardSize.width - 2 * iconPadding) + 0.0000001);\n  } else {\n    svgLayerFrame.setHeight((currentArtboardSize.height - 2 * iconPadding) + 0.0000001);\n  }\n}\n\n/**\n * @name removeTxt\n * @description remove text form svg\n * @param svgLayer {Object}\n */\nfunction removeTxt(svgLayer) {\n  const scope = svgLayer.children(),\n    predicateTextLayers = NSPredicate.predicateWithFormat('(className == %@)', 'MSTextLayer');\n\n  const layers = scope.filteredArrayUsingPredicate(predicateTextLayers);\n\n  const loop = layers.objectEnumerator();\n  let layer;\n  while ((layer = loop.nextObject())) {\n    layer.removeFromParent();\n  }\n}\n\n/**\n * @name removeUnecessaryGroup\n * @description ungroup all group\n * @param svgLayer\n */\nfunction unGroup(svgLayer) {\n  const scope = svgLayer.children(),\n    predicateTextLayers = NSPredicate.predicateWithFormat('(className == %@)', 'MSLayerGroup');\n  const layers = scope.filteredArrayUsingPredicate(predicateTextLayers);\n\n  const loop = layers.objectEnumerator();\n  let layer;\n  while ((layer = loop.nextObject())) {\n    layer.ungroup();\n  }\n}\n\n/**\n * @name removeDeleteMeRect\n * @description remove rect used to keep proportion on resize\n * @param rootObject\n * @returns {*}\n */\nfunction removeDeleteMeRect(rootObject) {\n  const scope = rootObject.children(),\n    predicateTextLayers = NSPredicate.predicateWithFormat('(name == %@)', 'delete-me');\n  const layers = scope.filteredArrayUsingPredicate(predicateTextLayers);\n\n  if (!layers.length)\n    return rootObject\n      .firstLayer()\n      .lastLayer()\n      .removeFromParent();\n\n  const loop = layers.objectEnumerator();\n  let layer;\n  while ((layer = loop.nextObject())) {\n    layer.removeFromParent();\n  }\n}\n\n// /**\n//  * @description remove transparent layers\n//  * @name removeNoFillLayer\n//  * @param rootObject\n//  */\n// function removeNoFillLayer(rootObject) {\n//   const indexes = NSMutableIndexSet.indexSet();\n//   rootObject.layers().forEach((layer, index) => {\n//     if (!layer.style().hasEnabledFill() && !layer.style().hasEnabledBorder()) indexes.addIndex(index);\n//   });\n//   rootObject.removeLayersAtIndexes(indexes);\n// }\n\n// /**\n//  * @description remove transparent layers\n//  * @name removeNoFillLayer\n//  * @param rootObject\n//  */\n// function removeNoFillChildren(rootObject) {\n//   const toDelete = []\n//   rootObject.firstLayer().children().forEach(layer => {\n//     const style = layer.usedStyle()\n//     if (style.hasEnabledFill() && style.contextSettings().opacity() === 0) {\n//       toDelete.push(layer);\n//     }\n//   });\n//\n//   toDelete.forEach(layer => {\n//     layer.removeFromParent()\n//   })\n// }\n\n/**\n * @name mergeLayer\n * @description merge all path in one path\n * @param context\n * @param rootObject\n */\nfunction mergeLayer(context, rootObject) {\n  const layers = rootObject.layers().slice().filter(layer => String(layer.class()) !== \"MSSymbolMaster\");\n  context.document.currentPage().changeSelectionBySelectingLayers(layers);\n  context.document.actionsController().actionForID(\"MSUnionAction\").doPerformAction(null);\n}\n\n/**\n * @name getViewBox\n * @description return values of viewbox\n * @param svgData\n * @returns {{width: number, height: number}}\n */\nfunction getViewBox(svgData) {\n\n  let viewBox = svgData.match(/viewBox=\"(.*?)\"/gm);\n\n  let size;\n  let result;\n  if (Array.isArray(viewBox)) {\n    size = viewBox[0].match(/[+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g);\n    result = { width: parseFloat(size[2]), height: parseFloat(size[3]) };\n  }\n\n  return result;\n}\n\nfunction convertStrokeToFill(rootObject) {\n\n  rootObject.children().forEach(layer => {\n    if (layer.canConvertToOutlines() && String(layer.name()) !== 'delete-me') {\n      layer.layersByConvertingToOutlines()\n    }\n  })\n\n  rootObject.children().forEach(layer => {\n    layer.usedStyle().disableAllBorders()\n  })\n}\n\n// function setThicknessProportionnally(svgLayer, diagContainer, viewBox) {\n//\n//   const diagViewbox = Math.sqrt(Math.pow(viewBox.width, 2) + Math.pow(viewBox.height, 2))\n//   const diagArtboard = Math.sqrt(Math.pow(diagContainer, 2) * 2)\n//   const ratio = diagArtboard / diagViewbox\n//\n//   svgLayer.children().forEach((layer) => {\n//     if (layer.usedStyle().hasEnabledBorder() && String(layer.class()) === 'MSShapePathLayer') {\n//       const style = layer.usedStyle()\n//       const thickness = style.firstEnabledBorder().thickness()\n//       style.firstEnabledBorder().thickness = Math.round(thickness * ratio)\n//     }\n//   })\n// }\n","//\n//  MochaJSDelegate.js\n//  MochaJSDelegate\n//\n//  Created by Matt Curtis\n//  Copyright (c) 2015. All rights reserved.\n//\nexport default MochaJSDelegate;\n\nfunction MochaJSDelegate(selectorHandlerDict, superclass) {\n  var uniqueClassName = 'MochaJSDelegate_DynamicClass_' + NSUUID.UUID().UUIDString()\n\n  var delegateClassDesc = MOClassDescription.allocateDescriptionForClassWithName_superclass_(uniqueClassName, superclass || NSObject)\n\n  delegateClassDesc.registerClass()\n\n  // Storage Handlers\n  var handlers = {}\n\n  // Define interface\n  this.setHandlerForSelector = function (selectorString, func) {\n    var handlerHasBeenSet = (selectorString in handlers)\n    var selector = NSSelectorFromString(selectorString)\n\n    handlers[selectorString] = func\n\n    /*\n      For some reason, Mocha acts weird about arguments: https://github.com/logancollins/Mocha/issues/28\n      We have to basically create a dynamic handler with a likewise dynamic number of predefined arguments.\n    */\n    if (!handlerHasBeenSet) {\n      var args = []\n      var regex = /:/g\n      while (regex.exec(selectorString)) {\n        args.push('arg' + args.length)\n      }\n\n      var dynamicFunction = eval('(function (' + args.join(', ') + ') { return handlers[selectorString].apply(this, arguments); })')\n\n      delegateClassDesc.addInstanceMethodWithSelector_function_(selector, dynamicFunction)\n    }\n  }\n\n  this.removeHandlerForSelector = function (selectorString) {\n    delete handlers[selectorString]\n  }\n\n  this.getHandlerForSelector = function (selectorString) {\n    return handlers[selectorString]\n  }\n\n  this.getAllHandlers = function () {\n    return handlers\n  }\n\n  this.getClass = function () {\n    return NSClassFromString(uniqueClassName)\n  }\n\n  this.getClassInstance = function () {\n    return NSClassFromString(uniqueClassName).new()\n  }\n\n  // Convenience\n  if (typeof selectorHandlerDict === 'object') {\n    for (var selectorString in selectorHandlerDict) {\n      this.setHandlerForSelector(selectorString, selectorHandlerDict[selectorString])\n    }\n  }\n}\n","const kUUIDKey = 'google.analytics.uuid'\nlet uuid = NSUserDefaults.standardUserDefaults().objectForKey(kUUIDKey)\nif (!uuid) {\n  uuid = NSUUID.UUID().UUIDString()\n  NSUserDefaults.standardUserDefaults().setObject_forKey(uuid, kUUIDKey)\n}\n\nfunction jsonToQueryString(json) {\n  return '?' + Object.keys(json).map(function (key) {\n    return encodeURIComponent(key) + '=' + encodeURIComponent(json[key]);\n  }).join('&')\n}\n\nexport default {\n  action\n}\n\nfunction action(context, category, action, label, value) {\n  const payload = {\n    v: 1,\n    t: 'event',\n    cid: uuid,\n    tid: 'UA-115448236-1',\n    ec: category,\n    ea: action,\n    el: label,\n    ev: value\n  }\n  send(payload)\n}\n\nfunction send(payload) {\n\n  try{\n    const url = NSURL.URLWithString(\n      NSString.stringWithFormat(\"https://www.google-analytics.com/collect%@\", jsonToQueryString(payload))\n    )\n\n    if (url) {\n      const task = NSTask.alloc().init();\n      task.setLaunchPath(\"/usr/bin/curl\");\n      task.setArguments(['-X', 'POST', String(url)]);\n      const outputPipe = NSPipe.pipe();\n      task.setStandardOutput(outputPipe);\n      task.launch();\n    }\n\n  }catch (e){}\n\n\n}\n","export default (function () {\n  function _log(message) {\n    log(message);\n  }\n\n  function debug(message) {\n    log('DEBUG: ' + message);\n  }\n\n  function info(message) {\n    log('INFO: ' + message);\n  }\n\n  function warn(message) {\n    log('WARN: ' + message);\n  }\n\n  function error(message) {\n    log('ERROR: ' + message);\n  }\n\n  return {\n    log: _log,\n    debug: debug,\n    info: info,\n    warn: warn,\n    error: error,\n  };\n})();","import libraries from '../providers/libraries'\nimport utils from '../utils/utils'\nimport logger from '../utils/logger'\n\nexport default {\n  newModal,\n  runModal,\n  getMainButtonParam,\n  createArtboardFields,\n  createCheckBoxes,\n  createMaskFields,\n  appendsFields,\n  getParams,\n  setNextKey,\n  newErrorModal\n}\n\n/**\n * @name newModal\n * @description instantiate modal\n * @param context\n * @param viewSize {Object}\n * @param modalParams\n * @returns {{modal: *, view: *, viewSize: *}}\n */\nfunction newModal(context, viewSize, modalParams) {\n\n  const modal = COSAlertWindow.new();\n\n  const view = NSView.alloc().initWithFrame(NSMakeRect(0, 0, viewSize.width, viewSize.height));\n  modal.addAccessoryView(view);\n  modal.setMessageText(modalParams.messageText);\n  modal.setInformativeText(modalParams.informativeText);\n  modal.addButtonWithTitle('Continue');\n  modal.addButtonWithTitle('Cancel');\n  modal.layout()\n\n  return {modal, view, viewSize}\n}\n\n/**\n * @name runModal\n * @description run modal\n * @param modal\n * @returns {Object} : NSView\n */\nfunction runModal({modal}) {\n  return modal.runModal()\n}\n\n/**\n * @name getMainButtonParam\n * @description get value of main button of view\n * @param button\n * @returns {Object}\n */\nfunction getMainButtonParam(button) {\n  return {button}\n}\n\n/**\n * @name createArtboardFields\n * @description create fields for new artboards params\n * @returns {[Object,Object]}\n */\nfunction createArtboardFields() {\n\n  const textBox = NSTextField.alloc().initWithFrame(NSMakeRect(0, 10, 130, 20));\n  textBox.setStringValue('24');\n\n  const textBoxPadding = NSTextField.alloc().initWithFrame(NSMakeRect(140, 10, 130, 20));\n  textBoxPadding.setStringValue('3');\n\n  return [{\n    item: textBox,\n    getter: function () {\n      return parseInt(textBox.stringValue())\n    },\n    name: 'artboardSize',\n    label: utils.createLabel('Size', 0, 30, 130, 20)\n  }, {\n    item: textBoxPadding,\n    getter: function () {\n      return parseInt(textBoxPadding.stringValue())\n    },\n    name: 'iconPadding',\n    label: utils.createLabel('Padding', 140, 30, 130, 20)\n  }]\n}\n\n/**\n * @name createCheckBoxMask\n * @description create field for checkbox for add mask\n * @returns {[Object]}\n */\nfunction createCheckBoxes() {\n\n  const symbolCheckBox = NSButton.alloc().initWithFrame(NSMakeRect(0, 30, 200, 14));\n  symbolCheckBox.setButtonType(NSSwitchButton);\n  symbolCheckBox.setState(true);\n  symbolCheckBox.setFont(NSFont.systemFontOfSize_(13));\n  symbolCheckBox.setTitle('Convert to symbol')\n\n  const maskCheckBox = NSButton.alloc().initWithFrame(NSMakeRect(0, 5, 200, 14));\n  maskCheckBox.setButtonType(NSSwitchButton);\n  maskCheckBox.setState(false);\n  maskCheckBox.setFont(NSFont.systemFontOfSize_(13));\n  maskCheckBox.setTitle('Add color mask')\n\n  return [{\n    item: symbolCheckBox,\n    name: 'convertSymbol',\n    getter: symbolCheckBox.state\n  }, {\n    item: maskCheckBox,\n    name: 'withColor',\n    getter: maskCheckBox.state\n  }]\n}\n\n/**\n * @name createMaskFields\n * @description create fields for mask params to add mask\n * @param context {Object}\n * @param modal {Object}\n * @param checkboxFields {Object}\n * @returns {[null,null]}\n */\nfunction createMaskFields(context, modal, checkboxFields) {\n\n  const colorLibsMenu = NSPopUpButton.alloc().initWithFrame(NSMakeRect(0, 0, 130, 20));\n  const colorMenu = NSPopUpButton.alloc().initWithFrame(NSMakeRect(140, 0, 130, 20));\n\n  colorLibsMenu.setEnabled(false)\n  colorMenu.setEnabled(false)\n\n  colorLibsMenu.menu = libraries.initLibsSelectList(AppController.sharedInstance().librariesController().availableLibraries(), colorMenu);\n\n  if (checkboxFields) {\n    checkboxFields[1].item.setCOSJSTargetFunction(function (mask) {\n      if (mask.state()) {\n        colorLibsMenu.setEnabled(true)\n        // documentColorMenu.setEnabled(true)\n        if (colorMenu.selectedItem()) colorMenu.setEnabled(true)\n      } else {\n        colorLibsMenu.setEnabled(false)\n        colorMenu.setEnabled(false)\n        // documentColorMenu.setEnabled(false)\n      }\n    });\n  } else {\n    colorLibsMenu.setEnabled(true)\n  }\n\n  return [{\n    item: colorMenu,\n    label: utils.createLabel('Color', 140, 25, 130, 20),\n    name: 'color',\n    getter: function () {\n      let currentItem = this.item.selectedItem()\n      return (currentItem) ? currentItem.representedObject() : null\n    }\n  }, {\n    item: colorLibsMenu,\n    label: utils.createLabel('Colors Library', 0, 25, 130, 20),\n    name: 'colorLib',\n    getter: function () {\n      let currentItem = this.item.selectedItem()\n      return (currentItem) ? currentItem.representedObject() : null\n    }\n  }\n  ]\n}\n\n/**\n * @name appendsFields\n * @description append fields on view to create modal\n * @param view {Object} : NSView\n * @param viewSize {Object} :\n * @param withLabelBottom {Boolean}\n * @param allFields\n */\nfunction appendsFields({view, viewSize}, allFields, withLabelBottom) {\n  allFields.reverse().forEach(function (fields) {\n    const y = (withLabelBottom) ? view.subviews().length * 50 + 25 : view.subviews().length * 50;\n    const viewCell = NSView.alloc().initWithFrame(NSMakeRect(0, y, viewSize.width, 50));\n    fields.forEach(function (field) {\n      if (field.label) viewCell.addSubview(field.label);\n      if (field.item) viewCell.addSubview(field.item);\n    })\n    view.addSubview(viewCell)\n  })\n}\n\n/**\n * @name getParams\n * @description get value of multiple fields\n * @param allFields [Array,Array,...]\n * @returns {Object}\n */\nfunction getParams(allFields) {\n  const result = {}\n  allFields.forEach(function (fields) {\n    fields.forEach(function (field) {\n      result[field.name] = field.getter()\n    })\n  })\n\n  return result\n}\n\n/**\n * @name setNextKey\n * @description set tab path in form\n * @param fields\n */\nfunction setNextKey(fields) {\n  fields.forEach(function (field, index) {\n    if (fields[index + 1] && field.item) field.item.setNextKeyView(fields[index + 1].item)\n  })\n}\n\n/**\n * @name newErrorModal\n * @description display error  modal\n * @param message\n */\nfunction newErrorModal(message, informativeText) {\n  const modal = COSAlertWindow.new();\n  modal.setMessageText(message);\n  modal.setInformativeText(informativeText);\n  modal.runModal()\n}\n","import maskProvider from '../providers/mask'\n\nexport default {\n  switchToV4\n}\n\nfunction switchToV4(context, rootObject) {\n  const mask = rootObject.lastLayer()\n  const params = {color: null, colorLib: null, colorPicker: null}\n  if (String(mask.class()) === 'MSSymbolInstance') {\n    const color = mask.symbolMaster()\n    const foreign = color.foreignSymbol()\n    params.color = color\n    if (foreign) {\n      params.color = String(foreign.originalMaster().symbolID())\n      params.colorLib = foreign\n    }\n  } else {\n    params.colorPicker = mask.style().fills()[0].color()\n  }\n\n  maskProvider.registerColor(context, rootObject, params)\n}\n","import MochaJSDelegate from './MochaJSDelegate.js'\nimport logger from './logger'\nimport settingsProvider from \"../providers/settings\";\n\nexport default {\n  clearSelection,\n  getIconNameByNSUrl,\n  createLabel,\n  getSelectedArtboardsAndSymbols,\n  createWebview,\n  createDivider,\n  runFramework,\n  getImageByColor,\n  hasMask,\n  hasSharedStyle,\n  layerToSvg,\n  svgHasStroke,\n  convertMSColorToString,\n  convertStringToMSColor,\n  getBorderColor,\n  getRootObject,\n  getSizeBetweenIcon,\n  buildPrefix\n}\n\n\n/**\n * @name clearSelection\n * @description unselect all\n * @param context\n */\nfunction clearSelection(context) {\n  context.api().selectedDocument.selectedLayers.clear()\n}\n\n/**\n * @name getIconNameByNSUrl\n * @description get name of icon by NSUrl\n * @param icon {Object} : NSUrl\n * @returns {String}\n */\nfunction getIconNameByNSUrl(icon) {\n  return icon.lastPathComponent().split('.')[0]\n}\n\n/**\n * @name createLabel\n * @description create label in NSTextField\n * @param name {String}\n * @param x {Number}\n * @param y {Number}\n * @param w {Number}\n * @param h {Number}\n * @param isDescription {Boolean}\n * @returns {Object} : NSTextField\n */\nfunction createLabel(name, x, y, w, h, isDescription) {\n\n  const label = NSTextField.alloc().initWithFrame_(NSMakeRect(x, y, w, h));\n  if (isDescription) {\n    label.setTextColor(NSColor.colorWithCalibratedRed_green_blue_alpha(0 / 255, 0 / 255, 0 / 255, 0.6));\n  }\n  label.setEditable_(false);\n  label.setSelectable_(false);\n  label.setBezeled_(false);\n  label.setDrawsBackground_(false);\n  label.setFont(NSFont.systemFontOfSize((isDescription) ? 11 : 13));\n  label.setStringValue_(name);\n\n  return label;\n}\n\n/**\n * @name getSelectedArtboards\n * @description get selected artboards\n * @param context\n * @returns {Array} : MSArtboardGroup\n */\nfunction getSelectedArtboardsAndSymbols(context) {\n  let selectedArtboardsAndSymbols = []\n\n  context.selection.forEach(function (layer) {\n    let className = String(layer.class())\n    if (className !== 'MSArtboardGroup' || className !== 'MSSymbolMaster') {\n      layer = layer.parentRoot()\n      className = String(layer.class())\n    }\n\n    if (selectedArtboardsAndSymbols.indexOf(String(layer.objectID())) === -1 && (className === 'MSArtboardGroup' || className === 'MSSymbolMaster')) {\n      selectedArtboardsAndSymbols.push({\n        'object': layer,\n        'type': className,\n        'id': layer.objectID()\n      })\n    }\n  })\n\n  selectedArtboardsAndSymbols = selectedArtboardsAndSymbols.filter((rootElement, index, self) =>\n    index === self.findIndex((compareElement) => (\n      compareElement.id === rootElement.id\n    ))\n  )\n\n  return selectedArtboardsAndSymbols\n}\n\n/**\n * @name createWebview\n * @param context\n * @param pickerButton\n * @param setColor {function}\n * @return {Object} : WebView\n */\nfunction createWebview(context, pickerButton, setColor) {\n\n  const webView = WebView.alloc().initWithFrame(NSMakeRect(0, 0, 220, 300));\n  const windowObject = webView.windowScriptObject();\n  const delegate = new MochaJSDelegate({\n    \"webView:didFinishLoadForFrame:\": (function (webView, webFrame) {\n      logger.log('loaded')\n    }),\n    \"webView:didChangeLocationWithinPageForFrame:\": (function (webView, webFrame) {\n      const query = windowObject.evaluateWebScript('window.location.hash')\n      const color = JSON.parse(decodeURIComponent(query).split('color=')[1])\n      color.r = parseInt(color.r) / 255\n      color.g = parseInt(color.g) / 255\n      color.b = parseInt(color.b) / 255\n      color.a = parseFloat(color.a)\n\n      const colorNS = NSColor.colorWithRed_green_blue_alpha(color.r, color.g, color.b, color.a)\n      const colorMS = MSImmutableColor.colorWithNSColor(colorNS)\n\n      pickerButton.setImage(getImageByColor(colorNS, { width: 40, height: 30 }))\n      setColor(colorMS)\n    })\n  })\n\n  webView.setDrawsBackground(false)\n  webView.setMainFrameURL_(context.plugin.urlForResourceNamed(\"webview.html\").path());\n  webView.setFrameLoadDelegate_(delegate.getClassInstance());\n  return webView\n}\n\n\n/**\n * @name createDivider\n * @param frame\n * @return {*}\n */\nfunction createDivider(frame) {\n  const divider = NSView.alloc().initWithFrame(frame);\n\n  divider.setWantsLayer(1);\n  divider.layer().setBackgroundColor(CGColorCreateGenericRGB(204 / 255, 204 / 255, 204 / 255, 1.0));\n\n  return divider;\n}\n\n/**\n * @name runFramework\n * @param context\n * @return {boolean}\n */\nfunction runFramework(context) {\n\n  const mocha = Mocha.sharedRuntime();\n\n  const frameworkName = \"SketchIconsFramework\";\n  const directory = context.scriptPath.stringByDeletingLastPathComponent();\n\n  if (mocha.valueForKey(frameworkName)) {\n    return true;\n  } else if (mocha.loadFrameworkWithName_inDirectory(frameworkName, directory)) {\n    mocha.setValue_forKey_(true, frameworkName);\n    return true;\n  } else {\n    log(\"❌ loadFramework: `\" + frameworkName + \"` failed!: \" + directory + \". Please define SketchIcons_FrameworkPath if you're trying to @import in a custom plugin\");\n    return false;\n  }\n}\n\n\n/**\n * @name getImageByColor\n * @param color\n * @param colorSize\n * @return {Object} : NSImage\n */\nfunction getImageByColor(color, colorSize = { width: 14, height: 14 }) {\n  const size = CGSizeMake(colorSize.width, colorSize.height);\n  const image = NSImage.alloc().init()\n  image.size = size\n  image.lockFocus()\n  color.setFill();\n  NSBezierPath.fillRect(NSMakeRect(0, 0, colorSize.width, colorSize.height));\n\n  // const colorCell = NSView.alloc().init()\n  // colorCell.backgroundColor = color\n  // colorCell.drawRect(NSMakeRect(0, 0, colorSize.width, colorSize.height))\n  image.unlockFocus()\n\n  return image\n}\n\n/**\n * @name iconHasColor\n * @param artboard\n * @return {Boolean}\n */\nfunction hasMask(artboard) {\n  return !!artboard.firstLayer().hasClippingMask()\n}\n\nfunction hasSharedStyle(artboard) {\n  return !!artboard.firstLayer().sharedStyle()\n}\n\n\nfunction layerToSvg(layer) {\n  const svgExporter = SketchSVGExporter.alloc().init();\n  const svgData = svgExporter.exportLayers([layer.immutableModelObject()]);\n  return NSString.alloc().initWithData_encoding(svgData, NSUTF8StringEncoding);\n}\n\nfunction svgHasStroke(rootObject) {\n  let hasBorder = false\n  rootObject.children().forEach((layer) => {\n    if (layer.usedStyle().hasEnabledBorder()) {\n      hasBorder = true\n    }\n  });\n\n  return hasBorder\n}\n\nfunction getBorderColor(rootObject) {\n  let color;\n  const layers = rootObject.children()\n\n  for (let i = 0; i < layers.length; i++) {\n    let style = layers[i].usedStyle()\n    color = style.firstEnabledBorder()\n    if (color) break\n  }\n\n  return color\n}\n\nfunction convertMSColorToString(colorMS) {\n  return JSON.stringify({ r: colorMS.red(), g: colorMS.green(), b: colorMS.blue(), a: colorMS.alpha() })\n}\n\nfunction convertStringToMSColor(string) {\n  const color = (typeof string !== 'object') ? string : JSON.parse(string)\n  const colorNS = NSColor.colorWithRed_green_blue_alpha(color.r, color.g, color.b, color.a)\n\n  return MSImmutableColor.colorWithNSColor(colorNS)\n}\n\nfunction getRootObject(context) {\n  const result = [];\n  context.api().selectedDocument.selectedPage.sketchObject.layers().forEach((layer) => {\n    let className = String(layer.class())\n    if (className === 'MSArtboardGroup' || className === 'MSSymbolMaster') {\n      result.push(layer)\n    }\n  })\n\n  return result;\n}\n\nfunction getSizeBetweenIcon(rootObjectSize, size) {\n  const value = parseInt(size)\n  const unit = size.replace(value, '')\n  return (unit && unit === '%') ? rootObjectSize + rootObjectSize * (value / 100) : rootObjectSize + value;\n}\n\nfunction buildPrefix(context, rootObjectSize) {\n  const settings = settingsProvider.getSettings(context, 'default')\n  // console.log('>>>>>>>>>>>', (settings.prefixRootObject.data !== 'null'));\n  // console.log('>>>>>>>>>>>', settings.prefixRootObject.data);\n  return (settings.prefixRootObject.data !== 'null') ? settings.prefixRootObject.data.replace('$size', rootObjectSize) : '';\n\n}\n\n// function zoomOutOfPage(context){\n//   const currentPage = context.document.currentPage()\n//   const artboards = [];\n//     currentPage.layers().forEach(layer => {\n//       artboards.push(layer)\n//     })\n//   currentPage.changeSelectionBySelectingLayers(artboards);\n//\n//\n//   MSDocument.currentDocument().eventHandlerManager().currentHandler().zoomToSelection()\n// }\n","module.exports = require(\"sketch/dom\");"],"sourceRoot":""}