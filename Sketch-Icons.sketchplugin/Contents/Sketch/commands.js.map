{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/commands.js","webpack://exports/./src/modals/modals.js","webpack://exports/./src/modals/settings.js","webpack://exports/./src/providers/artboard.js","webpack://exports/./src/providers/files.js","webpack://exports/./src/providers/libraries.js","webpack://exports/./src/providers/mask.js","webpack://exports/./src/providers/settings.js","webpack://exports/./src/providers/svg.js","webpack://exports/./src/utils/MochaJSDelegate.js","webpack://exports/./src/utils/analytics.js","webpack://exports/./src/utils/logger.js","webpack://exports/./src/utils/modals.js","webpack://exports/./src/utils/switchV3ToV4.js","webpack://exports/./src/utils/utils.js"],"names":["importIcons","context","utils","runFramework","params","button","listIcon","files","selectIconsFiles","length","importedIcons","artboardProvider","initImport","initImportIcons","label","withMask","analytics","action","updateIconsOnSelectedArtboards","selectedArtboardsAndSymbols","getSelectedArtboardsAndSymbols","modals","newErrorModal","replacedIcons","svg","initUpdateIconsSelectedArtboards","organizeIcons","selectedLayers","selection","initOrganizeIcons","forEach","icon","removeFromParent","addMaskOnSelectedArtboards","maskProvider","initAddMaskOnSelectedArtboards","removeMaskOnSelectedArtboards","rootElement","removeMask","object","setSettings","settingsProvider","registerSettings","global","disabledColor","NSColor","colorWithCalibratedRed_green_blue_alpha","maskModal","modalParams","messageText","informativeText","height","width","lineHeight","coeffCurrentHeight","isLibrarySource","adjustHeight","constructBase","makeMaskRadioButtonParams","makeMaskLibraryParams","makeMaskColorPickerParams","result","modal","runModal","colorMenu","colorsMenuParams","selectedItem","color","representedObject","colorLib","colorLibsMenuParams","colorPicker","colorPickerColor","importModal","usePresets","settingsValues","getSettings","hasValue","presets","data","split","makePresetsParams","makeArtboardParams","view","addSubview","createDivider","NSMakeRect","makeSymbolParams","makeMaskCheckboxParams","setEnabledColorLibraryMenu","setEnabledColorMenu","setEnabledRadioButton","addListenerOnMaskCheckbox","convertSymbol","symbolParams","state","checkboxMaskParams","preset","presetCheckBox","push","artboardSize","parseInt","sizeBox","stringValue","iconPadding","paddingBox","artboardPadding","MSColor","blackColor","artboardModal","button1","COSAlertWindow","new","NSView","alloc","initWithFrame","addAccessoryView","setMessageText","addButtonWithTitle","setInformativeText","map","properties","padding","presetLabel","createLabel","sizeLabel","paddingLabel","makePreset","textBoxLabel","textBox","NSTextField","setStringValue","textBoxUnit","paddingBoxLabel","paddingBoxUnit","setNextKeyView","yAxis","NSButton","setState","setButtonType","NSSwitchButton","setFont","NSFont","systemFontOfSize_","setTitle","newPreset","addListenerPreset","maskCheckboxLabel","symbolCheckBox","maskCheckBox","radioButtonLabel","buttonFormat","NSButtonCell","init","NSRadioButton","matrixFormat","NSMatrix","initWithFrame_mode_prototype_numberOfRows_numberOfColumns","NSRadioModeMatrix","setCellSize","CGSizeMake","cells","setListenerRadioButon","radioParams","colorLibsLabel","colorLibsMenu","NSPopUpButton","colorMenuLabel","colorLibsMenuParamsLabel","colorsMenuParamsLabel","menu","libraries","initLibsSelectList","AppController","sharedInstance","librariesController","availableLibraries","colorPickerLabel","pickerView","setWantsLayer","layer","setBackgroundColor","CGColorCreateGenericRGB","setBorderColor","borderWidth","hexLabel","pickerButton","NSMomentaryChangeButton","setImage","getImageByColor","colorWithRed_green_blue_alpha","setBordered","main","AMOMain","setCOSJSTargetFunction","openPopover_onView_withWebview","createWebview","setStringValue_","immutableModelObject","hexValue","mask","numberOfItems","addLibraryColorsFields","removePickerButton","item","String","selectedCells","title","removeLibraryColorsFields","addPickerButton","enabled","controlTextColor","setTextColor","setEnabled","getStateColor","removeFromSuperview","settingsModal","Object","keys","marginLeftColRight","adjust","lineOne","lineTwo","makePresetParams","prefixRootObjectParams","quantityIconsByLine","marginBetweenRootObject","convertStrokeToFillParams","replace","iconsByLine","convertStroke","prefixRootObject","presetsBox","value","setPlaceholderString","placeholder","addDescription","convertStrokeCheckboxLabel","convertStrokeCheckBox","iconByLineParamsLabel","sizeBoxUnit","marginBetweenRootObjectParamsLabel","prefixRootObjectParamsLabel","text","ajust","descriptionLabel","getPaddingAndSize","artboardParams","sizeBetweenPreset","titleFontSize","workingRootObject","createArtboard","index","name","space","getSizeBetweenIcon","y","yOrigin","x","xOrigin","rootObject","MSArtboardGroup","setName","prefix","setPositionRootObject","document","currentPage","addLayers","MSSymbolMaster","convertArtboardToSymbol","mensuration","rootObjectFrame","frame","setWidth","setHeight","setX","setY","setOrigin","setOfRootObject","Y","X","size","layerSize","origin","Math","max","clearSelection","getIconNameByNSUrl","newRootObject","ext","toString","pop","toLowerCase","importerProvider","addPDF","addBITMAP","svgData","NSString","initWithContentsOfURL","processSVG","e","logger","error","class","ancestry","MSImmutableLayerAncestry","ancestryWithMSLayer_","exportRequest","MSExportRequest","exportRequestsFromLayerAncestry_","firstObject","format","exporter","MSExporter","exporterForRequest_colorSpace_","NSColorSpace","sRGBColorSpace","initWithData_encoding","NSUTF8StringEncoding","addSVGNew","cb","rootObjects","getRootObject","withPresetTitle","setArtboardsSize","buildPrefix","newText","Array","isArray","showMessage","MSTextLayer","fontManager","NSFontManager","sharedFontManager","boldItalic","fontWithFamily_traits_weight_size","NSBoldFontMask","textFrame","addSVG","addColor","command","setValue_forKey_onLayer","artboard","valueForKey_onLayer","layers","rect","min","resizeRootObject","AVAILABLE_EXT","panel","NSOpenPanel","openPanel","setAllowsMultipleSelection","setCanChooseDirectories","setAllowedFileTypes","setCanChooseFiles","setPrompt","NSFileHandlingPanelOKButton","getFilesByUrls","URLs","urls","i","hasDirectoryPath","NSFileManager","defaultManager","contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error","pathExtension","indexOf","getLibById","getColorFromSymbol","getSymbolFromDocument","loadLibrary","libraryId","library","libraryID","loadColorFromSelectedLib","removeAllItems","getColorSymbolsFromDocument","loadSynchronously","addListener","libraryItem","updateColorMenu","NSMenu","currentDocument","NSMenuItem","addItem","colors","documentData","initColorSelectList","popColorMenu","cancelTracking","symbol","colorRGBA","red","green","blue","alpha","image","localSymbols","symbolId","symbolID","backgroundColor","children","style","hasEnabledFill","fills","getMaskPropertiesFromArtboard","registerMask","settingsParams","svgHasStroke","svgProvider","convertStrokeToFill","hasMask","console","log","firstLayer","applyColor","cleanSvg","applyMask","librariesProvider","styledLayer","hasEnabledBorder","enabledBorders","border","MSImmutableColor","iconLayer","count","hasClippingMask","clippingMaskMode","fillColor","removeAllStyleFills","addStylePartOfType","lastLayer","colorId","convertMSColorToString","getColorParams","maskLayer","colorLibraryId","colorSymbolId","colorString","switchVersion","switchToV4","colorSymbol","colorLibrary","convertStringToMSColor","createMaskFromNean","currentRootObjectSize","MSShapeGroup","shapeWithRect","fill","getMaskSymbolFromLib","colorSymbolMaster","librairiesController","importedSymbol","MSApplicationMetadata","metadata","appVersion","shareableObjectReference","MSShareableObjectReference","referenceForShareableObject_inLibrary","importShareableObjectReference_intoDocument","importForeignSymbol_fromLibrary_intoDocument_","symbolMaster","newSymbolInstance","currentArtboardSize","setHeightRespectingProportions","setWidthRespectingProportions","disableAllFills","resetSettings","LIST_SETTINGS_FIELDS","default","field","NSUserDefaults","standardUserDefaults","setObject_forKey","setValue_forKey_onDocument","fallbackValue","objectForKey","setting","iconParams","replaceBy","removeAllLayers","withResize","viewBox","stringWithString","getViewBox","addRectToResize","svgImporter","MSSVGImporter","prepareToImportFromData","dataUsingEncoding","svgLayer","importAsLayer","removeTxt","addLayer","resizeIcon","removeDeleteMeRect","center","svgLayerFrame","constrainProportions","rootObjectPosition","pdfImporter","MSPDFImporter","prepareToImportFromURL","pdfLayer","resizeToFitChildren","resizesContent","layerFrame","MSLayerGroup","moveLayers_intoGroup","MSBitmapLayer","bitmapLayerWithImageFromPath","svgString","addrect","unGroup","mergeLayer","resizeToFitChildrenWithOption","shapeGroupWidth","shapeGroupHeight","currentArtboardRect","scope","predicateTextLayers","NSPredicate","predicateWithFormat","filteredArrayUsingPredicate","loop","objectEnumerator","nextObject","ungroup","moveToLayer_beforeLayer","booleanOperationCanBeReset","setBooleanOperation","match","parseFloat","canConvertToOutlines","layersByConvertingToOutlines","disableAllBorders","MochaJSDelegate","selectorHandlerDict","superclass","uniqueClassName","NSUUID","UUID","UUIDString","delegateClassDesc","MOClassDescription","allocateDescriptionForClassWithName_superclass_","NSObject","registerClass","handlers","setHandlerForSelector","selectorString","func","handlerHasBeenSet","selector","NSSelectorFromString","args","regex","exec","dynamicFunction","eval","join","addInstanceMethodWithSelector_function_","removeHandlerForSelector","getHandlerForSelector","getAllHandlers","getClass","NSClassFromString","getClassInstance","kUUIDKey","uuid","jsonToQueryString","json","key","encodeURIComponent","category","payload","v","t","cid","tid","ec","ea","el","ev","send","url","NSURL","URLWithString","stringWithFormat","task","NSTask","setLaunchPath","setArguments","outputPipe","NSPipe","pipe","setStandardOutput","launch","_log","message","debug","info","warn","newModal","getMainButtonParam","createArtboardFields","createCheckBoxes","createMaskFields","appendsFields","getParams","setNextKey","viewSize","layout","textBoxPadding","getter","checkboxFields","currentItem","allFields","withLabelBottom","reverse","fields","subviews","viewCell","foreign","foreignSymbol","originalMaster","layerToSvg","getBorderColor","api","selectedDocument","clear","lastPathComponent","w","h","isDescription","initWithFrame_","setEditable_","setSelectable_","setBezeled_","setDrawsBackground_","systemFontOfSize","className","parentRoot","objectID","filter","self","findIndex","compareElement","id","setColor","webView","WebView","windowObject","windowScriptObject","delegate","webFrame","query","evaluateWebScript","JSON","parse","decodeURIComponent","r","g","b","a","colorNS","colorMS","colorWithNSColor","setDrawsBackground","setMainFrameURL_","plugin","urlForResourceNamed","path","setFrameLoadDelegate_","divider","mocha","Mocha","sharedRuntime","frameworkName","directory","scriptPath","stringByDeletingLastPathComponent","valueForKey","loadFrameworkWithName_inDirectory","setValue_forKey_","colorSize","NSImage","lockFocus","colorCell","MSBackgroundColorView","drawRect","unlockFocus","svgExporter","SketchSVGExporter","exportLayers","hasBorder","firstEnabledBorder","stringify","string","selectedPage","sketchObject","rootObjectSize","unit","settings"],"mappings":"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","file":"commands.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/commands.js\");\n","import utils from './utils/utils';\nimport artboardProvider from './providers/artboard';\nimport maskProvider from './providers/mask';\nimport modals from './utils/modals';\nimport files from './providers/files';\nimport svg from './providers/svg';\nimport { importModal, maskModal } from './modals/modals';\nimport settingsModal from './modals/settings';\nimport settingsProvider from './providers/settings'\nimport analytics from './utils/analytics'\n\n/**\n * @name importIcons\n * @description trigger to start feature to import icons\n * @param context\n */\nexport function importIcons(context) {\n  utils.runFramework(context)\n  const params = importModal(context)\n  if (params.button !== 1000) return\n  params.listIcon = files.selectIconsFiles()\n  if (!params.listIcon.length) return\n  const importedIcons = artboardProvider.initImport(context, params, artboardProvider.initImportIcons)\n  const label = (params.withMask) ? 'import-mask' : 'import';\n  analytics.action(context, 'icons', 'import', label, importedIcons)\n}\n\n/**\n * @name updateIconsOnSelectedArtboards\n * @description trigger to start feature to update icon\n * @param context\n */\nexport function updateIconsOnSelectedArtboards(context) {\n  const selectedArtboardsAndSymbols = utils.getSelectedArtboardsAndSymbols(context);\n  if (selectedArtboardsAndSymbols.length === 0) return modals.newErrorModal('No artboards selected', 'Please select one or more artboards to replace icons.')\n  let params = {}\n  params.listIcon = files.selectIconsFiles()\n  if (!params.listIcon.length) return\n  if (selectedArtboardsAndSymbols.length > params.listIcon.length && params.listIcon.length !== 1) return modals.newErrorModal('Too much artboards selected', 'Please select as many artboards as icons.')\n  if (selectedArtboardsAndSymbols.length < params.listIcon.length && params.listIcon.length !== 1) return modals.newErrorModal('Too much icons selected', 'Please select as many icons as artboards.')\n  const replacedIcons = svg.initUpdateIconsSelectedArtboards(context, selectedArtboardsAndSymbols, params)\n  analytics.action(context, 'icons', 'replace', 'replace', replacedIcons)\n}\n\n/**\n * @name organizeIcons\n * @param context\n */\nexport function organizeIcons(context) {\n  const selectedLayers = context.selection;\n  if (selectedLayers.length === 0) return modals.newErrorModal('No layers selected', 'Please select one or more layers.')\n  utils.runFramework(context)\n  const params = importModal(context)\n  if (params.button !== 1000) return\n  params.listIcon = selectedLayers\n  artboardProvider.initImport(context, params, artboardProvider.initOrganizeIcons)\n  params.listIcon.forEach(icon => icon.removeFromParent())\n  const label = (params.withMask) ? 'organize-mask' : 'organize';\n  analytics.action(context, 'icons', 'organize', label, params.listIcon.length)\n}\n\n/**\n * @name addMaskOnSelectedArtboards\n * @description trigger to start feature to add mask\n * @param context\n */\nexport function addMaskOnSelectedArtboards(context) {\n  utils.runFramework(context)\n  const selectedArtboardsAndSymbols = utils.getSelectedArtboardsAndSymbols(context);\n  if (selectedArtboardsAndSymbols.length === 0) return modals.newErrorModal('No artboards selected', 'Please select one or more artboards to add a mask.')\n  const params = maskModal(context)\n  if (params.button !== 1000) return\n  maskProvider.initAddMaskOnSelectedArtboards(context, params, selectedArtboardsAndSymbols)\n  analytics.action(context, 'icons', 'mask', 'mask', selectedArtboardsAndSymbols.length)\n}\n\n/**\n * @name removeMaskOnSelectedArtboards\n * @description remove masks layer\n * @param context\n */\nexport function removeMaskOnSelectedArtboards(context) {\n  const selectedArtboardsAndSymbols = utils.getSelectedArtboardsAndSymbols(context);\n  if (selectedArtboardsAndSymbols.length === 0) return modals.newErrorModal('No artboards selected', 'Please select one or more artboards to add a mask.')\n  selectedArtboardsAndSymbols.forEach((rootElement) => {\n    maskProvider.removeMask(context, rootElement.object)\n  })\n  analytics.action(context, 'icons', 'remove mask', 'remove mask', selectedArtboardsAndSymbols.length)\n}\n\n/**\n * @name setSettings\n * @description set settings\n * @param context\n */\nexport function setSettings(context) {\n  const params = settingsModal(context)\n  if (params.button === 1001) return\n  settingsProvider.registerSettings(context, params)\n  analytics.action(context, 'settings', 'settings', 'settings')\n}\n","import utils from '../utils/utils'\nimport logger from '../utils/logger'\nimport libraries from '../providers/libraries'\nimport settingsProvider from '../providers/settings'\nlet global = {};\nconst disabledColor = NSColor.colorWithCalibratedRed_green_blue_alpha(170 / 255, 170 / 255, 170 / 255, 1)\nexport {\n  setEnabledColorMenu,\n  importModal,\n  maskModal,\n  constructBase\n}\n\nfunction maskModal(context) {\n  global.modalParams = {\n    messageText: 'Configure your color mask',\n    informativeText: 'Select your library and choose a color to apply as mask. Your layers will all be combined.',\n    height: 160,\n    width: 300,\n    lineHeight: 35\n  };\n\n  global.coeffCurrentHeight = 0;\n  global.isLibrarySource = true;\n  global.adjustHeight = 0;\n\n  constructBase('Continue', global);\n\n  makeMaskRadioButtonParams(global);\n  makeMaskLibraryParams(context, global);\n  makeMaskColorPickerParams(context, global);\n\n  const result = {\n    button: global.modal.runModal()\n  };\n\n  if (global.isLibrarySource) {\n    let colorMenu = global.colorsMenuParams.selectedItem();\n    result.color = (colorMenu) ? global.colorsMenuParams.representedObject() : null;\n\n    let colorLib = global.colorLibsMenuParams.selectedItem();\n    result.colorLib = (colorLib) ? global.colorLibsMenuParams.representedObject() : null;\n  } else {\n    result.colorPicker = global.colorPickerColor\n  }\n\n  return result\n}\n\nfunction importModal(context) {\n  let global = {};\n  let usePresets;\n  global.settingsValues = settingsProvider.getSettings(context, 'default');\n\n  global.modalParams = {\n    messageText: 'Configure your import',\n    informativeText: 'Your icons will be arranged in artboards. Set size and padding of your artboards.',\n    width: 300,\n    lineHeight: 35\n  };\n\n  if (settingsProvider.hasValue(global.settingsValues.presets)) {\n    global.modalParams.height = 300 + global.settingsValues.presets.data.split(',').length * 30\n    usePresets = true\n  } else {\n    global.modalParams.height = 300;\n    usePresets = false\n  }\n\n  global.modalParams.height = settingsProvider.hasValue(global.settingsValues.presets) ? 300 + global.settingsValues.presets.data.split(',').length * 30 : 300\n\n  global.coeffCurrentHeight = 0;\n  global.isLibrarySource = true;\n  global.adjustHeight = 0;\n\n  constructBase('Continue', global)\n  if (usePresets) {\n    makePresetsParams(global)\n  } else {\n    makeArtboardParams(global)\n  }\n\n  global.view.addSubview(utils.createDivider(NSMakeRect(0, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight - 10, global.modalParams.width, 1)));\n  global.adjustHeight = 5\n  makeSymbolParams(global)\n  global.view.addSubview(utils.createDivider(NSMakeRect(0, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight - 15, global.modalParams.width, 1)));\n  global.adjustHeight = 8\n  makeMaskCheckboxParams(global)\n  makeMaskRadioButtonParams(global)\n  makeMaskLibraryParams(context, global)\n  setEnabledColorLibraryMenu(false, global)\n  setEnabledColorMenu(false, global)\n  setEnabledRadioButton(false, global)\n  makeMaskColorPickerParams(context, global)\n  addListenerOnMaskCheckbox(global)\n\n  const result = {\n    button: global.modal.runModal(),\n    convertSymbol: global.symbolParams.state(),\n    withMask: !!global.checkboxMaskParams.state()\n  }\n\n  if (usePresets) {\n    result.presets = []\n    global.presets.forEach(preset => {\n      if (preset.presetCheckBox.state()) {\n        result.presets.push({\n          artboardSize: parseInt(preset.sizeBox.stringValue()),\n          iconPadding: parseInt(preset.paddingBox.stringValue())\n        })\n      }\n    })\n  } else {\n    result.artboardSize = parseInt(global.artboardSize.stringValue())\n    result.iconPadding = parseInt(global.artboardPadding.stringValue())\n  }\n\n  if (result.withMask && global.isLibrarySource) {\n    let colorMenu = global.colorsMenuParams.selectedItem()\n    result.color = (colorMenu) ? global.colorsMenuParams.representedObject() : null\n\n    let colorLib = global.colorLibsMenuParams.selectedItem()\n    result.colorLib = (colorLib) ? global.colorLibsMenuParams.representedObject() : null\n\n    if (!result.color) result.withMask = false\n  } else if (result.withMask) {\n    result.colorPicker = global.colorPickerColor || MSColor.blackColor()\n  }\n  return result\n}\n\nfunction artboardModal(context) {\n  let global = {};\n  global.settingsValues = settingsProvider.getSettings(context, 'placeholder')\n\n  global.modalParams = {\n    messageText: 'Configure your icons',\n    informativeText: 'Your icons will be moved in artboards. Set size and padding of your artboards.',\n    height: 100,\n    width: 300,\n    lineHeight: 35\n  }\n\n  global.coeffCurrentHeight = 0\n  global.adjustHeight = 0\n\n  constructBase(global)\n  makeArtboardParams(global)\n\n  return {\n    button: global.modal.runModal(),\n    artboardSize: parseInt(global.artboardSize.stringValue()),\n    iconPadding: parseInt(global.artboardPadding.stringValue()),\n  }\n}\n\nfunction constructBase(button1 = 'Continue', global) {\n\n  global.modal = COSAlertWindow.new();\n\n  global.view = NSView.alloc().initWithFrame(NSMakeRect(0, 0, global.modalParams.width, global.modalParams.height));\n\n  global.modal.addAccessoryView(global.view);\n  global.modal.setMessageText(global.modalParams.messageText);\n  global.modal.addButtonWithTitle(button1);\n  global.modal.setInformativeText(global.modalParams.informativeText);\n  global.modal.addButtonWithTitle('Cancel');\n}\n\nfunction makePresetsParams(global) {\n  const presets = global.settingsValues.presets.data.split(',').map(preset => {\n    const properties = preset.split('-')\n    return {\n      artboardSize: properties[0],\n      padding: (properties[1]) ? properties[1] : 0\n    }\n  })\n\n  global.presets = []\n\n  const presetLabel = utils.createLabel(`Presets`, 0, global.modalParams.height - global.modalParams.lineHeight, 150, 20)\n  global.view.addSubview(presetLabel)\n\n  const sizeLabel = utils.createLabel(`Size`, 180, global.modalParams.height - global.modalParams.lineHeight, 100, 20)\n  global.view.addSubview(sizeLabel)\n\n  const paddingLabel = utils.createLabel(`Padding`, 240, global.modalParams.height - global.modalParams.lineHeight, 100, 20)\n  global.view.addSubview(paddingLabel)\n\n  global.coeffCurrentHeight++\n\n  presets.forEach((preset) => {\n    global.coeffCurrentHeight++\n    makePreset(preset, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight, global)\n  })\n}\n\nfunction makeArtboardParams(global) {\n\n  global.coeffCurrentHeight++\n\n  const textBoxLabel = utils.createLabel('Artboard size', 0, global.modalParams.height - global.modalParams.lineHeight, 150, 20)\n  global.view.addSubview(textBoxLabel)\n  const textBox = NSTextField.alloc().initWithFrame(NSMakeRect(150, global.modalParams.height - global.modalParams.lineHeight, 50, 20));\n  textBox.setStringValue(24);\n  global.view.addSubview(textBox)\n  const textBoxUnit = utils.createLabel('px', 205, global.modalParams.height - global.modalParams.lineHeight, 50, 20)\n  global.view.addSubview(textBoxUnit)\n\n  global.coeffCurrentHeight++\n\n  const paddingBoxLabel = utils.createLabel('Artboard Padding', 0, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight, 150, 20)\n  global.view.addSubview(paddingBoxLabel)\n  const paddingBox = NSTextField.alloc().initWithFrame(NSMakeRect(150, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight, 50, 20));\n  paddingBox.setStringValue(4);\n  global.view.addSubview(paddingBox)\n  const paddingBoxUnit = utils.createLabel('px', 205, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight, 50, 20)\n  global.view.addSubview(paddingBoxUnit)\n\n  global.artboardPadding = paddingBox\n  global.artboardSize = textBox\n\n  global.artboardSize.setNextKeyView(global.artboardPadding)\n}\n\nfunction makePreset(preset, yAxis, global) {\n\n  const presetCheckBox = NSButton.alloc().initWithFrame(NSMakeRect(150, yAxis, 30, 20));\n  presetCheckBox.setState(true);\n  presetCheckBox.setButtonType(NSSwitchButton);\n  presetCheckBox.setFont(NSFont.systemFontOfSize_(13));\n  presetCheckBox.setTitle('')\n\n  global.view.addSubview(presetCheckBox)\n\n  const sizeBox = NSTextField.alloc().initWithFrame(NSMakeRect(180, yAxis, 50, 20));\n  sizeBox.setStringValue(preset.artboardSize);\n  global.view.addSubview(sizeBox)\n\n  const paddingBox = NSTextField.alloc().initWithFrame(NSMakeRect(240, yAxis, 50, 20));\n  paddingBox.setStringValue(preset.padding);\n  global.view.addSubview(paddingBox)\n\n  const newPreset = { sizeBox, paddingBox, presetCheckBox }\n\n  addListenerPreset(newPreset)\n\n  global.presets.push(newPreset)\n}\n\nfunction makeSymbolParams(global) {\n\n  global.coeffCurrentHeight++\n\n  const maskCheckboxLabel = utils.createLabel('Symbols', 0, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight - global.adjustHeight, 150, 20)\n  global.view.addSubview(maskCheckboxLabel)\n\n  const symbolCheckBox = NSButton.alloc().initWithFrame(NSMakeRect(150, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight - global.adjustHeight, 200, 20));\n  symbolCheckBox.setButtonType(NSSwitchButton);\n  symbolCheckBox.setState(true);\n  symbolCheckBox.setFont(NSFont.systemFontOfSize_(13));\n  symbolCheckBox.setTitle('Convert to symbol')\n  global.view.addSubview(symbolCheckBox);\n\n  global.symbolParams = symbolCheckBox\n}\n\nfunction makeMaskCheckboxParams(global) {\n\n  global.coeffCurrentHeight++\n\n  const maskCheckboxLabel = utils.createLabel('Mask', 0, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight - global.adjustHeight, 150, 20)\n  global.view.addSubview(maskCheckboxLabel)\n\n  const maskCheckBox = NSButton.alloc().initWithFrame(NSMakeRect(150, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight - global.adjustHeight, 200, 20));\n  maskCheckBox.setButtonType(NSSwitchButton);\n  maskCheckBox.setState(false);\n  maskCheckBox.setFont(NSFont.systemFontOfSize_(13));\n  maskCheckBox.setTitle('Add color mask')\n  global.view.addSubview(maskCheckBox);\n\n  global.checkboxMaskParams = maskCheckBox\n}\n\nfunction makeMaskRadioButtonParams(global) {\n\n  global.coeffCurrentHeight++;\n  global.coeffCurrentHeight++;\n\n  const radioButtonLabel = utils.createLabel('Color Source', 0, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight - global.adjustHeight + 40, 150, 20)\n  global.view.addSubview(radioButtonLabel)\n\n  const buttonFormat = NSButtonCell.alloc().init();\n  buttonFormat.setButtonType(NSRadioButton);\n  const matrixFormat = NSMatrix.alloc().initWithFrame_mode_prototype_numberOfRows_numberOfColumns(\n    NSMakeRect(150, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight - global.adjustHeight, 300, 60),\n    NSRadioModeMatrix,\n    buttonFormat,\n    2,\n    1\n  );\n  matrixFormat.setCellSize(CGSizeMake(300, 25));\n  const cells = matrixFormat.cells();\n  cells[0].setTitle(\"From Symbols\");\n  cells[0].setFont(NSFont.systemFontOfSize_(13));\n  cells[1].setTitle(\"From Color picker\");\n  cells[1].setFont(NSFont.systemFontOfSize_(13));\n\n  global.view.addSubview(matrixFormat);\n\n  setListenerRadioButon(cells, global)\n\n  global.radioParams = matrixFormat\n  global.radioButtonLabel = radioButtonLabel\n}\n\nfunction makeMaskLibraryParams(context, global) {\n\n  global.coeffCurrentHeight++\n\n  const colorLibsLabel = utils.createLabel('Document Source', 0, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight - global.adjustHeight, 150, 25)\n  global.view.addSubview(colorLibsLabel)\n  const colorLibsMenu = NSPopUpButton.alloc().initWithFrame(NSMakeRect(150, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight - global.adjustHeight, 130, 30));\n\n  global.coeffCurrentHeight++\n\n  const colorMenuLabel = utils.createLabel('Color', 0, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight - global.adjustHeight, 150, 25)\n  global.view.addSubview(colorMenuLabel)\n  const colorMenu = NSPopUpButton.alloc().initWithFrame(NSMakeRect(150, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight - global.adjustHeight, 130, 30));\n\n  global.view.addSubview(colorLibsMenu);\n  global.view.addSubview(colorMenu);\n\n  global.colorLibsMenuParams = colorLibsMenu\n  global.colorsMenuParams = colorMenu\n  global.colorLibsMenuParamsLabel = colorLibsLabel\n  global.colorsMenuParamsLabel = colorMenuLabel\n\n  colorLibsMenu.menu = libraries.initLibsSelectList(context, AppController.sharedInstance().librariesController().availableLibraries(), colorMenu, global);\n}\n\nfunction makeMaskColorPickerParams(context, global) {\n\n  const colorPickerLabel = utils.createLabel('Color picker', 0, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight - global.adjustHeight + 20, 150, 20)\n\n  const pickerView = NSView.alloc().initWithFrame(NSMakeRect(150, global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight - global.adjustHeight, 130, 60));\n  pickerView.setWantsLayer(true)\n  pickerView.layer().setBackgroundColor(CGColorCreateGenericRGB(1, 1, 1, 1.0))\n  pickerView.layer().setBorderColor(CGColorCreateGenericRGB(186 / 255, 186 / 255, 186 / 255, 1))\n  pickerView.layer().borderWidth = 1\n\n  const hexLabel = utils.createLabel('#000000', 60, 20, 100, 20)\n  pickerView.addSubview(hexLabel)\n\n  const pickerButton = NSButton.alloc().initWithFrame(NSMakeRect(5, 15, 50, 30));\n  pickerButton.setButtonType(NSMomentaryChangeButton)\n  pickerButton.setImage(utils.getImageByColor(NSColor.colorWithRed_green_blue_alpha(0, 0, 0, 1), {\n    width: 40,\n    height: 30\n  }))\n\n  pickerButton.setBordered(false);\n\n  const main = AMOMain.alloc().init();\n\n  pickerButton.setCOSJSTargetFunction(() => {\n    main.openPopover_onView_withWebview(pickerButton, global.view, utils.createWebview(context, pickerButton, (color) => {\n      global.colorPickerColor = color\n      hexLabel.setStringValue_(`#${color.immutableModelObject().hexValue()}`)\n    }))\n  })\n\n  pickerView.addSubview(pickerButton)\n\n  global.pickerView = pickerView\n  global.colorPickerLabel = colorPickerLabel\n}\n\nfunction addListenerOnMaskCheckbox(global) {\n\n\n  global.checkboxMaskParams.setCOSJSTargetFunction((mask) => {\n    if (mask.state()) {\n      setEnabledRadioButton(true, global)\n      setEnabledColorLibraryMenu(true, global)\n      if (global.colorsMenuParams.numberOfItems() > 0) setEnabledColorMenu(true, global)\n    } else {\n      setEnabledRadioButton(false, global)\n      setEnabledColorLibraryMenu(false, global)\n      setEnabledColorMenu(false, global)\n      addLibraryColorsFields(global)\n      removePickerButton(global)\n      global.radioParams.cells()[0].state = true\n      global.radioParams.cells()[1].state = false\n    }\n  });\n}\n\nfunction setListenerRadioButon(cells, global) {\n  function setState(item) {\n    if (String(item.selectedCells()[0].title()) === 'From Symbols') {\n      addLibraryColorsFields(global)\n      removePickerButton(global)\n      global.isLibrarySource = true\n    } else {\n      removeLibraryColorsFields(global)\n      addPickerButton(global)\n      global.isLibrarySource = false\n    }\n  }\n\n  cells[0].setCOSJSTargetFunction(setState);\n  cells[1].setCOSJSTargetFunction(setState);\n}\n\nfunction setEnabledColorLibraryMenu(enabled, global) {\n  const color = (enabled) ? NSColor.controlTextColor() : disabledColor\n  global.colorLibsMenuParamsLabel.setTextColor(color)\n  global.colorLibsMenuParams.setEnabled(enabled)\n\n}\n\nfunction setEnabledColorMenu(enabled, global) {\n  global.colorsMenuParamsLabel.setTextColor(getStateColor(enabled))\n  global.colorsMenuParams.setEnabled(enabled)\n}\n\nfunction setEnabledRadioButton(enabled, global) {\n  global.radioParams.setEnabled(enabled)\n  global.radioButtonLabel.setTextColor(getStateColor(enabled))\n}\n\nfunction removeLibraryColorsFields(global) {\n  global.colorLibsMenuParams.removeFromSuperview()\n  global.colorsMenuParams.removeFromSuperview()\n  global.colorLibsMenuParamsLabel.removeFromSuperview()\n  global.colorsMenuParamsLabel.removeFromSuperview()\n}\n\nfunction addLibraryColorsFields(global) {\n  global.view.addSubview(global.colorLibsMenuParams);\n  global.view.addSubview(global.colorsMenuParams);\n  global.view.addSubview(global.colorLibsMenuParamsLabel);\n  global.view.addSubview(global.colorsMenuParamsLabel);\n}\n\nfunction addPickerButton(global) {\n  global.view.addSubview(global.pickerView);\n  global.view.addSubview(global.colorPickerLabel);\n\n}\n\nfunction removePickerButton(global) {\n  global.pickerView.removeFromSuperview()\n  global.colorPickerLabel.removeFromSuperview()\n}\n\nfunction getStateColor(enabled) {\n  return (enabled) ? NSColor.controlTextColor() : disabledColor\n}\n\nfunction addListenerPreset(newPreset) {\n  newPreset.presetCheckBox.setCOSJSTargetFunction(() => {\n    newPreset.sizeBox.setEnabled(newPreset.presetCheckBox.state())\n    newPreset.paddingBox.setEnabled(newPreset.presetCheckBox.state())\n\n  })\n}\n","import { constructBase } from './modals';\nimport utils from '../utils/utils';\nimport settingsProvider from \"../providers/settings\";\n\nexport default settingsModal;\n\nfunction settingsModal(context) {\n\n  let global = {};\n\n  global.settingsValues = settingsProvider.getSettings(context, 'placeholder')\n\n  global.modalParams = {\n    messageText: 'Settings',\n    informativeText: 'Customize your imports using presets and other features.',\n    height: (Object.keys(global.settingsValues).length + 1) * 73,\n    width: 340,\n    lineHeight: 45\n  };\n\n  global.coeffCurrentHeight = 0;\n  global.adjustHeight = 0;\n  global.marginLeftColRight = 130;\n  global.adjust = -5;\n  global.lineOne = 15;\n  global.lineTwo = 0;\n\n  constructBase('Save', global);\n\n  makePresetParams(global);\n  prefixRootObjectParams(global)\n  quantityIconsByLine(global)\n  marginBetweenRootObject(global)\n  convertStrokeToFillParams(global)\n\n  return {\n    button: global.modal.runModal(),\n    presets: String(global.presets.stringValue()).replace(/ /g, ''),\n    iconsByLine: parseInt(global.iconsByLine.stringValue()) || null,\n    convertStroke: global.convertStroke.state(),\n    marginBetweenRootObject: global.marginBetweenRootObject.stringValue().replace(/ /g, ''),\n    prefixRootObject: global.prefixRootObject.stringValue()\n  };\n}\n\nfunction makePresetParams(global) {\n  global.coeffCurrentHeight++;\n  let yAxis = global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight + global.adjust\n\n  const textBoxLabel = utils.createLabel('Size Presets', 0, yAxis, global.marginLeftColRight, 20);\n  global.view.addSubview(textBoxLabel);\n\n  const presetsBox = NSTextField.alloc().initWithFrame(\n    NSMakeRect(global.marginLeftColRight, yAxis, 145, 21)\n  );\n\n  if (settingsProvider.hasValue(global.settingsValues.presets)) {\n    presetsBox.setStringValue(String(global.settingsValues.presets.value));\n  } else {\n    presetsBox.setPlaceholderString(String(global.settingsValues.presets.placeholder));\n  }\n\n  global.view.addSubview(presetsBox);\n\n  global.coeffCurrentHeight++;\n  addDescription('Set your artboard sizes and padding.', global.lineOne, global)\n  addDescription('Format: size-padding', global.lineTwo, global)\n\n  global.presets = presetsBox\n\n}\n\nfunction convertStrokeToFillParams(global) {\n\n  global.coeffCurrentHeight++;\n  const yAxis = global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight + 30\n\n  const convertStrokeCheckboxLabel = utils.createLabel('Stroke to Fill', 0, yAxis, global.marginLeftColRight, 20)\n  global.view.addSubview(convertStrokeCheckboxLabel);\n\n  const convertStrokeCheckBox = NSButton.alloc().initWithFrame(\n    NSMakeRect(global.marginLeftColRight, yAxis, 200, 21)\n  );\n  convertStrokeCheckBox.setButtonType(NSSwitchButton);\n  convertStrokeCheckBox.setState(parseInt(global.settingsValues.convertStroke.data));\n  convertStrokeCheckBox.setFont(NSFont.systemFontOfSize_(13));\n  convertStrokeCheckBox.setTitle('Auto-Convert');\n  global.view.addSubview(convertStrokeCheckBox);\n\n  global.coeffCurrentHeight++;\n  addDescription('global will allow you to add a dynamic color mask ', global.lineOne + 30, global)\n  addDescription('over your outlined icons.', global.lineTwo + 30, global)\n\n  global.convertStroke = convertStrokeCheckBox;\n}\n\nfunction quantityIconsByLine(global) {\n  global.coeffCurrentHeight++;\n  const yAxis = global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight + global.adjust\n\n  const iconByLineParamsLabel = utils.createLabel('Icons Grid', 0, yAxis, global.marginLeftColRight, 20);\n  global.view.addSubview(iconByLineParamsLabel);\n  const sizeBox = NSTextField.alloc().initWithFrame(\n    NSMakeRect(global.marginLeftColRight, yAxis, 50, 21)\n  );\n\n  if (String(global.settingsValues.iconsByLine.value) === 'null') {\n    sizeBox.setPlaceholderString('10')\n  } else {\n    sizeBox.setStringValue(String(global.settingsValues.iconsByLine.value));\n  }\n\n  global.view.addSubview(sizeBox);\n  const sizeBoxUnit = utils.createLabel('icons per row', global.marginLeftColRight + 55, yAxis, 100, 20)\n  global.view.addSubview(sizeBoxUnit);\n\n  global.coeffCurrentHeight++;\n  addDescription('Set the number of imported icons per row.', global.lineOne, global)\n  // addDescription('Format: size-padding', global.lineTwo)\n\n  global.iconsByLine = sizeBox;\n}\n\nfunction marginBetweenRootObject(global) {\n  global.coeffCurrentHeight++;\n  const yAxis = global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight + 15\n\n  const marginBetweenRootObjectParamsLabel = utils.createLabel('Spacing', 0, yAxis, global.marginLeftColRight, 20);\n  global.view.addSubview(marginBetweenRootObjectParamsLabel);\n  const sizeBox = NSTextField.alloc().initWithFrame(\n    NSMakeRect(global.marginLeftColRight, yAxis, 50, 21)\n  );\n\n  if (settingsProvider.hasValue(global.settingsValues.marginBetweenRootObject)) {\n    sizeBox.setStringValue(String(global.settingsValues.marginBetweenRootObject.value));\n  } else {\n    sizeBox.setPlaceholderString(String(global.settingsValues.marginBetweenRootObject.placeholder));\n  }\n\n  global.view.addSubview(sizeBox);\n  const sizeBoxUnit = utils.createLabel('px or %', global.marginLeftColRight + 55, yAxis, 100, 20)\n  global.view.addSubview(sizeBoxUnit);\n\n  global.coeffCurrentHeight++;\n  addDescription('Set the spacing between the imported icons.', global.lineOne + 15, global)\n  // addDescription('Format: size-padding', global.lineTwo)\n\n  global.marginBetweenRootObject = sizeBox;\n}\n\nfunction prefixRootObjectParams(global) {\n  global.coeffCurrentHeight++;\n  const yAxis = global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight + global.adjust\n\n  const prefixRootObjectParamsLabel = utils.createLabel('Add Prefix ', 0, yAxis, global.marginLeftColRight, 20);\n  global.view.addSubview(prefixRootObjectParamsLabel);\n  const sizeBox = NSTextField.alloc().initWithFrame(\n    NSMakeRect(global.marginLeftColRight, yAxis, 145, 21)\n  );\n\n  if (settingsProvider.hasValue(global.settingsValues.prefixRootObject)) {\n    sizeBox.setStringValue(String(global.settingsValues.prefixRootObject.value));\n  } else {\n    sizeBox.setPlaceholderString(String(global.settingsValues.prefixRootObject.placeholder));\n  }\n\n  global.view.addSubview(sizeBox);\n\n  global.coeffCurrentHeight++;\n  addDescription('Add a path structure to the name of yours icons.', global.lineOne, global)\n  addDescription('$size is equal to the size of the artboard.', global.lineTwo, global)\n\n  global.prefixRootObject = sizeBox;\n}\n\n\nfunction addDescription(text, ajust, global) {\n\n  const yAxis = global.modalParams.height - global.modalParams.lineHeight * global.coeffCurrentHeight + ajust\n\n  const descriptionLabel = utils.createLabel(text, 0, yAxis, 400, 20, true);\n\n  global.view.addSubview(descriptionLabel);\n}\n","import utils from '../utils/utils';\nimport logger from '../utils/logger';\nimport importerProvider from '../providers/svg';\nimport maskProvider from './mask';\nimport settingsProvider from './settings';\n// import dom from 'sketch'\n\n// import { Text } from 'sketch'\n\nexport default {\n  initImport,\n  initImportIcons,\n  getPaddingAndSize,\n  initOrganizeIcons\n};\n\nconst artboardParams = {\n  iconsByLine: 10,\n  sizeBetweenPreset: 200,\n  titleFontSize: 32\n};\n\nconst workingRootObject = [];\n\n/**\n * @name createArtboard\n * @description set position and size and create artboard\n * @param context {Object} :\n * @param index {Number}\n * @param name {String}\n * @param params {Object}\n * @returns {Object} : MSArtboardGroup\n */\nfunction createArtboard(context, index, name, params) {\n\n  const marginBetweenRootObject = settingsProvider.getSettings(context, 'default').marginBetweenRootObject;\n  const space = utils.getSizeBetweenIcon(artboardParams.width, marginBetweenRootObject.data)\n\n  if (index === 0) {\n    artboardParams.y = params.yOrigin;\n    artboardParams.x = params.xOrigin || 0;\n  }\n  else if (index % artboardParams.iconsByLine === 0) {\n    artboardParams.y += space;\n    artboardParams.x = params.xOrigin || 0;\n  } else {\n    artboardParams.x += space;\n  }\n\n  const rootObject = MSArtboardGroup.new();\n  rootObject.setName(`${params.prefix}${name}`);\n\n  setPositionRootObject(rootObject, artboardParams)\n\n  context.document.currentPage().addLayers([rootObject]);\n\n  return params.convertSymbol\n    ? MSSymbolMaster.convertArtboardToSymbol(rootObject)\n    : rootObject;\n}\n\n/**\n * @name setPositionRootObject\n * @param rootObject\n * @param mensuration\n */\nfunction setPositionRootObject(rootObject, mensuration) {\n\n  const rootObjectFrame = rootObject.frame();\n  rootObjectFrame.setWidth(mensuration.width);\n  rootObjectFrame.setHeight(mensuration.height);\n  rootObjectFrame.setX(mensuration.x);\n  rootObjectFrame.setY(mensuration.y);\n}\n\nfunction setOrigin(context, setOfRootObject) {\n  const Y = [];\n  const X = [];\n  let size = 0;\n\n  setOfRootObject.forEach(layer => {\n    const layerSize = layer.frame().height();\n    const origin = layer.origin()\n    Y.push(origin.y - size);\n    X.push(origin.x - size);\n    if (layerSize > size) size = layerSize;\n  });\n\n\n  const yOrigin = (Y.length !== 0) ? Math.max(...Y) : 0\n  const xOrigin = (X.length !== 0) ? Math.max(...X) + size : 0\n\n  return {\n    yOrigin: (setOfRootObject.length === 0) ? yOrigin : yOrigin + 100 + size,\n    xOrigin: (setOfRootObject.length === 0) ? xOrigin : xOrigin + 100 + size\n  }\n}\n\n\n/**\n * @name initImportIcons\n * @description main function to import multiple icons and mask on new artboard\n * @param context {Object}\n * @param params: {Object}\n */\nasync function initImportIcons(context, params) {\n  utils.clearSelection(context);\n  params.listIcon.forEach((icon, index) => {\n    try {\n      const name = utils.getIconNameByNSUrl(icon)\n      const newRootObject = createArtboard(context, index, name, params);\n      const ext = String(icon.toString().split('.').pop()).toLowerCase()\n      if (ext === 'pdf') return importerProvider.addPDF(context, newRootObject, params, icon);\n      if (ext === 'png' || ext === 'jpg' || ext === 'jpeg') return importerProvider.addBITMAP(context, newRootObject, params, icon)\n      const svgData = String(NSString.alloc().initWithContentsOfURL(icon));\n      processSVG(context, newRootObject, params, svgData)\n      workingRootObject.push(newRootObject)\n    } catch (e) {\n      logger.error(e);\n    }\n  });\n  utils.clearSelection(context);\n}\n\n/**\n * @name initOrganizeIcons\n * @param context\n * @param params\n */\nfunction initOrganizeIcons(context, params) {\n\n  params.listIcon.forEach(async (icon, index) => {\n    try {\n      const newRootObject = createArtboard(context, index, icon.name(), params);\n      if (String(icon.class()) === 'MSBitmapLayer') return importerProvider.addBITMAP(context, newRootObject, params, icon)\n      const ancestry = MSImmutableLayerAncestry.ancestryWithMSLayer_(icon);\n      const exportRequest = MSExportRequest.exportRequestsFromLayerAncestry_(ancestry).firstObject();\n      exportRequest.format = 'svg';\n      const exporter = MSExporter.exporterForRequest_colorSpace_(exportRequest, NSColorSpace.sRGBColorSpace());\n      const svgData = NSString.alloc().initWithData_encoding(exporter.data(), NSUTF8StringEncoding);\n      // await processSVG(context, newRootObject, params, String(svgData));\n      importerProvider.addSVGNew(context, newRootObject, params, svgData, true);\n      workingRootObject.push(newRootObject)\n    } catch (e) {\n      logger.error(e);\n    }\n  })\n}\n\n/**\n * @name initImport\n * @param context\n * @param params\n * @param cb\n */\nfunction initImport(context, params, cb) {\n  const rootObjects = utils.getRootObject(context)\n  params.yOrigin = setOrigin(context, rootObjects).yOrigin;\n  if (params.presets) {\n    const withPresetTitle = (rootObjects);\n    params.presets.forEach((preset) => {\n      setArtboardsSize(params, preset);\n      params.xOrigin = setOrigin(context, workingRootObject).xOrigin;\n      params.artboardSize = preset.artboardSize;\n      params.prefix = utils.buildPrefix(context, params.artboardSize);\n      if (withPresetTitle && rootObjects.length === 0) context.document.currentPage().addLayers([newText(preset, params.xOrigin)]);\n      artboardParams.iconsByLine = parseInt(settingsProvider.getSettings(context, 'default').iconsByLine.data);\n      cb(context, params)\n    })\n  } else {\n    params.prefix = utils.buildPrefix(context, params.artboardSize);\n    artboardParams.height = artboardParams.width = params.artboardSize;\n    artboardParams.iconsByLine = parseInt(settingsProvider.getSettings(context, 'default').iconsByLine.data)\n    cb(context, params)\n  }\n  const importedIcons = params.listIcon.length * ((Array.isArray(params.presets)) ? params.presets.length : 1)\n  context.document.showMessage(\n    `🎉 Tadaaa! 🎉 ${importedIcons} icon${params.listIcon.length > 1 ? 's' : ''} imported`\n  );\n  return importedIcons\n}\n\nfunction newText(preset, xOrigin) {\n  const text = MSTextLayer.new();\n  text.setStringValue_(`${preset.artboardSize}px`)\n  const fontManager = NSFontManager.sharedFontManager();\n  const boldItalic = fontManager.fontWithFamily_traits_weight_size(\"Helvetica neue\", NSBoldFontMask, 0, artboardParams.titleFontSize)\n  text.setFont(boldItalic)\n  text.lineHeight = 48\n  text.setName(`${preset.artboardSize}px`)\n  const textFrame = text.frame();\n  textFrame.setX(xOrigin)\n  textFrame.setY(-(32 + text.lineHeight()))\n  return text\n}\n\n/**\n * @name setArtboardsPosition\n * @param params\n * @param preset\n */\nfunction setArtboardsSize(params, preset) {\n  params.iconPadding = preset.iconPadding\n  artboardParams.height = artboardParams.width = preset.artboardSize;\n}\n\n/**\n * @name processSVG\n * @param context\n * @param rootObject\n * @param params\n * @param svgData\n * @return {Promise<*>}\n */\nfunction processSVG(context, rootObject, params, svgData) {\n  importerProvider.addSVG(context, rootObject, params, svgData, true);\n  if (params.withMask) maskProvider.addColor(context, rootObject, params);\n  return context.command.setValue_forKey_onLayer(params.iconPadding, 'padding', rootObject);\n}\n\n/**\n * @name getPaddingAndSize\n * @description get padding and size by artboard\n * @param context\n * @param artboard {Object} : MSArtboardGroup\n * @returns {{iconPadding: Number, artboardSize: Number}}\n */\nfunction getPaddingAndSize(context, artboard) {\n  let iconPadding = context.command.valueForKey_onLayer('padding', artboard);\n\n  if (!iconPadding) {\n    const icon = artboard.layers()[0].rect();\n    iconPadding = Math.min(icon.origin.x, icon.origin.y);\n  }\n\n  return {\n    iconPadding: parseInt(iconPadding),\n    artboardSize: parseInt(artboard.rect().size.width)\n  };\n}\n\n/**\n * @name resizeRootObject\n * @param rootObject\n * @param size\n */\nfunction resizeRootObject(rootObject, size) {\n  const rootObjectFrame = rootObject.frame()\n  rootObjectFrame.setWidth(size);\n  rootObjectFrame.setHeight(size);\n}\n","import logger from '../utils/logger'\n\nexport default {\n  selectIconsFiles\n}\n\nconst AVAILABLE_EXT = [\"svg\", \"pdf\", \"png\", \"jpg\", \"jpeg\"]\n\n/**\n * @name selectIconsFiles\n * @description display modal selection file and return them\n * @returns {Array}\n */\nfunction selectIconsFiles() {\n\n  const panel = NSOpenPanel.openPanel();\n  panel.setAllowsMultipleSelection(true);\n  panel.setCanChooseDirectories(true);\n  panel.setAllowedFileTypes(AVAILABLE_EXT);\n  panel.setCanChooseFiles(true);\n  panel.setPrompt(\"Select\");\n\n  if (panel.runModal() !== NSFileHandlingPanelOKButton) return []\n\n  const result = []\n\n  getFilesByUrls(panel.URLs(), result)\n\n  return result\n}\n\n/**\n * @name getFilesByUrls\n * @description get file from list of folder and path\n * @param urls {Array}\n * @param result {Array}\n * @returns {Array}\n */\nfunction getFilesByUrls(urls, result) {\n\n  for(let i = 0; i < urls.length; i++){\n    if(!!(urls[i].hasDirectoryPath())){\n      getFilesByUrls(NSFileManager.defaultManager().contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error(urls[i], null, null, null), result)\n    }else{\n      const ext = String(urls[i].pathExtension()).toLowerCase()\n      if (AVAILABLE_EXT.indexOf(ext) !== -1){\n        result.push(urls[i])\n      }\n    }\n  }\n}","import logger from \"../utils/logger\";\nimport utils from \"../utils/utils\"\nimport {setEnabledColorMenu} from \"../modals/modals\"\n\nexport default {\n  getLibById,\n  initLibsSelectList,\n  getColorFromSymbol,\n  getSymbolFromDocument,\n  loadLibrary\n}\n\n/**\n * @name getLibById\n * @description return library by id\n * @param libraryId\n * @returns {Object} : MSAssetLibrary\n */\nfunction getLibById(libraryId) {\n\n  let library, availableLibraries = AppController.sharedInstance().librariesController().availableLibraries()\n\n  for(let i = 0; i < availableLibraries.length; i++){\n    if(String(libraryId) === String(availableLibraries[i].libraryID())){\n      library = availableLibraries[i]\n      break;\n    }\n  }\n\n  return library\n}\n\n/**\n * @name loadColorFromSelectedLib\n * @description get colors form library selected\n * @param library\n * @param colorMenu\n * @returns {Array}\n */\nfunction loadColorFromSelectedLib(library, colorMenu) {\n\n  colorMenu.removeAllItems()\n  library = library.representedObject()\n\n  return getColorSymbolsFromDocument(library.document())\n}\n\nfunction loadLibrary(library){\n  return library.loadSynchronously()\n}\n\n/**\n * @name initLibsSelectList\n * @description get list of library in NSMenu\n * @param context\n * @param libraries  {Array}\n * @param colorMenu {Object} : NSPopUpButton\n * @returns {Object} : NSMenu\n */\nfunction initLibsSelectList(context, libraries, colorMenu, global) {\n\n  function addListener(item) {\n    item.setCOSJSTargetFunction((libraryItem) => {\n      updateColorMenu(context, libraryItem, colorMenu, global)\n    })\n  }\n\n  const colorLibsMenu = NSMenu.alloc().init()\n  const currentDocument = NSMenuItem.alloc().init()\n  currentDocument.title = 'Current file'\n  addListener(currentDocument)\n  colorLibsMenu.addItem(currentDocument)\n  libraries.forEach((library) => {\n    let item = NSMenuItem.alloc().init()\n    item.title = library.name()\n    item.representedObject = library\n    colorLibsMenu.addItem(item)\n    addListener(item)\n  })\n\n  updateColorMenu(context, currentDocument, colorMenu, global)\n\n  return colorLibsMenu\n}\n\nfunction updateColorMenu(context, libraryItem, colorMenu, global){\n  let colors = []\n  if(!libraryItem.representedObject()){\n    colors = getColorSymbolsFromDocument(context.document.documentData())\n  }else{\n    colors = loadColorFromSelectedLib(libraryItem, colorMenu)\n  }\n  if(colors.length > 0){\n    initColorSelectList(colorMenu, colors);\n    setEnabledColorMenu(true, global)\n  }else {\n    setEnabledColorMenu(false, global)\n  }\n}\n\n/**\n * @name initColorSelectList\n * @description get list of colors in NSMenu\n * @param popColorMenu {Object} : NSPopUpMenu\n * @param colors\n * @returns {Object} : NSMenu\n */\nfunction initColorSelectList(popColorMenu, colors) {\n\n  const menu = NSMenu.alloc().init()\n\n  menu.cancelTracking()\n\n  colors.forEach(function(color){\n    let item = NSMenuItem.alloc().init()\n    item.title = (color.symbol) ? color.symbol.name() : \"\"\n    let colorRGBA = (color.color) ? NSColor.colorWithRed_green_blue_alpha(color.color.red(), color.color.green(), color.color.blue(), color.color.alpha()) : NSColor.colorWithRed_green_blue_alpha(color.red(), color.green(), color.blue(), color.alpha())\n    item.representedObject = (color.symbol)  ? color.symbol : colorRGBA\n    item.image = utils.getImageByColor(colorRGBA)\n    menu.addItem(item)\n  })\n\n  popColorMenu.menu = menu\n  return popColorMenu\n}\n\n/**\n * @name getColorSymbolsFromDocument\n * @param document\n * @return {Array}\n */\nfunction getColorSymbolsFromDocument(document){\n  const result = []\n\n  document.localSymbols().forEach(function(symbol){\n    const color = getColorFromSymbol(symbol)\n    if(color)result.push(color)\n  })\n\n\n  return result\n}\n\n/**\n * @name getSymbolFromDocument\n * @param document\n * @param symbolId\n * @return {*}\n */\nfunction getSymbolFromDocument(document, symbolId){\n\n\n  let symbol, localSymbols = document.localSymbols();\n\n  for(let i = 0; i < localSymbols.length; i++){\n    if(String(localSymbols[i].symbolID())=== String(symbolId)){\n      symbol = localSymbols[i]\n      break\n    }\n  }\n\n  return symbol\n}\n\n/**\n * @name getColorFromSymbol\n * @param symbol\n * @return {*}\n */\nfunction getColorFromSymbol(symbol){\n  const layers = symbol.layers()\n  let result\n\n  if(layers.length === 0 && symbol.backgroundColor()){\n    result = {\n      color: symbol.backgroundColor(),\n      symbol: symbol\n    }\n  }\n  else if(layers.length === 1 && layers[0].children().length === 2 && layers[0].style().hasEnabledFill()){\n\n\n    result = {\n      color: layers[0].style().fills()[0].color(),\n      symbol: symbol\n    }\n  }\n  return result\n}\n","import utils from '../utils/utils'\nimport svgProvider from './svg'\nimport librariesProvider from './libraries'\nimport logger from '../utils/logger'\nimport switchVersion from '../utils/switchV3ToV4';\nimport settingsProvider from \"./settings\";\n\nexport default {\n  initAddMaskOnSelectedArtboards,\n  addColor,\n  removeMask,\n  getMaskPropertiesFromArtboard,\n  registerMask\n}\n\n/**\n * @name initAddMaskOnSelectedArtboards\n * @description main function to add mask on selected artboards\n * @param context {Object}\n * @param params {Object}\n * @param rootObjects {Array} : MSArtboardGroup\n */\nfunction initAddMaskOnSelectedArtboards(context, params, rootObjects) {\n  const settingsParams = settingsProvider.getSettings(context, 'default');\n  rootObjects.forEach(async (rootObject) => {\n    try {\n      if (utils.svgHasStroke(rootObject.object) && settingsParams.convertStroke.data === '1') svgProvider.convertStrokeToFill(rootObject.object)\n      if (utils.hasMask(rootObject.object) && !utils.svgHasStroke(rootObject.object)) removeMask(context, rootObject.object);\n      await addColor(context, rootObject.object, params)\n    } catch (e) {\n      console.log('>>>>>>>>>>>', e);\n    }\n  })\n  utils.clearSelection(context)\n}\n\n/**\n * @name addColor\n * @description index function for all step to add mask and convert artboard to symbol at end\n * @param context {Object}\n * @param rootObject {Object} : MSArtboardGroup && MSSymbolMaster\n * @param params {Object}\n */\nfunction addColor(context, rootObject, params) {\n\n  if (String(rootObject.firstLayer().class()) === 'MSBitMapLayer') return\n\n  if (utils.svgHasStroke(rootObject)) {\n    applyColor(rootObject, params);\n  } else {\n\n    if (utils.hasMask(rootObject)) removeMask(context, rootObject)\n    svgProvider.cleanSvg(rootObject)\n\n    applyMask(context, rootObject, params)\n  }\n\n  return registerMask(context, rootObject, params)\n}\n\n/**\n * @name applyColor\n * @description apply border color on svg with stroke\n * @param rootObject\n * @param params\n */\nfunction applyColor(rootObject, params) {\n  const color = (params.colorPicker) ? params.colorPicker : librariesProvider.getColorFromSymbol(params.color).color\n  rootObject.children().forEach((layer) => {\n    if (layer.styledLayer().style().hasEnabledBorder()) {\n      const style = layer.styledLayer().style()\n      style.enabledBorders().forEach((border) => {\n        border.color = color\n      })\n    }\n  })\n}\n\n/**\n * @name removeMask\n * @description remove all mask from artboard\n * @param context\n * @param rootObject {Object} : MSArtboardGroup\n */\nfunction removeMask(context, rootObject) {\n\n  context.command.setValue_forKey_onLayer(null, \"colorLib\", rootObject)\n  context.command.setValue_forKey_onLayer(null, \"color\", rootObject)\n  context.command.setValue_forKey_onLayer(null, \"colorPicker\", rootObject)\n\n  if (utils.svgHasStroke(rootObject)) {\n    return applyColor(rootObject, { colorPicker: MSImmutableColor.blackColor() })\n  }\n\n  const iconLayer = rootObject.firstLayer();\n\n  if (rootObject.layers().count() > 1 && iconLayer.hasClippingMask()) {\n    iconLayer.hasClippingMask = false;\n    iconLayer.clippingMaskMode = 1;\n    const style = rootObject.firstLayer().style();\n    const fills = style.fills();\n    const fillColor = (fills.count() > 0) ? style.fills()[0].color() : MSColor.blackColor();\n    style.removeAllStyleFills();\n    style.addStylePartOfType(0).color = fillColor;\n    rootObject.lastLayer().removeFromParent()\n  }\n}\n\n/**\n * @name registerMask\n * @description register properties of mask in artboard metadata\n * @param context\n * @param rootObject\n * @param params\n */\nfunction registerMask(context, rootObject, params) {\n  if (params.color) {\n    const libraryId = (params.colorLib) ? params.colorLib.libraryID() : null\n    const colorId = (typeof params.color === 'string') ? params.color : params.color.symbolID()\n\n    context.command.setValue_forKey_onLayer(libraryId, \"colorLib\", rootObject)\n    context.command.setValue_forKey_onLayer(colorId, \"color\", rootObject)\n    context.command.setValue_forKey_onLayer(null, \"colorPicker\", rootObject)\n  } else if (params.colorPicker) {\n    context.command.setValue_forKey_onLayer(utils.convertMSColorToString(params.colorPicker), \"colorPicker\", rootObject)\n    context.command.setValue_forKey_onLayer(null, \"colorLib\", rootObject)\n    context.command.setValue_forKey_onLayer(null, \"color\", rootObject)\n  }\n}\n\nfunction getMaskPropertiesFromArtboard(context, rootObject) {\n\n\n  let params = getColorParams(context, rootObject);\n\n  const maskLayer = rootObject.firstLayer()\n  if (!params.colorLibraryId && !params.colorSymbolId && !params.colorString && maskLayer && maskLayer.hasClippingMask()) {\n    switchVersion.switchToV4(context, rootObject)\n    params = getColorParams(context, rootObject)\n  }\n\n  if (!params.colorLibraryId && params.colorSymbolId) {\n    params.colorSymbol = librariesProvider.getSymbolFromDocument(context.document.documentData(), params.colorSymbolId)\n  } else if (params.colorLibraryId) {\n    params.colorLibrary = librariesProvider.getLibById(params.colorLibraryId)\n    librariesProvider.loadLibrary(params.colorLibrary)\n    params.colorSymbol = librariesProvider.getSymbolFromDocument(params.colorLibrary.document(), params.colorSymbolId)\n  }\n\n  params.colorPicker = (params.colorString) ? utils.convertStringToMSColor(params.colorString) : null\n\n  const result = {\n    colorLib: (params.colorLibraryId) ? params.colorLibrary : null,\n    color: (params.colorSymbolId) ? params.colorSymbol : null,\n    colorPicker: params.colorPicker\n  }\n\n  return (!result.colorLib && !result.color && !result.colorPicker) ? {} : result\n}\n\n/**\n * @name getColorParams\n * @param context\n * @param rootObject\n * @returns {{colorLibraryId: *, colorSymbolId: *, colorString: *}}\n */\nfunction getColorParams(context, rootObject) {\n  return {\n    colorLibraryId: context.command.valueForKey_onLayer(\"colorLib\", rootObject),\n    colorSymbolId: context.command.valueForKey_onLayer(\"color\", rootObject),\n    colorString: context.command.valueForKey_onLayer(\"colorPicker\", rootObject)\n  }\n}\n\n\n/**\n * @name createMaskFromNean\n * @param context\n * @param rootObject\n * @param color\n * @return {Object} : MSShapeGroup\n */\nfunction createMaskFromNean(context, rootObject, color) {\n  const currentRootObjectSize = rootObject.rect()\n\n  const mask = MSShapeGroup.shapeWithRect({\n    origin: { x: 0, y: 0 },\n    size: { width: currentRootObjectSize.size.width, height: currentRootObjectSize.size.height }\n  })\n\n  const fill = mask.style().addStylePartOfType(0);\n  fill.color = color;\n\n  return mask\n}\n\n/**\n * @name createMask\n * @description add mask from symbol master colors library to one artboard\n * @param context {Object}\n * @param colorSymbolMaster {Object}\n * @param colorLibrary {Object} : MSAssetLibrary\n * @return symbol {Object} : MSSymbolInstance\n */\nfunction getMaskSymbolFromLib(context, colorSymbolMaster, colorLibrary) {\n  utils.clearSelection(context)\n  const librairiesController = AppController.sharedInstance().librariesController()\n  // const symbolMaster = (colorLibrary) ? librairiesController.importForeignSymbol_fromLibrary_intoDocument(colorSymbolMaster, colorLibrary, context.document.documentData()).symbolMaster() : colorSymbolMaster\n\n  let importedSymbol;\n  if (MSApplicationMetadata.metadata().appVersion >= 50) {\n    const shareableObjectReference = MSShareableObjectReference.referenceForShareableObject_inLibrary(colorSymbolMaster,colorLibrary);\n    importedSymbol = librairiesController.importShareableObjectReference_intoDocument(shareableObjectReference,context.document.documentData());\n  } else {\n    importedSymbol = librairiesController.importForeignSymbol_fromLibrary_intoDocument_(colorSymbolMaster,colorLibrary,context.document.documentData());\n  }\n  const symbolMaster = (colorLibrary) ? importedSymbol.symbolMaster() : colorSymbolMaster;\n  return symbolMaster.newSymbolInstance();\n}\n\n/**\n * @name applyMask\n * @param context\n * @param rootObject {Object} : MSArtboardGroup && MSSymbolMaster\n * @param params\n */\nfunction applyMask(context, rootObject, params) {\n\n  let mask;\n\n  if (params.color) {\n    mask = getMaskSymbolFromLib(context, params.color, params.colorLib)\n  } else if (params.colorPicker) {\n    mask = createMaskFromNean(context, rootObject, params.colorPicker)\n  }\n\n  const currentArtboardSize = rootObject.rect()\n  mask.setHeightRespectingProportions(currentArtboardSize.size.height)\n  mask.setWidthRespectingProportions(currentArtboardSize.size.width)\n  mask.setName('🎨 color')\n  rootObject.firstLayer().style().disableAllFills()\n  rootObject.addLayers([mask])\n  const iconLayer = rootObject.firstLayer()\n  iconLayer.hasClippingMask = true\n  iconLayer.clippingMaskMode = 0\n}\n","export default {\n  registerSettings,\n  getSettings,\n  resetSettings,\n  hasValue\n}\n\nconst LIST_SETTINGS_FIELDS = [\n  // {name: 'artboardSize', defaultValue: 24},\n  // {name: 'iconPadding', defaultValue: 4},\n  { name: 'presets', default: '', placeholder: '24-4, 48-8...' },\n  // {name: 'modalReplaceIcon', defaultValue: false},\n  // {name: 'viewBoxParams', defaultValue: false},\n\n  { name: 'convertStroke', default: '0', placeholder:'0' },\n  // {name: 'otherSize', defaultValue: true},\n  // {name: 'otherSizeParams', defaultValue: 48},\n  { name: 'iconsByLine', default: '10', placeholder: '10' },\n  { name: 'marginBetweenRootObject', default: '100%', placeholder: '100%' },\n  { name: 'prefixRootObject', default: '', placeholder: 'icons/$size/...' },\n  // {name: 'preset', defaultValue: []}\n]\n\nfunction registerSettings(context, params) {\n\n\n  LIST_SETTINGS_FIELDS.forEach((field) => {\n    NSUserDefaults.standardUserDefaults().setObject_forKey(params[field.name], field.name)\n    context.command.setValue_forKey_onDocument(params[field.name], field.name, context.document.documentData());\n  })\n}\n\n\nfunction resetSettings(context) {\n  LIST_SETTINGS_FIELDS.forEach((field) => {\n    context.command.setValue_forKey_onDocument(null, field.name, context.document.documentData());\n  })\n}\n\nfunction getSettings(context, fallbackValue) {\n\n  const result = {}\n\n  LIST_SETTINGS_FIELDS.forEach(field => {\n\n\n    result[field.name] = {\n      // 'value': context.command.valueForKey_onDocument(field.name, context.document.documentData()) || NSUserDefaults.standardUserDefaults().objectForKey(field.name),\n      'value': NSUserDefaults.standardUserDefaults().objectForKey(field.name),\n      'default': field.default,\n      'placeholder': field.placeholder\n    };\n\n    if (hasValue(result[field.name])) {\n      result[field.name].data = String(result[field.name].value)\n    } else {\n      result[field.name].data = String(result[field.name][fallbackValue])\n    }\n  })\n\n\n  return result\n}\n\nfunction hasValue(setting){\n  return !(!setting.value || String(setting.value) === 'null' || String(setting.value).length === 0)\n}\n","import maskProvider from './mask';\nimport artboardProvider from './artboard';\nimport settingsProvider from './settings';\nimport utils from '../utils/utils';\n\nexport default {\n  initUpdateIconsSelectedArtboards,\n  addSVG,\n  addPDF,\n  addBITMAP,\n  cleanSvg,\n  convertStrokeToFill,\n  addSVGNew\n};\n\n/**\n * @name initUpdateIconsSelectedArtboards\n * @description main function to update multiple icons on selected artboard\n * @param context\n * @param params {Object}\n * @param rootObjects {Array} : MSArtboardGroup && MSSymbolMaster\n */\nfunction initUpdateIconsSelectedArtboards(context, rootObjects, params) {\n  rootObjects.forEach((rootObject, index) => {\n\n    const iconParams = {\n      ...maskProvider.getMaskPropertiesFromArtboard(context, rootObject.object),\n      ...artboardProvider.getPaddingAndSize(context, rootObject.object),\n      ...params\n    };\n    const replaceBy = (params.listIcon.length === 1) ? params.listIcon[0] : params.listIcon[index];\n\n    const svgData = String(NSString.alloc().initWithContentsOfURL(replaceBy));\n    iconParams.withMask = !!(iconParams.colorLib || iconParams.colorPicker || iconParams.color);\n\n    rootObject.object.removeAllLayers();\n\n    addSVG(context, rootObject.object, iconParams, String(svgData), true);\n    rootObject.object.setName(utils.getIconNameByNSUrl(replaceBy));\n    if (iconParams.withMask) maskProvider.addColor(context, rootObject.object, iconParams);\n  });\n\n  utils.clearSelection(context);\n\n  return rootObjects.length\n}\n\n/**\n * @name addSVG\n * @description  add svg on specific artboard\n * @param context {Object}\n * @param rootObject {Object} : MSArtboardGroup\n * @param params {Object}\n * @param svgData {String}\n * @param withResize {Boolean}\n */\nfunction addSVG(context, rootObject, params, svgData, withResize) {\n  let viewBox;\n\n  const settingsParams = settingsProvider.getSettings(context, 'default');\n\n  svgData = NSString.stringWithString(svgData);\n\n  viewBox = getViewBox(svgData);\n\n  if (withResize) svgData = addRectToResize(svgData, viewBox);\n  const svgImporter = MSSVGImporter.svgImporter();\n  svgImporter.prepareToImportFromData(svgData.dataUsingEncoding(NSUTF8StringEncoding));\n  const svgLayer = svgImporter.importAsLayer();\n\n  removeTxt(svgLayer);\n\n  rootObject.addLayer(svgLayer);\n\n  // removeNoFillChildren(rootObject)\n\n  if (utils.svgHasStroke(rootObject) && settingsParams.convertStroke.data === '1') convertStrokeToFill(rootObject)\n\n  if (withResize) resizeIcon(rootObject, params.iconPadding);\n  if (withResize) removeDeleteMeRect(rootObject);\n\n  center(params.artboardSize, rootObject.firstLayer());\n}\n\nfunction addSVGNew(context, rootObject, params, svgData) {\n  svgData = NSString.stringWithString(svgData);\n  const svgImporter = MSSVGImporter.svgImporter();\n  svgImporter.prepareToImportFromData(svgData.dataUsingEncoding(NSUTF8StringEncoding));\n  const svgLayer = svgImporter.importAsLayer();\n  rootObject.addLayers([svgLayer]);\n  const svgLayerFrame = svgLayer.frame();\n  const width = svgLayerFrame.width();\n  const height = svgLayerFrame.height();\n\n  svgLayerFrame.constrainProportions = true;\n\n  if (width >= height) {\n    svgLayer.setWidthRespectingProportions((params.artboardSize - 2 * params.iconPadding) + 0.01)\n  } else {\n    svgLayer.setHeightRespectingProportions((params.artboardSize - 2 * params.iconPadding) + 0.01)\n  }\n  svgLayerFrame.setX((params.artboardSize - svgLayerFrame.width()) / 2);\n  svgLayerFrame.setY((params.artboardSize - svgLayerFrame.height()) / 2);\n}\n\nfunction addPDF(context, rootObject, params, icon) {\n\n  const rootObjectPosition = rootObject.origin();\n\n  const pdfImporter = MSPDFImporter.pdfImporter();\n  pdfImporter.prepareToImportFromURL(icon);\n  const pdfLayer = pdfImporter.importAsLayer();\n  rootObject.addLayers(pdfLayer.layers());\n  rootObject.resizeToFitChildren();\n  rootObject.resizesContent = true;\n  const rootObjectFrame = rootObject.frame();\n  rootObjectFrame.setWidth(params.artboardSize - 2 * params.iconPadding);\n  rootObjectFrame.setHeight(params.artboardSize - 2 * params.iconPadding);\n  rootObject.resizesContent = false;\n  rootObjectFrame.setWidth(params.artboardSize);\n  rootObjectFrame.setHeight(params.artboardSize);\n  rootObject.layers().forEach((layer) => {\n    const layerFrame = layer.frame();\n    layerFrame.setX(params.iconPadding)\n    layerFrame.setY(params.iconPadding)\n  })\n  rootObjectFrame.setX(rootObjectPosition.x)\n  rootObjectFrame.setY(rootObjectPosition.y)\n}\n\nfunction addBITMAP(context, rootObject, params, icon) {\n\n  if (String(icon.class()) === 'MSBitmapLayer') {\n    MSLayerGroup.moveLayers_intoGroup([icon], rootObject)\n  } else {\n    rootObject.addLayer(MSBitmapLayer.bitmapLayerWithImageFromPath(icon));\n  }\n\n  resizeIcon(rootObject, params.iconPadding);\n  center(params.artboardSize, rootObject.firstLayer());\n  rootObject.firstLayer().setName(rootObject.name());\n}\n\n/**\n * @name addRectToResize\n * @description add rect to keep proportion on resize\n * @param svgString\n * @param viewBox\n * @returns {String}\n */\nfunction addRectToResize(svgString, viewBox) {\n  const addrect = `<rect width=\"${viewBox.width}\" height=\"${viewBox.height}\" id=\"delete-me\"/></svg>`;\n  return NSString.stringWithString(svgString.replace('</svg>', addrect));\n}\n\n/**\n * @name cleanSvg\n * @description main function which used sketch properties to convert icon in one path\n * @param rootObject\n */\nfunction cleanSvg(rootObject) {\n  unGroup(rootObject);\n  rootObject.firstLayer().setName(rootObject.name());\n  // removeNoFillLayer(rootObject);\n  mergeLayer(rootObject);\n  rootObject.firstLayer().resizeToFitChildrenWithOption(1);\n}\n\n/**\n * @name center\n * @description center svg in artboard\n * @param artboardSize\n * @param svgLayer\n */\nfunction center(artboardSize, svgLayer) {\n  const shapeGroupWidth = svgLayer.frame().width();\n  const shapeGroupHeight = svgLayer.frame().height();\n  svgLayer.frame().setX((artboardSize - shapeGroupWidth) / 2);\n  svgLayer.frame().setY((artboardSize - shapeGroupHeight) / 2);\n}\n\n/**\n * @name resizeIcon\n * @description resize layer by artboard\n * @param rootObject {Object}\n * @param iconPadding {Number}\n */\nfunction resizeIcon(rootObject, iconPadding) {\n\n  const svgLayer = rootObject.firstLayer()\n  const svgLayerFrame = svgLayer.frame();\n\n  const currentArtboardRect = rootObject.rect();\n  const currentArtboardSize = {\n    width: parseInt(currentArtboardRect.size.width),\n    height: parseInt(currentArtboardRect.size.height)\n  };\n\n  const width = svgLayerFrame.width();\n  const height = svgLayerFrame.height();\n\n  svgLayerFrame.constrainProportions = true;\n\n  if (width >= height) {\n    svgLayerFrame.setWidth(currentArtboardSize.width - 2 * iconPadding);\n  } else {\n    svgLayerFrame.setHeight(currentArtboardSize.height - 2 * iconPadding);\n  }\n}\n\n/**\n * @name removeTxt\n * @description remove text form svg\n * @param svgLayer {Object}\n */\nfunction removeTxt(svgLayer) {\n  const scope = svgLayer.children(),\n    predicateTextLayers = NSPredicate.predicateWithFormat('(className == %@)', 'MSTextLayer');\n\n  const layers = scope.filteredArrayUsingPredicate(predicateTextLayers);\n\n  const loop = layers.objectEnumerator();\n  let layer;\n  while ((layer = loop.nextObject())) {\n    layer.removeFromParent();\n  }\n}\n\n/**\n * @name removeUnecessaryGroup\n * @description ungroup all group\n * @param svgLayer\n */\nfunction unGroup(svgLayer) {\n  const scope = svgLayer.children(),\n    predicateTextLayers = NSPredicate.predicateWithFormat('(className == %@)', 'MSLayerGroup');\n  const layers = scope.filteredArrayUsingPredicate(predicateTextLayers);\n\n  const loop = layers.objectEnumerator();\n  let layer;\n  while ((layer = loop.nextObject())) {\n    layer.ungroup();\n  }\n}\n\n/**\n * @name removeDeleteMeRect\n * @description remove rect used to keep proportion on resize\n * @param rootObject\n * @returns {*}\n */\nfunction removeDeleteMeRect(rootObject) {\n  const scope = rootObject.children(),\n    predicateTextLayers = NSPredicate.predicateWithFormat('(name == %@)', 'delete-me');\n  const layers = scope.filteredArrayUsingPredicate(predicateTextLayers);\n\n  if (!layers.length)\n    return rootObject\n      .firstLayer()\n      .lastLayer()\n      .removeFromParent();\n\n  const loop = layers.objectEnumerator();\n  let layer;\n  while ((layer = loop.nextObject())) {\n    layer.removeFromParent();\n  }\n}\n\n// /**\n//  * @description remove transparent layers\n//  * @name removeNoFillLayer\n//  * @param rootObject\n//  */\n// function removeNoFillLayer(rootObject) {\n//   const indexes = NSMutableIndexSet.indexSet();\n//   rootObject.layers().forEach((layer, index) => {\n//     if (!layer.style().hasEnabledFill() && !layer.style().hasEnabledBorder()) indexes.addIndex(index);\n//   });\n//   rootObject.removeLayersAtIndexes(indexes);\n// }\n\n// /**\n//  * @description remove transparent layers\n//  * @name removeNoFillLayer\n//  * @param rootObject\n//  */\n// function removeNoFillChildren(rootObject) {\n//   const toDelete = []\n//   rootObject.firstLayer().children().forEach(layer => {\n//     const style = layer.styledLayer().style()\n//     if (style.hasEnabledFill() && style.contextSettings().opacity() === 0) {\n//       toDelete.push(layer);\n//     }\n//   });\n//\n//   toDelete.forEach(layer => {\n//     layer.removeFromParent()\n//   })\n// }\n\n/**\n * @name mergeLayer\n * @description merge all path in one path\n * @param rootObject\n */\nfunction mergeLayer(rootObject) {\n  const layers = rootObject.layers();\n\n  if (layers.length > 1) {\n    for (let i = 0; i <= layers.length - 1; i++) {\n      layers[1].moveToLayer_beforeLayer(layers[0], layers[1]);\n    }\n  }\n\n  if (rootObject.layers().length > 1) return mergeLayer(rootObject);\n\n  rootObject.children().forEach(children => {\n    if (children.booleanOperationCanBeReset()) children.setBooleanOperation(-1);\n  });\n\n  // layers[0].resizeToFitChildrenWithOption(0);\n  layers[0].setName(rootObject.name());\n}\n\n/**\n * @name getViewBox\n * @description return values of viewbox\n * @param svgData\n * @returns {{width: number, height: number}}\n */\nfunction getViewBox(svgData) {\n\n  let viewBox = svgData.match(/viewBox=\"(.*?)\"/gm);\n\n  let size;\n  let result;\n  if (Array.isArray(viewBox)) {\n    size = viewBox[0].match(/[+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g);\n    result = { width: parseFloat(size[2]), height: parseFloat(size[3]) };\n  }\n\n  return result;\n}\n\nfunction convertStrokeToFill(rootObject) {\n\n  rootObject.children().forEach(layer => {\n    if (layer.canConvertToOutlines() && String(layer.name()) !== 'delete-me') {\n      layer.layersByConvertingToOutlines()\n    }\n  })\n\n  rootObject.children().forEach(layer => {\n    layer.styledLayer().style().disableAllBorders()\n  })\n}\n\n// function setThicknessProportionnally(svgLayer, diagContainer, viewBox) {\n//\n//   const diagViewbox = Math.sqrt(Math.pow(viewBox.width, 2) + Math.pow(viewBox.height, 2))\n//   const diagArtboard = Math.sqrt(Math.pow(diagContainer, 2) * 2)\n//   const ratio = diagArtboard / diagViewbox\n//\n//   svgLayer.children().forEach((layer) => {\n//     if (layer.styledLayer().style().hasEnabledBorder() && String(layer.class()) === 'MSShapePathLayer') {\n//       const style = layer.styledLayer().style()\n//       const thickness = style.firstEnabledBorder().thickness()\n//       style.firstEnabledBorder().thickness = Math.round(thickness * ratio)\n//     }\n//   })\n// }\n","//\n//  MochaJSDelegate.js\n//  MochaJSDelegate\n//\n//  Created by Matt Curtis\n//  Copyright (c) 2015. All rights reserved.\n//\nexport default MochaJSDelegate;\n\nfunction MochaJSDelegate(selectorHandlerDict, superclass) {\n  var uniqueClassName = 'MochaJSDelegate_DynamicClass_' + NSUUID.UUID().UUIDString()\n\n  var delegateClassDesc = MOClassDescription.allocateDescriptionForClassWithName_superclass_(uniqueClassName, superclass || NSObject)\n\n  delegateClassDesc.registerClass()\n\n  // Storage Handlers\n  var handlers = {}\n\n  // Define interface\n  this.setHandlerForSelector = function (selectorString, func) {\n    var handlerHasBeenSet = (selectorString in handlers)\n    var selector = NSSelectorFromString(selectorString)\n\n    handlers[selectorString] = func\n\n    /*\n      For some reason, Mocha acts weird about arguments: https://github.com/logancollins/Mocha/issues/28\n      We have to basically create a dynamic handler with a likewise dynamic number of predefined arguments.\n    */\n    if (!handlerHasBeenSet) {\n      var args = []\n      var regex = /:/g\n      while (regex.exec(selectorString)) {\n        args.push('arg' + args.length)\n      }\n\n      var dynamicFunction = eval('(function (' + args.join(', ') + ') { return handlers[selectorString].apply(this, arguments); })')\n\n      delegateClassDesc.addInstanceMethodWithSelector_function_(selector, dynamicFunction)\n    }\n  }\n\n  this.removeHandlerForSelector = function (selectorString) {\n    delete handlers[selectorString]\n  }\n\n  this.getHandlerForSelector = function (selectorString) {\n    return handlers[selectorString]\n  }\n\n  this.getAllHandlers = function () {\n    return handlers\n  }\n\n  this.getClass = function () {\n    return NSClassFromString(uniqueClassName)\n  }\n\n  this.getClassInstance = function () {\n    return NSClassFromString(uniqueClassName).new()\n  }\n\n  // Convenience\n  if (typeof selectorHandlerDict === 'object') {\n    for (var selectorString in selectorHandlerDict) {\n      this.setHandlerForSelector(selectorString, selectorHandlerDict[selectorString])\n    }\n  }\n}\n","const kUUIDKey = 'google.analytics.uuid'\nlet uuid = NSUserDefaults.standardUserDefaults().objectForKey(kUUIDKey)\nif (!uuid) {\n  uuid = NSUUID.UUID().UUIDString()\n  NSUserDefaults.standardUserDefaults().setObject_forKey(uuid, kUUIDKey)\n}\n\nfunction jsonToQueryString(json) {\n  return '?' + Object.keys(json).map(function (key) {\n    return encodeURIComponent(key) + '=' + encodeURIComponent(json[key]);\n  }).join('&')\n}\n\nexport default {\n  action\n}\n\nfunction action(context, category, action, label, value) {\n  const payload = {\n    v: 1,\n    t: 'event',\n    cid: uuid,\n    tid: 'UA-115448236-1',\n    ec: category,\n    ea: action,\n    el: label,\n    ev: value\n  }\n  send(payload)\n}\n\nfunction send(payload) {\n\n  try{\n    const url = NSURL.URLWithString(\n      NSString.stringWithFormat(\"https://www.google-analytics.com/collect%@\", jsonToQueryString(payload))\n    )\n\n    if (url) {\n      const task = NSTask.alloc().init();\n      task.setLaunchPath(\"/usr/bin/curl\");\n      task.setArguments(['-X', 'POST', String(url)]);\n      const outputPipe = NSPipe.pipe();\n      task.setStandardOutput(outputPipe);\n      task.launch();\n    }\n\n  }catch (e){}\n\n\n}\n","export default (function () {\n  function _log(message) {\n    log(message);\n  }\n\n  function debug(message) {\n    log('DEBUG: ' + message);\n  }\n\n  function info(message) {\n    log('INFO: ' + message);\n  }\n\n  function warn(message) {\n    log('WARN: ' + message);\n  }\n\n  function error(message) {\n    log('ERROR: ' + message);\n  }\n\n  return {\n    log: _log,\n    debug: debug,\n    info: info,\n    warn: warn,\n    error: error,\n  };\n})();","import libraries from '../providers/libraries'\nimport utils from '../utils/utils'\nimport logger from '../utils/logger'\n\nexport default {\n  newModal,\n  runModal,\n  getMainButtonParam,\n  createArtboardFields,\n  createCheckBoxes,\n  createMaskFields,\n  appendsFields,\n  getParams,\n  setNextKey,\n  newErrorModal\n}\n\n/**\n * @name newModal\n * @description instantiate modal\n * @param context\n * @param viewSize {Object}\n * @param modalParams\n * @returns {{modal: *, view: *, viewSize: *}}\n */\nfunction newModal(context, viewSize, modalParams) {\n\n  const modal = COSAlertWindow.new();\n\n  const view = NSView.alloc().initWithFrame(NSMakeRect(0, 0, viewSize.width, viewSize.height));\n  modal.addAccessoryView(view);\n  modal.setMessageText(modalParams.messageText);\n  modal.setInformativeText(modalParams.informativeText);\n  modal.addButtonWithTitle('Continue');\n  modal.addButtonWithTitle('Cancel');\n  modal.layout()\n\n  return {modal, view, viewSize}\n}\n\n/**\n * @name runModal\n * @description run modal\n * @param modal\n * @returns {Object} : NSView\n */\nfunction runModal({modal}) {\n  return modal.runModal()\n}\n\n/**\n * @name getMainButtonParam\n * @description get value of main button of view\n * @param button\n * @returns {Object}\n */\nfunction getMainButtonParam(button) {\n  return {button}\n}\n\n/**\n * @name createArtboardFields\n * @description create fields for new artboards params\n * @returns {[Object,Object]}\n */\nfunction createArtboardFields() {\n\n  const textBox = NSTextField.alloc().initWithFrame(NSMakeRect(0, 10, 130, 20));\n  textBox.setStringValue('24');\n\n  const textBoxPadding = NSTextField.alloc().initWithFrame(NSMakeRect(140, 10, 130, 20));\n  textBoxPadding.setStringValue('3');\n\n  return [{\n    item: textBox,\n    getter: function () {\n      return parseInt(textBox.stringValue())\n    },\n    name: 'artboardSize',\n    label: utils.createLabel('Size', 0, 30, 130, 20)\n  }, {\n    item: textBoxPadding,\n    getter: function () {\n      return parseInt(textBoxPadding.stringValue())\n    },\n    name: 'iconPadding',\n    label: utils.createLabel('Padding', 140, 30, 130, 20)\n  }]\n}\n\n/**\n * @name createCheckBoxMask\n * @description create field for checkbox for add mask\n * @returns {[Object]}\n */\nfunction createCheckBoxes() {\n\n  const symbolCheckBox = NSButton.alloc().initWithFrame(NSMakeRect(0, 30, 200, 14));\n  symbolCheckBox.setButtonType(NSSwitchButton);\n  symbolCheckBox.setState(true);\n  symbolCheckBox.setFont(NSFont.systemFontOfSize_(13));\n  symbolCheckBox.setTitle('Convert to symbol')\n\n  const maskCheckBox = NSButton.alloc().initWithFrame(NSMakeRect(0, 5, 200, 14));\n  maskCheckBox.setButtonType(NSSwitchButton);\n  maskCheckBox.setState(false);\n  maskCheckBox.setFont(NSFont.systemFontOfSize_(13));\n  maskCheckBox.setTitle('Add color mask')\n\n  return [{\n    item: symbolCheckBox,\n    name: 'convertSymbol',\n    getter: symbolCheckBox.state\n  }, {\n    item: maskCheckBox,\n    name: 'withMask',\n    getter: maskCheckBox.state\n  }]\n}\n\n/**\n * @name createMaskFields\n * @description create fields for mask params to add mask\n * @param context {Object}\n * @param modal {Object}\n * @param checkboxFields {Object}\n * @returns {[null,null]}\n */\nfunction createMaskFields(context, modal, checkboxFields) {\n\n  const colorLibsMenu = NSPopUpButton.alloc().initWithFrame(NSMakeRect(0, 0, 130, 20));\n  const colorMenu = NSPopUpButton.alloc().initWithFrame(NSMakeRect(140, 0, 130, 20));\n\n  colorLibsMenu.setEnabled(false)\n  colorMenu.setEnabled(false)\n\n  colorLibsMenu.menu = libraries.initLibsSelectList(AppController.sharedInstance().librariesController().availableLibraries(), colorMenu);\n\n  if (checkboxFields) {\n    checkboxFields[1].item.setCOSJSTargetFunction(function (mask) {\n      if (mask.state()) {\n        colorLibsMenu.setEnabled(true)\n        // documentColorMenu.setEnabled(true)\n        if (colorMenu.selectedItem()) colorMenu.setEnabled(true)\n      } else {\n        colorLibsMenu.setEnabled(false)\n        colorMenu.setEnabled(false)\n        // documentColorMenu.setEnabled(false)\n      }\n    });\n  } else {\n    colorLibsMenu.setEnabled(true)\n  }\n\n  return [{\n    item: colorMenu,\n    label: utils.createLabel('Color', 140, 25, 130, 20),\n    name: 'color',\n    getter: function () {\n      let currentItem = this.item.selectedItem()\n      return (currentItem) ? currentItem.representedObject() : null\n    }\n  }, {\n    item: colorLibsMenu,\n    label: utils.createLabel('Colors Library', 0, 25, 130, 20),\n    name: 'colorLib',\n    getter: function () {\n      let currentItem = this.item.selectedItem()\n      return (currentItem) ? currentItem.representedObject() : null\n    }\n  }\n  ]\n}\n\n/**\n * @name appendsFields\n * @description append fields on view to create modal\n * @param view {Object} : NSView\n * @param viewSize {Object} :\n * @param withLabelBottom {Boolean}\n * @param allFields\n */\nfunction appendsFields({view, viewSize}, allFields, withLabelBottom) {\n  allFields.reverse().forEach(function (fields) {\n    const y = (withLabelBottom) ? view.subviews().length * 50 + 25 : view.subviews().length * 50;\n    const viewCell = NSView.alloc().initWithFrame(NSMakeRect(0, y, viewSize.width, 50));\n    fields.forEach(function (field) {\n      if (field.label) viewCell.addSubview(field.label);\n      if (field.item) viewCell.addSubview(field.item);\n    })\n    view.addSubview(viewCell)\n  })\n}\n\n/**\n * @name getParams\n * @description get value of multiple fields\n * @param allFields [Array,Array,...]\n * @returns {Object}\n */\nfunction getParams(allFields) {\n  const result = {}\n  allFields.forEach(function (fields) {\n    fields.forEach(function (field) {\n      result[field.name] = field.getter()\n    })\n  })\n\n  return result\n}\n\n/**\n * @name setNextKey\n * @description set tab path in form\n * @param fields\n */\nfunction setNextKey(fields) {\n  fields.forEach(function (field, index) {\n    if (fields[index + 1] && field.item) field.item.setNextKeyView(fields[index + 1].item)\n  })\n}\n\n/**\n * @name newErrorModal\n * @description display error  modal\n * @param message\n */\nfunction newErrorModal(message, informativeText) {\n  const modal = COSAlertWindow.new();\n  modal.setMessageText(message);\n  modal.setInformativeText(informativeText);\n  modal.runModal()\n}\n","import maskProvider from '../providers/mask'\n\nexport default {\n  switchToV4\n}\n\nfunction switchToV4(context, rootObject) {\n  const mask = rootObject.lastLayer()\n  const params = {color: null, colorLib: null, colorPicker: null}\n  if (String(mask.class()) === 'MSSymbolInstance') {\n    const color = mask.symbolMaster()\n    const foreign = color.foreignSymbol()\n    params.color = color\n    if (foreign) {\n      params.color = String(foreign.originalMaster().symbolID())\n      params.colorLib = foreign\n    }\n  } else {\n    params.colorPicker = mask.style().fills()[0].color()\n  }\n\n  maskProvider.registerMask(context, rootObject, params)\n}","import MochaJSDelegate from './MochaJSDelegate.js'\nimport logger from './logger'\nimport settingsProvider from \"../providers/settings\";\n\nexport default {\n  clearSelection,\n  getIconNameByNSUrl,\n  createLabel,\n  getSelectedArtboardsAndSymbols,\n  createWebview,\n  createDivider,\n  runFramework,\n  getImageByColor,\n  hasMask,\n  layerToSvg,\n  svgHasStroke,\n  convertMSColorToString,\n  convertStringToMSColor,\n  getBorderColor,\n  getRootObject,\n  getSizeBetweenIcon,\n  buildPrefix\n}\n\n\n/**\n * @name clearSelection\n * @description unselect all\n * @param context\n */\nfunction clearSelection(context) {\n  context.api().selectedDocument.selectedLayers.clear()\n}\n\n/**\n * @name getIconNameByNSUrl\n * @description get name of icon by NSUrl\n * @param icon {Object} : NSUrl\n * @returns {String}\n */\nfunction getIconNameByNSUrl(icon) {\n  return icon.lastPathComponent().split('.')[0]\n}\n\n/**\n * @name createLabel\n * @description create label in NSTextField\n * @param name {String}\n * @param x {Number}\n * @param y {Number}\n * @param w {Number}\n * @param h {Number}\n * @param isDescription {Boolean}\n * @returns {Object} : NSTextField\n */\nfunction createLabel(name, x, y, w, h, isDescription) {\n\n  const label = NSTextField.alloc().initWithFrame_(NSMakeRect(x, y, w, h));\n  if (isDescription) {\n    label.setTextColor(NSColor.colorWithCalibratedRed_green_blue_alpha(0 / 255, 0 / 255, 0 / 255, 0.6));\n  }\n  label.setEditable_(false);\n  label.setSelectable_(false);\n  label.setBezeled_(false);\n  label.setDrawsBackground_(false);\n  label.setFont(NSFont.systemFontOfSize((isDescription) ? 11 : 13));\n  label.setStringValue_(name);\n\n  return label;\n}\n\n/**\n * @name getSelectedArtboards\n * @description get selected artboards\n * @param context\n * @returns {Array} : MSArtboardGroup\n */\nfunction getSelectedArtboardsAndSymbols(context) {\n  let selectedArtboardsAndSymbols = []\n\n  context.selection.forEach(function (layer) {\n    let className = String(layer.class())\n    if (className !== 'MSArtboardGroup' || className !== 'MSSymbolMaster') {\n      layer = layer.parentRoot()\n      className = String(layer.class())\n    }\n\n    if (selectedArtboardsAndSymbols.indexOf(String(layer.objectID())) === -1 && (className === 'MSArtboardGroup' || className === 'MSSymbolMaster')) {\n      selectedArtboardsAndSymbols.push({\n        'object': layer,\n        'type': className,\n        'id': layer.objectID()\n      })\n    }\n  })\n\n  selectedArtboardsAndSymbols = selectedArtboardsAndSymbols.filter((rootElement, index, self) =>\n    index === self.findIndex((compareElement) => (\n      compareElement.id === rootElement.id\n    ))\n  )\n\n  return selectedArtboardsAndSymbols\n}\n\n/**\n * @name createWebview\n * @param context\n * @param pickerButton\n * @param setColor {function}\n * @return {Object} : WebView\n */\nfunction createWebview(context, pickerButton, setColor) {\n\n  const webView = WebView.alloc().initWithFrame(NSMakeRect(0, 0, 220, 300));\n  const windowObject = webView.windowScriptObject();\n  const delegate = new MochaJSDelegate({\n    \"webView:didFinishLoadForFrame:\": (function (webView, webFrame) {\n      logger.log('loaded')\n    }),\n    \"webView:didChangeLocationWithinPageForFrame:\": (function (webView, webFrame) {\n      const query = windowObject.evaluateWebScript('window.location.hash')\n      const color = JSON.parse(decodeURIComponent(query).split('color=')[1])\n      color.r = parseInt(color.r) / 255\n      color.g = parseInt(color.g) / 255\n      color.b = parseInt(color.b) / 255\n      color.a = parseFloat(color.a)\n\n      const colorNS = NSColor.colorWithRed_green_blue_alpha(color.r, color.g, color.b, color.a)\n      const colorMS = MSImmutableColor.colorWithNSColor(colorNS)\n\n      pickerButton.setImage(getImageByColor(colorNS, { width: 40, height: 30 }))\n      setColor(colorMS)\n    })\n  })\n\n  webView.setDrawsBackground(false)\n  webView.setMainFrameURL_(context.plugin.urlForResourceNamed(\"webview.html\").path());\n  webView.setFrameLoadDelegate_(delegate.getClassInstance());\n  return webView\n}\n\n\n/**\n * @name createDivider\n * @param frame\n * @return {*}\n */\nfunction createDivider(frame) {\n  const divider = NSView.alloc().initWithFrame(frame);\n\n  divider.setWantsLayer(1);\n  divider.layer().setBackgroundColor(CGColorCreateGenericRGB(204 / 255, 204 / 255, 204 / 255, 1.0));\n\n  return divider;\n}\n\n/**\n * @name runFramework\n * @param context\n * @return {boolean}\n */\nfunction runFramework(context) {\n\n  const mocha = Mocha.sharedRuntime();\n\n  const frameworkName = \"SketchIconsFramework\";\n  const directory = context.scriptPath.stringByDeletingLastPathComponent();\n\n  if (mocha.valueForKey(frameworkName)) {\n    return true;\n  } else if (mocha.loadFrameworkWithName_inDirectory(frameworkName, directory)) {\n    mocha.setValue_forKey_(true, frameworkName);\n    return true;\n  } else {\n    log(\"❌ loadFramework: `\" + frameworkName + \"` failed!: \" + directory + \". Please define SketchIcons_FrameworkPath if you're trying to @import in a custom plugin\");\n    return false;\n  }\n}\n\n\n/**\n * @name getImageByColor\n * @param color\n * @param colorSize\n * @return {Object} : NSImage\n */\nfunction getImageByColor(color, colorSize = { width: 14, height: 14 }) {\n  const size = CGSizeMake(colorSize.width, colorSize.height);\n  const image = NSImage.alloc().init()\n  image.size = size\n  image.lockFocus()\n  const colorCell = MSBackgroundColorView.alloc().init()\n  colorCell.backgroundColor = color\n  colorCell.drawRect(NSMakeRect(0, 0, colorSize.width, colorSize.height))\n  image.unlockFocus()\n\n  return image\n}\n\n/**\n * @name iconHasColor\n * @param artboard\n * @return {Boolean}\n */\nfunction hasMask(artboard) {\n  return !!artboard.firstLayer().hasClippingMask()\n}\n\nfunction layerToSvg(layer) {\n  const svgExporter = SketchSVGExporter.alloc().init();\n  const svgData = svgExporter.exportLayers([layer.immutableModelObject()]);\n  return NSString.alloc().initWithData_encoding(svgData, NSUTF8StringEncoding);\n}\n\nfunction svgHasStroke(rootObject) {\n  let hasBorder = false\n  rootObject.children().forEach((layer) => {\n    if (layer.styledLayer().style().hasEnabledBorder()) {\n      hasBorder = true\n    }\n  })\n\n  return hasBorder\n}\n\nfunction getBorderColor(rootObject) {\n  let color;\n  const layers = rootObject.children()\n\n  for (let i = 0; i < layers.length; i++) {\n    let style = layers[i].styledLayer().style()\n    color = style.firstEnabledBorder()\n    if (color) break\n  }\n\n  return color\n}\n\nfunction convertMSColorToString(colorMS) {\n  return JSON.stringify({ r: colorMS.red(), g: colorMS.green(), b: colorMS.blue(), a: colorMS.alpha() })\n}\n\nfunction convertStringToMSColor(string) {\n  const color = (typeof string !== 'object') ? string : JSON.parse(string)\n  const colorNS = NSColor.colorWithRed_green_blue_alpha(color.r, color.g, color.b, color.a)\n\n  return MSImmutableColor.colorWithNSColor(colorNS)\n}\n\nfunction getRootObject(context) {\n  const result = [];\n  context.api().selectedDocument.selectedPage.sketchObject.layers().forEach((layer) => {\n    let className = String(layer.class())\n    if (className === 'MSArtboardGroup' || className === 'MSSymbolMaster') {\n      result.push(layer)\n    }\n  })\n\n  return result;\n}\n\nfunction getSizeBetweenIcon(rootObjectSize, size) {\n  const value = parseInt(size)\n  const unit = size.replace(value, '')\n  return (unit && unit === '%') ? rootObjectSize + rootObjectSize * (value / 100) : rootObjectSize + value;\n}\n\nfunction buildPrefix(context, rootObjectSize) {\n  const settings = settingsProvider.getSettings(context, 'default')\n  // console.log('>>>>>>>>>>>', (settings.prefixRootObject.data !== 'null'));\n  // console.log('>>>>>>>>>>>', settings.prefixRootObject.data);\n  return (settings.prefixRootObject.data !== 'null') ? settings.prefixRootObject.data.replace('$size', rootObjectSize) : '';\n\n}\n\n// function zoomOutOfPage(context){\n//   const currentPage = context.document.currentPage()\n//   const artboards = [];\n//     currentPage.layers().forEach(layer => {\n//       artboards.push(layer)\n//     })\n//   currentPage.changeSelectionBySelectingLayers(artboards);\n//\n//\n//   MSDocument.currentDocument().eventHandlerManager().currentHandler().zoomToSelection()\n// }\n"],"sourceRoot":""}